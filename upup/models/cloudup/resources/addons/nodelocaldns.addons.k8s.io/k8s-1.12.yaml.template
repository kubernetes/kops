# Vendored from https://github.com/kubernetes/kubernetes/blob/master/cluster/addons/dns/nodelocaldns/nodelocaldns.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-local-dns
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: v1
kind: Service
metadata:
  name: kube-dns-upstream
  namespace: kube-system
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "KubeDNSUpstream"
spec:
  ports:
  - name: dns
    port: 53
    protocol: UDP
    targetPort: 53
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: 53
  selector:
    k8s-app: kube-dns
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-local-dns
  namespace: kube-system
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
  Corefile: |
  {{- if KubeDNS.NodeLocalDNS.ExternalCoreFile }}
{{ KubeDNS.NodeLocalDNS.ExternalCoreFile | indent 4 }}
  {{- else }}
    {{ KubeDNS.Domain }}:53 {
        errors
        cache {
          success 9984 30
          denial 9984 5
        }
        reload
        loop
        bind 0.0.0.0
        forward . {{ NodeLocalDNSClusterIP }} {
          force_tcp
        }
        prometheus :9253
        health :{{ NodeLocalDNSHealthCheck }}
    }
    {{- if WithDefaultBool KubeDNS.NodeLocalDNS.ForwardToKubeDNS false }}
    .:53 {
        errors
        cache 30
        reload
        loop
        bind 0.0.0.0
        forward . {{ NodeLocalDNSClusterIP }} {
          force_tcp
        }
        prometheus :9253
    }
    {{- else }}
    in-addr.arpa:53 {
        errors
        cache 30
        reload
        loop
        bind 0.0.0.0
        forward . {{ NodeLocalDNSClusterIP }} {
          force_tcp
        }
        prometheus :9253
    }
    ip6.arpa:53 {
        errors
        cache 30
        reload
        loop
        bind 0.0.0.0
        forward . {{ NodeLocalDNSClusterIP }} {
          force_tcp
        }
        prometheus :9253
    }
    .:53 {
        errors
        cache 30
        reload
        loop
        bind 0.0.0.0
        forward . __PILLAR__UPSTREAM__SERVERS__
        prometheus :9253
        {{- if IsIPv6Only }}
        dns64
        {{- end }}
    }
    {{- end }}
{{ KubeDNS.NodeLocalDNS.AdditionalConfig | indent 4 }}
  {{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-local-dns
  namespace: kube-system
  labels:
    k8s-app: node-local-dns
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      k8s-app: node-local-dns
  template:
    metadata:
      labels:
        k8s-app: node-local-dns
      annotations:
        policy.cilium.io/no-track-port: "53"
        prometheus.io/port: "9253"
        prometheus.io/scrape: "true"
        {{- range $key, $value := KubeDNS.NodeLocalDNS.PodAnnotations }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: node-local-dns
      {{- if or (.Networking.Cilium) ( .KubeDNS.NodeLocalDNS.CiliumBPFCompatibility) }}
      hostNetwork: false
      {{- else }}
      hostNetwork: true
      {{- end }}
      dnsPolicy: Default  # Don't use cluster DNS.
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      - effect: "NoExecute"
        operator: "Exists"
      - effect: "NoSchedule"
        operator: "Exists"
      containers:
      - name: node-cache
        image: {{ KubeDNS.NodeLocalDNS.Image }}
        resources:
          requests:
            cpu: {{ KubeDNS.NodeLocalDNS.CPURequest }}
            memory: {{ KubeDNS.NodeLocalDNS.MemoryRequest }}
        args:
          {{- if or (.Networking.Cilium) ( .KubeDNS.NodeLocalDNS.CiliumBPFCompatibility) }}
          - -localip={{ .KubeDNS.NodeLocalDNS.LocalIP }},{{ .KubeDNS.ServerIP }}
          - -skipteardown=true
          - -setupinterface=false
          {{- else }}
          - -localip={{ .KubeDNS.NodeLocalDNS.LocalIP }}
          {{- end }}
          - -conf=/etc/Corefile
          - -upstreamsvc=kube-dns-upstream
          - -setupiptables=false
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
{{ if ContainerdSELinuxEnabled }}
          seLinuxOptions:
            type: spc_t
            level: s0
{{ end }}
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9253
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            host: {{ .KubeDNS.NodeLocalDNS.LocalIP }}
            path: /health
            port: {{ NodeLocalDNSHealthCheck }}
          initialDelaySeconds: 60
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: xtables-lock
          readOnly: false
        - name: config-volume
          mountPath: /etc/coredns
        - name: kube-dns-config
          mountPath: /etc/kube-dns
      volumes:
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: kube-dns-config
        configMap:
          name: kube-dns
          optional: true
      - name: config-volume
        configMap:
          name: node-local-dns
          items:
            - key: Corefile
              path: Corefile.base
{{- if or (.Networking.Cilium) ( .KubeDNS.NodeLocalDNS.CiliumBPFCompatibility) }}
---
apiVersion: "cilium.io/v2"
kind: CiliumLocalRedirectPolicy
metadata:
  name: "nodelocaldns"
  namespace: kube-system
spec:
  redirectFrontend:
    serviceMatcher:
      serviceName: kube-dns
      namespace: kube-system
  redirectBackend:
    localEndpointSelector:
      matchLabels:
        k8s-app: node-local-dns
    toPorts:
      - port: "53"
        name: dns
        protocol: UDP
      - port: "53"
        name: dns-tcp
        protocol: TCP
{{- end }}
