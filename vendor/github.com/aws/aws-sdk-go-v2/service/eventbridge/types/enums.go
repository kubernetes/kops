// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ApiDestinationHttpMethod string

// Enum values for ApiDestinationHttpMethod
const (
	ApiDestinationHttpMethodPost    ApiDestinationHttpMethod = "POST"
	ApiDestinationHttpMethodGet     ApiDestinationHttpMethod = "GET"
	ApiDestinationHttpMethodHead    ApiDestinationHttpMethod = "HEAD"
	ApiDestinationHttpMethodOptions ApiDestinationHttpMethod = "OPTIONS"
	ApiDestinationHttpMethodPut     ApiDestinationHttpMethod = "PUT"
	ApiDestinationHttpMethodPatch   ApiDestinationHttpMethod = "PATCH"
	ApiDestinationHttpMethodDelete  ApiDestinationHttpMethod = "DELETE"
)

// Values returns all known values for ApiDestinationHttpMethod. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApiDestinationHttpMethod) Values() []ApiDestinationHttpMethod {
	return []ApiDestinationHttpMethod{
		"POST",
		"GET",
		"HEAD",
		"OPTIONS",
		"PUT",
		"PATCH",
		"DELETE",
	}
}

type ApiDestinationState string

// Enum values for ApiDestinationState
const (
	ApiDestinationStateActive   ApiDestinationState = "ACTIVE"
	ApiDestinationStateInactive ApiDestinationState = "INACTIVE"
)

// Values returns all known values for ApiDestinationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApiDestinationState) Values() []ApiDestinationState {
	return []ApiDestinationState{
		"ACTIVE",
		"INACTIVE",
	}
}

type ArchiveState string

// Enum values for ArchiveState
const (
	ArchiveStateEnabled      ArchiveState = "ENABLED"
	ArchiveStateDisabled     ArchiveState = "DISABLED"
	ArchiveStateCreating     ArchiveState = "CREATING"
	ArchiveStateUpdating     ArchiveState = "UPDATING"
	ArchiveStateCreateFailed ArchiveState = "CREATE_FAILED"
	ArchiveStateUpdateFailed ArchiveState = "UPDATE_FAILED"
)

// Values returns all known values for ArchiveState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveState) Values() []ArchiveState {
	return []ArchiveState{
		"ENABLED",
		"DISABLED",
		"CREATING",
		"UPDATING",
		"CREATE_FAILED",
		"UPDATE_FAILED",
	}
}

type AssignPublicIp string

// Enum values for AssignPublicIp
const (
	AssignPublicIpEnabled  AssignPublicIp = "ENABLED"
	AssignPublicIpDisabled AssignPublicIp = "DISABLED"
)

// Values returns all known values for AssignPublicIp. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssignPublicIp) Values() []AssignPublicIp {
	return []AssignPublicIp{
		"ENABLED",
		"DISABLED",
	}
}

type ConnectionAuthorizationType string

// Enum values for ConnectionAuthorizationType
const (
	ConnectionAuthorizationTypeBasic                  ConnectionAuthorizationType = "BASIC"
	ConnectionAuthorizationTypeOauthClientCredentials ConnectionAuthorizationType = "OAUTH_CLIENT_CREDENTIALS"
	ConnectionAuthorizationTypeApiKey                 ConnectionAuthorizationType = "API_KEY"
)

// Values returns all known values for ConnectionAuthorizationType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionAuthorizationType) Values() []ConnectionAuthorizationType {
	return []ConnectionAuthorizationType{
		"BASIC",
		"OAUTH_CLIENT_CREDENTIALS",
		"API_KEY",
	}
}

type ConnectionOAuthHttpMethod string

// Enum values for ConnectionOAuthHttpMethod
const (
	ConnectionOAuthHttpMethodGet  ConnectionOAuthHttpMethod = "GET"
	ConnectionOAuthHttpMethodPost ConnectionOAuthHttpMethod = "POST"
	ConnectionOAuthHttpMethodPut  ConnectionOAuthHttpMethod = "PUT"
)

// Values returns all known values for ConnectionOAuthHttpMethod. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionOAuthHttpMethod) Values() []ConnectionOAuthHttpMethod {
	return []ConnectionOAuthHttpMethod{
		"GET",
		"POST",
		"PUT",
	}
}

type ConnectionState string

// Enum values for ConnectionState
const (
	ConnectionStateCreating           ConnectionState = "CREATING"
	ConnectionStateUpdating           ConnectionState = "UPDATING"
	ConnectionStateDeleting           ConnectionState = "DELETING"
	ConnectionStateAuthorized         ConnectionState = "AUTHORIZED"
	ConnectionStateDeauthorized       ConnectionState = "DEAUTHORIZED"
	ConnectionStateAuthorizing        ConnectionState = "AUTHORIZING"
	ConnectionStateDeauthorizing      ConnectionState = "DEAUTHORIZING"
	ConnectionStateActive             ConnectionState = "ACTIVE"
	ConnectionStateFailedConnectivity ConnectionState = "FAILED_CONNECTIVITY"
)

// Values returns all known values for ConnectionState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionState) Values() []ConnectionState {
	return []ConnectionState{
		"CREATING",
		"UPDATING",
		"DELETING",
		"AUTHORIZED",
		"DEAUTHORIZED",
		"AUTHORIZING",
		"DEAUTHORIZING",
		"ACTIVE",
		"FAILED_CONNECTIVITY",
	}
}

type EndpointState string

// Enum values for EndpointState
const (
	EndpointStateActive       EndpointState = "ACTIVE"
	EndpointStateCreating     EndpointState = "CREATING"
	EndpointStateUpdating     EndpointState = "UPDATING"
	EndpointStateDeleting     EndpointState = "DELETING"
	EndpointStateCreateFailed EndpointState = "CREATE_FAILED"
	EndpointStateUpdateFailed EndpointState = "UPDATE_FAILED"
	EndpointStateDeleteFailed EndpointState = "DELETE_FAILED"
)

// Values returns all known values for EndpointState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointState) Values() []EndpointState {
	return []EndpointState{
		"ACTIVE",
		"CREATING",
		"UPDATING",
		"DELETING",
		"CREATE_FAILED",
		"UPDATE_FAILED",
		"DELETE_FAILED",
	}
}

type EventSourceState string

// Enum values for EventSourceState
const (
	EventSourceStatePending EventSourceState = "PENDING"
	EventSourceStateActive  EventSourceState = "ACTIVE"
	EventSourceStateDeleted EventSourceState = "DELETED"
)

// Values returns all known values for EventSourceState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventSourceState) Values() []EventSourceState {
	return []EventSourceState{
		"PENDING",
		"ACTIVE",
		"DELETED",
	}
}

type LaunchType string

// Enum values for LaunchType
const (
	LaunchTypeEc2      LaunchType = "EC2"
	LaunchTypeFargate  LaunchType = "FARGATE"
	LaunchTypeExternal LaunchType = "EXTERNAL"
)

// Values returns all known values for LaunchType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LaunchType) Values() []LaunchType {
	return []LaunchType{
		"EC2",
		"FARGATE",
		"EXTERNAL",
	}
}

type PlacementConstraintType string

// Enum values for PlacementConstraintType
const (
	PlacementConstraintTypeDistinctInstance PlacementConstraintType = "distinctInstance"
	PlacementConstraintTypeMemberOf         PlacementConstraintType = "memberOf"
)

// Values returns all known values for PlacementConstraintType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PlacementConstraintType) Values() []PlacementConstraintType {
	return []PlacementConstraintType{
		"distinctInstance",
		"memberOf",
	}
}

type PlacementStrategyType string

// Enum values for PlacementStrategyType
const (
	PlacementStrategyTypeRandom  PlacementStrategyType = "random"
	PlacementStrategyTypeSpread  PlacementStrategyType = "spread"
	PlacementStrategyTypeBinpack PlacementStrategyType = "binpack"
)

// Values returns all known values for PlacementStrategyType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PlacementStrategyType) Values() []PlacementStrategyType {
	return []PlacementStrategyType{
		"random",
		"spread",
		"binpack",
	}
}

type PropagateTags string

// Enum values for PropagateTags
const (
	PropagateTagsTaskDefinition PropagateTags = "TASK_DEFINITION"
)

// Values returns all known values for PropagateTags. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PropagateTags) Values() []PropagateTags {
	return []PropagateTags{
		"TASK_DEFINITION",
	}
}

type ReplayState string

// Enum values for ReplayState
const (
	ReplayStateStarting   ReplayState = "STARTING"
	ReplayStateRunning    ReplayState = "RUNNING"
	ReplayStateCancelling ReplayState = "CANCELLING"
	ReplayStateCompleted  ReplayState = "COMPLETED"
	ReplayStateCancelled  ReplayState = "CANCELLED"
	ReplayStateFailed     ReplayState = "FAILED"
)

// Values returns all known values for ReplayState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReplayState) Values() []ReplayState {
	return []ReplayState{
		"STARTING",
		"RUNNING",
		"CANCELLING",
		"COMPLETED",
		"CANCELLED",
		"FAILED",
	}
}

type ReplicationState string

// Enum values for ReplicationState
const (
	ReplicationStateEnabled  ReplicationState = "ENABLED"
	ReplicationStateDisabled ReplicationState = "DISABLED"
)

// Values returns all known values for ReplicationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReplicationState) Values() []ReplicationState {
	return []ReplicationState{
		"ENABLED",
		"DISABLED",
	}
}

type RuleState string

// Enum values for RuleState
const (
	RuleStateEnabled                                  RuleState = "ENABLED"
	RuleStateDisabled                                 RuleState = "DISABLED"
	RuleStateEnabledWithAllCloudtrailManagementEvents RuleState = "ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS"
)

// Values returns all known values for RuleState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleState) Values() []RuleState {
	return []RuleState{
		"ENABLED",
		"DISABLED",
		"ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS",
	}
}
