apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.kindnet
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: kindnet
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.kindnet
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: kindnet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kindnet
subjects:
- kind: ServiceAccount
  name: kindnet
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.kindnet
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: kindnet
  namespace: kube-system

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.kindnet
    app: kindnet
    app.kubernetes.io/managed-by: kops
    k8s-app: kindnet
    role.kubernetes.io/networking: "1"
    tier: node
  name: kindnet
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: kindnet
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kindnet
        k8s-app: kindnet
        kops.k8s.io/managed-by: kops
        tier: node
    spec:
      containers:
      - args:
        - /bin/kindnetd
        - --hostname-override=$(NODE_NAME)
        - --v=2
        - --masquerading=true
        - --no-masquerade-cidr=172.20.0.0/16,100.96.0.0/11,100.64.0.0/13
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: ghcr.io/aojea/kindnetd:v1.8.0
        name: kindnet-cni
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_RAW
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni-cfg
        - mountPath: /var/lib/cni-kindnet
          name: var-lib-kindnet
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -c
        - cat /opt/cni/bin/cni-kindnet > /cni/cni-kindnet ; chmod +x /cni/cni-kindnet
        image: ghcr.io/aojea/kindnetd:v1.8.0
        name: install-cni-bin
        volumeMounts:
        - mountPath: /cni
          name: cni-bin
      serviceAccountName: kindnet
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-bin
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: cni-cfg
      - hostPath:
          path: /var/lib/cni-kindnet
          type: DirectoryOrCreate
        name: var-lib-kindnet
