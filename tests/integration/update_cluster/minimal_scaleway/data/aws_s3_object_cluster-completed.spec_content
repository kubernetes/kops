apiVersion: kops.k8s.io/v1alpha2
kind: Cluster
metadata:
  creationTimestamp: "2023-01-01T00:00:00Z"
  name: scw-minimal.k8s.local
spec:
  api:
    loadBalancer:
      type: Public
  authorization:
    rbac: {}
  channel: stable
  cloudConfig:
    manageStorageClasses: true
  cloudProvider: scaleway
  clusterDNSDomain: cluster.local
  configBase: memfs://tests/scw-minimal.k8s.local
  containerd:
    logLevel: info
    runc:
      version: 1.3.0
    version: 2.1.4
  etcdClusters:
  - backups:
      backupStore: memfs://tests/scw-minimal.k8s.local/backups/etcd/main
    cpuRequest: 200m
    etcdMembers:
    - instanceGroup: control-plane-fr-par-1
      name: etcd-1
    manager:
      backupRetentionDays: 90
    memoryRequest: 100Mi
    name: main
    version: 3.5.24
  - backups:
      backupStore: memfs://tests/scw-minimal.k8s.local/backups/etcd/events
    cpuRequest: 100m
    etcdMembers:
    - instanceGroup: control-plane-fr-par-1
      name: etcd-1
    manager:
      backupRetentionDays: 90
    memoryRequest: 100Mi
    name: events
    version: 3.5.24
  externalDns:
    provider: dns-controller
  iam:
    allowContainerRegistry: true
    legacy: false
  keyStore: memfs://tests/scw-minimal.k8s.local/pki
  kubeAPIServer:
    allowPrivileged: true
    anonymousAuth: false
    apiAudiences:
    - kubernetes.svc.default
    apiServerCount: 1
    authorizationMode: Node,RBAC
    bindAddress: 0.0.0.0
    cloudProvider: external
    enableAdmissionPlugins:
    - DefaultStorageClass
    - DefaultTolerationSeconds
    - LimitRanger
    - MutatingAdmissionWebhook
    - NamespaceLifecycle
    - NodeRestriction
    - ResourceQuota
    - RuntimeClass
    - ServiceAccount
    - ValidatingAdmissionPolicy
    - ValidatingAdmissionWebhook
    etcdServers:
    - https://127.0.0.1:4001
    etcdServersOverrides:
    - /events#https://127.0.0.1:4002
    image: registry.k8s.io/kube-apiserver:v1.32.0
    kubeletPreferredAddressTypes:
    - InternalIP
    - Hostname
    - ExternalIP
    logLevel: 2
    requestheaderAllowedNames:
    - aggregator
    requestheaderExtraHeaderPrefixes:
    - X-Remote-Extra-
    requestheaderGroupHeaders:
    - X-Remote-Group
    requestheaderUsernameHeaders:
    - X-Remote-User
    securePort: 443
    serviceAccountIssuer: https://api.internal.scw-minimal.k8s.local
    serviceAccountJWKSURI: https://api.internal.scw-minimal.k8s.local/openid/v1/jwks
    serviceClusterIPRange: 100.64.0.0/13
    storageBackend: etcd3
  kubeControllerManager:
    allocateNodeCIDRs: true
    attachDetachReconcileSyncPeriod: 1m0s
    cloudProvider: external
    clusterCIDR: 100.96.0.0/11
    clusterName: scw-minimal.k8s.local
    configureCloudRoutes: false
    image: registry.k8s.io/kube-controller-manager:v1.32.0
    leaderElection:
      leaderElect: true
    logLevel: 2
    useServiceAccountCredentials: true
  kubeDNS:
    cacheMaxConcurrent: 150
    cacheMaxSize: 1000
    cpuRequest: 100m
    domain: cluster.local
    memoryLimit: 170Mi
    memoryRequest: 70Mi
    nodeLocalDNS:
      cpuRequest: 25m
      enabled: false
      image: registry.k8s.io/dns/k8s-dns-node-cache:1.26.0
      memoryRequest: 5Mi
    provider: CoreDNS
    serverIP: 100.64.0.10
  kubeProxy:
    clusterCIDR: 100.96.0.0/11
    cpuRequest: 100m
    enabled: false
    image: registry.k8s.io/kube-proxy:v1.32.0
    logLevel: 2
  kubeScheduler:
    image: registry.k8s.io/kube-scheduler:v1.32.0
    leaderElection:
      leaderElect: true
    logLevel: 2
  kubelet:
    anonymousAuth: false
    cgroupDriver: systemd
    cgroupRoot: /
    cloudProvider: external
    clusterDNS: 100.64.0.10
    clusterDomain: cluster.local
    enableDebuggingHandlers: true
    evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%
    kubeconfigPath: /var/lib/kubelet/kubeconfig
    logLevel: 2
    podInfraContainerImage: registry.k8s.io/pause:3.9
    podManifestPath: /etc/kubernetes/manifests
    protectKernelDefaults: true
    registerSchedulable: true
    shutdownGracePeriod: 30s
    shutdownGracePeriodCriticalPods: 10s
  kubernetesApiAccess:
  - 0.0.0.0/0
  - ::/0
  kubernetesVersion: 1.32.0
  masterKubelet:
    anonymousAuth: false
    cgroupDriver: systemd
    cgroupRoot: /
    cloudProvider: external
    clusterDNS: 100.64.0.10
    clusterDomain: cluster.local
    enableDebuggingHandlers: true
    evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%
    kubeconfigPath: /var/lib/kubelet/kubeconfig
    logLevel: 2
    podInfraContainerImage: registry.k8s.io/pause:3.9
    podManifestPath: /etc/kubernetes/manifests
    protectKernelDefaults: true
    registerSchedulable: true
    shutdownGracePeriod: 30s
    shutdownGracePeriodCriticalPods: 10s
  networking:
    cilium:
      agentPrometheusPort: 9090
      bpfCTGlobalAnyMax: 262144
      bpfCTGlobalTCPMax: 524288
      bpfLBAlgorithm: random
      bpfLBMaglevTableSize: "16381"
      bpfLBMapMax: 65536
      bpfNATGlobalMax: 524288
      bpfNeighGlobalMax: 524288
      bpfPolicyMapMax: 16384
      clusterName: default
      cniExclusive: true
      cpuRequest: 25m
      disableCNPStatusUpdates: true
      disableMasquerade: false
      enableBPFMasquerade: false
      enableEndpointHealthChecking: true
      enableL7Proxy: true
      enableLocalRedirectPolicy: false
      enableNodePort: true
      enableRemoteNodeIdentity: true
      enableUnreachableRoutes: false
      gatewayAPI:
        enabled: false
      hubble:
        enabled: false
      identityAllocationMode: crd
      identityChangeGracePeriod: 5s
      ingress:
        enabled: false
      ipam: kubernetes
      memoryRequest: 128Mi
      monitorAggregation: medium
      sidecarIstioProxyImage: cilium/istio_proxy
      toFqdnsDnsRejectResponseCode: refused
      tunnel: vxlan
      version: v1.18.2
  nonMasqueradeCIDR: 100.64.0.0/10
  podCIDR: 100.96.0.0/11
  secretStore: memfs://tests/scw-minimal.k8s.local/secrets
  serviceClusterIPRange: 100.64.0.0/13
  sshAccess:
  - 0.0.0.0/0
  - ::/0
  subnets:
  - name: fr-par-1
    type: Public
    zone: fr-par-1
  topology:
    dns:
      type: Private
