//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha2

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	kops "k8s.io/kops/pkg/apis/kops"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*APISpec)(nil), (*kops.APISpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_APISpec_To_kops_APISpec(a.(*APISpec), b.(*kops.APISpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.APISpec)(nil), (*APISpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_APISpec_To_v1alpha2_APISpec(a.(*kops.APISpec), b.(*APISpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSAuthenticationIdentityMappingSpec)(nil), (*kops.AWSAuthenticationIdentityMappingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSAuthenticationIdentityMappingSpec_To_kops_AWSAuthenticationIdentityMappingSpec(a.(*AWSAuthenticationIdentityMappingSpec), b.(*kops.AWSAuthenticationIdentityMappingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AWSAuthenticationIdentityMappingSpec)(nil), (*AWSAuthenticationIdentityMappingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AWSAuthenticationIdentityMappingSpec_To_v1alpha2_AWSAuthenticationIdentityMappingSpec(a.(*kops.AWSAuthenticationIdentityMappingSpec), b.(*AWSAuthenticationIdentityMappingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSAuthenticationSpec)(nil), (*kops.AWSAuthenticationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSAuthenticationSpec_To_kops_AWSAuthenticationSpec(a.(*AWSAuthenticationSpec), b.(*kops.AWSAuthenticationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AWSAuthenticationSpec)(nil), (*AWSAuthenticationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AWSAuthenticationSpec_To_v1alpha2_AWSAuthenticationSpec(a.(*kops.AWSAuthenticationSpec), b.(*AWSAuthenticationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSPermission)(nil), (*kops.AWSPermission)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSPermission_To_kops_AWSPermission(a.(*AWSPermission), b.(*kops.AWSPermission), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AWSPermission)(nil), (*AWSPermission)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AWSPermission_To_v1alpha2_AWSPermission(a.(*kops.AWSPermission), b.(*AWSPermission), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AcceleratorConfig)(nil), (*kops.AcceleratorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AcceleratorConfig_To_kops_AcceleratorConfig(a.(*AcceleratorConfig), b.(*kops.AcceleratorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AcceleratorConfig)(nil), (*AcceleratorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AcceleratorConfig_To_v1alpha2_AcceleratorConfig(a.(*kops.AcceleratorConfig), b.(*AcceleratorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AccessLogSpec)(nil), (*kops.AccessLogSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AccessLogSpec_To_kops_AccessLogSpec(a.(*AccessLogSpec), b.(*kops.AccessLogSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AccessLogSpec)(nil), (*AccessLogSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AccessLogSpec_To_v1alpha2_AccessLogSpec(a.(*kops.AccessLogSpec), b.(*AccessLogSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonSpec)(nil), (*kops.AddonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonSpec_To_kops_AddonSpec(a.(*AddonSpec), b.(*kops.AddonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AddonSpec)(nil), (*AddonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AddonSpec_To_v1alpha2_AddonSpec(a.(*kops.AddonSpec), b.(*AddonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlwaysAllowAuthorizationSpec)(nil), (*kops.AlwaysAllowAuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AlwaysAllowAuthorizationSpec_To_kops_AlwaysAllowAuthorizationSpec(a.(*AlwaysAllowAuthorizationSpec), b.(*kops.AlwaysAllowAuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AlwaysAllowAuthorizationSpec)(nil), (*AlwaysAllowAuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AlwaysAllowAuthorizationSpec_To_v1alpha2_AlwaysAllowAuthorizationSpec(a.(*kops.AlwaysAllowAuthorizationSpec), b.(*AlwaysAllowAuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AmazonVPCNetworkingSpec)(nil), (*kops.AmazonVPCNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AmazonVPCNetworkingSpec_To_kops_AmazonVPCNetworkingSpec(a.(*AmazonVPCNetworkingSpec), b.(*kops.AmazonVPCNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AmazonVPCNetworkingSpec)(nil), (*AmazonVPCNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AmazonVPCNetworkingSpec_To_v1alpha2_AmazonVPCNetworkingSpec(a.(*kops.AmazonVPCNetworkingSpec), b.(*AmazonVPCNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AssetsSpec)(nil), (*kops.AssetsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AssetsSpec_To_kops_AssetsSpec(a.(*AssetsSpec), b.(*kops.AssetsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AssetsSpec)(nil), (*AssetsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AssetsSpec_To_v1alpha2_AssetsSpec(a.(*kops.AssetsSpec), b.(*AssetsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthenticationSpec)(nil), (*kops.AuthenticationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AuthenticationSpec_To_kops_AuthenticationSpec(a.(*AuthenticationSpec), b.(*kops.AuthenticationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AuthenticationSpec)(nil), (*AuthenticationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AuthenticationSpec_To_v1alpha2_AuthenticationSpec(a.(*kops.AuthenticationSpec), b.(*AuthenticationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthorizationSpec)(nil), (*kops.AuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AuthorizationSpec_To_kops_AuthorizationSpec(a.(*AuthorizationSpec), b.(*kops.AuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AuthorizationSpec)(nil), (*AuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AuthorizationSpec_To_v1alpha2_AuthorizationSpec(a.(*kops.AuthorizationSpec), b.(*AuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureSpec)(nil), (*kops.AzureSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AzureSpec_To_kops_AzureSpec(a.(*AzureSpec), b.(*kops.AzureSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.AzureSpec)(nil), (*AzureSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_AzureSpec_To_v1alpha2_AzureSpec(a.(*kops.AzureSpec), b.(*AzureSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BastionLoadBalancerSpec)(nil), (*kops.BastionLoadBalancerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_BastionLoadBalancerSpec_To_kops_BastionLoadBalancerSpec(a.(*BastionLoadBalancerSpec), b.(*kops.BastionLoadBalancerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.BastionLoadBalancerSpec)(nil), (*BastionLoadBalancerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_BastionLoadBalancerSpec_To_v1alpha2_BastionLoadBalancerSpec(a.(*kops.BastionLoadBalancerSpec), b.(*BastionLoadBalancerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BastionSpec)(nil), (*kops.BastionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_BastionSpec_To_kops_BastionSpec(a.(*BastionSpec), b.(*kops.BastionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.BastionSpec)(nil), (*BastionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_BastionSpec_To_v1alpha2_BastionSpec(a.(*kops.BastionSpec), b.(*BastionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CNINetworkingSpec)(nil), (*kops.CNINetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CNINetworkingSpec_To_kops_CNINetworkingSpec(a.(*CNINetworkingSpec), b.(*kops.CNINetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.CNINetworkingSpec)(nil), (*CNINetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CNINetworkingSpec_To_v1alpha2_CNINetworkingSpec(a.(*kops.CNINetworkingSpec), b.(*CNINetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CalicoNetworkingSpec)(nil), (*kops.CalicoNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CalicoNetworkingSpec_To_kops_CalicoNetworkingSpec(a.(*CalicoNetworkingSpec), b.(*kops.CalicoNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.CalicoNetworkingSpec)(nil), (*CalicoNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CalicoNetworkingSpec_To_v1alpha2_CalicoNetworkingSpec(a.(*kops.CalicoNetworkingSpec), b.(*CalicoNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CertManagerConfig)(nil), (*kops.CertManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CertManagerConfig_To_kops_CertManagerConfig(a.(*CertManagerConfig), b.(*kops.CertManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.CertManagerConfig)(nil), (*CertManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CertManagerConfig_To_v1alpha2_CertManagerConfig(a.(*kops.CertManagerConfig), b.(*CertManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CiliumIngressSpec)(nil), (*kops.CiliumIngressSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CiliumIngressSpec_To_kops_CiliumIngressSpec(a.(*CiliumIngressSpec), b.(*kops.CiliumIngressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.CiliumIngressSpec)(nil), (*CiliumIngressSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CiliumIngressSpec_To_v1alpha2_CiliumIngressSpec(a.(*kops.CiliumIngressSpec), b.(*CiliumIngressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClassicNetworkingSpec)(nil), (*kops.ClassicNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClassicNetworkingSpec_To_kops_ClassicNetworkingSpec(a.(*ClassicNetworkingSpec), b.(*kops.ClassicNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ClassicNetworkingSpec)(nil), (*ClassicNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ClassicNetworkingSpec_To_v1alpha2_ClassicNetworkingSpec(a.(*kops.ClassicNetworkingSpec), b.(*ClassicNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CloudConfiguration)(nil), (*kops.CloudConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CloudConfiguration_To_kops_CloudConfiguration(a.(*CloudConfiguration), b.(*kops.CloudConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.CloudConfiguration)(nil), (*CloudConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CloudConfiguration_To_v1alpha2_CloudConfiguration(a.(*kops.CloudConfiguration), b.(*CloudConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CloudControllerManagerConfig)(nil), (*kops.CloudControllerManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CloudControllerManagerConfig_To_kops_CloudControllerManagerConfig(a.(*CloudControllerManagerConfig), b.(*kops.CloudControllerManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.CloudControllerManagerConfig)(nil), (*CloudControllerManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CloudControllerManagerConfig_To_v1alpha2_CloudControllerManagerConfig(a.(*kops.CloudControllerManagerConfig), b.(*CloudControllerManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Cluster)(nil), (*kops.Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Cluster_To_kops_Cluster(a.(*Cluster), b.(*kops.Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.Cluster)(nil), (*Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_Cluster_To_v1alpha2_Cluster(a.(*kops.Cluster), b.(*Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAutoscalerConfig)(nil), (*kops.ClusterAutoscalerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAutoscalerConfig_To_kops_ClusterAutoscalerConfig(a.(*ClusterAutoscalerConfig), b.(*kops.ClusterAutoscalerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ClusterAutoscalerConfig)(nil), (*ClusterAutoscalerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ClusterAutoscalerConfig_To_v1alpha2_ClusterAutoscalerConfig(a.(*kops.ClusterAutoscalerConfig), b.(*ClusterAutoscalerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterList)(nil), (*kops.ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterList_To_kops_ClusterList(a.(*ClusterList), b.(*kops.ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ClusterList)(nil), (*ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ClusterList_To_v1alpha2_ClusterList(a.(*kops.ClusterList), b.(*ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterSubnetSpec)(nil), (*kops.ClusterSubnetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterSubnetSpec_To_kops_ClusterSubnetSpec(a.(*ClusterSubnetSpec), b.(*kops.ClusterSubnetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ClusterSubnetSpec)(nil), (*ClusterSubnetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ClusterSubnetSpec_To_v1alpha2_ClusterSubnetSpec(a.(*kops.ClusterSubnetSpec), b.(*ClusterSubnetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ContainerdConfig)(nil), (*kops.ContainerdConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig(a.(*ContainerdConfig), b.(*kops.ContainerdConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ContainerdConfig)(nil), (*ContainerdConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig(a.(*kops.ContainerdConfig), b.(*ContainerdConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DCGMExporterConfig)(nil), (*kops.DCGMExporterConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DCGMExporterConfig_To_kops_DCGMExporterConfig(a.(*DCGMExporterConfig), b.(*kops.DCGMExporterConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.DCGMExporterConfig)(nil), (*DCGMExporterConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_DCGMExporterConfig_To_v1alpha2_DCGMExporterConfig(a.(*kops.DCGMExporterConfig), b.(*DCGMExporterConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DNSAccessSpec)(nil), (*kops.DNSAccessSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DNSAccessSpec_To_kops_DNSAccessSpec(a.(*DNSAccessSpec), b.(*kops.DNSAccessSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.DNSAccessSpec)(nil), (*DNSAccessSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_DNSAccessSpec_To_v1alpha2_DNSAccessSpec(a.(*kops.DNSAccessSpec), b.(*DNSAccessSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DNSControllerGossipConfig)(nil), (*kops.DNSControllerGossipConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DNSControllerGossipConfig_To_kops_DNSControllerGossipConfig(a.(*DNSControllerGossipConfig), b.(*kops.DNSControllerGossipConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.DNSControllerGossipConfig)(nil), (*DNSControllerGossipConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_DNSControllerGossipConfig_To_v1alpha2_DNSControllerGossipConfig(a.(*kops.DNSControllerGossipConfig), b.(*DNSControllerGossipConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DNSControllerGossipConfigSecondary)(nil), (*kops.DNSControllerGossipConfigSecondary)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DNSControllerGossipConfigSecondary_To_kops_DNSControllerGossipConfigSecondary(a.(*DNSControllerGossipConfigSecondary), b.(*kops.DNSControllerGossipConfigSecondary), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.DNSControllerGossipConfigSecondary)(nil), (*DNSControllerGossipConfigSecondary)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_DNSControllerGossipConfigSecondary_To_v1alpha2_DNSControllerGossipConfigSecondary(a.(*kops.DNSControllerGossipConfigSecondary), b.(*DNSControllerGossipConfigSecondary), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DockerConfig)(nil), (*kops.DockerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DockerConfig_To_kops_DockerConfig(a.(*DockerConfig), b.(*kops.DockerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.DockerConfig)(nil), (*DockerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_DockerConfig_To_v1alpha2_DockerConfig(a.(*kops.DockerConfig), b.(*DockerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EBSCSIDriverSpec)(nil), (*kops.EBSCSIDriverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EBSCSIDriverSpec_To_kops_EBSCSIDriverSpec(a.(*EBSCSIDriverSpec), b.(*kops.EBSCSIDriverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EBSCSIDriverSpec)(nil), (*EBSCSIDriverSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EBSCSIDriverSpec_To_v1alpha2_EBSCSIDriverSpec(a.(*kops.EBSCSIDriverSpec), b.(*EBSCSIDriverSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EgressProxySpec)(nil), (*kops.EgressProxySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EgressProxySpec_To_kops_EgressProxySpec(a.(*EgressProxySpec), b.(*kops.EgressProxySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EgressProxySpec)(nil), (*EgressProxySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec(a.(*kops.EgressProxySpec), b.(*EgressProxySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EnvVar)(nil), (*kops.EnvVar)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EnvVar_To_kops_EnvVar(a.(*EnvVar), b.(*kops.EnvVar), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EnvVar)(nil), (*EnvVar)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EnvVar_To_v1alpha2_EnvVar(a.(*kops.EnvVar), b.(*EnvVar), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EtcdBackupSpec)(nil), (*kops.EtcdBackupSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EtcdBackupSpec_To_kops_EtcdBackupSpec(a.(*EtcdBackupSpec), b.(*kops.EtcdBackupSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EtcdBackupSpec)(nil), (*EtcdBackupSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EtcdBackupSpec_To_v1alpha2_EtcdBackupSpec(a.(*kops.EtcdBackupSpec), b.(*EtcdBackupSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EtcdClusterSpec)(nil), (*kops.EtcdClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EtcdClusterSpec_To_kops_EtcdClusterSpec(a.(*EtcdClusterSpec), b.(*kops.EtcdClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EtcdClusterSpec)(nil), (*EtcdClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EtcdClusterSpec_To_v1alpha2_EtcdClusterSpec(a.(*kops.EtcdClusterSpec), b.(*EtcdClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EtcdManagerSpec)(nil), (*kops.EtcdManagerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EtcdManagerSpec_To_kops_EtcdManagerSpec(a.(*EtcdManagerSpec), b.(*kops.EtcdManagerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EtcdManagerSpec)(nil), (*EtcdManagerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EtcdManagerSpec_To_v1alpha2_EtcdManagerSpec(a.(*kops.EtcdManagerSpec), b.(*EtcdManagerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EtcdMemberSpec)(nil), (*kops.EtcdMemberSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EtcdMemberSpec_To_kops_EtcdMemberSpec(a.(*EtcdMemberSpec), b.(*kops.EtcdMemberSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.EtcdMemberSpec)(nil), (*EtcdMemberSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_EtcdMemberSpec_To_v1alpha2_EtcdMemberSpec(a.(*kops.EtcdMemberSpec), b.(*EtcdMemberSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExecContainerAction)(nil), (*kops.ExecContainerAction)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ExecContainerAction_To_kops_ExecContainerAction(a.(*ExecContainerAction), b.(*kops.ExecContainerAction), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ExecContainerAction)(nil), (*ExecContainerAction)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ExecContainerAction_To_v1alpha2_ExecContainerAction(a.(*kops.ExecContainerAction), b.(*ExecContainerAction), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExternalNetworkingSpec)(nil), (*kops.ExternalNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ExternalNetworkingSpec_To_kops_ExternalNetworkingSpec(a.(*ExternalNetworkingSpec), b.(*kops.ExternalNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ExternalNetworkingSpec)(nil), (*ExternalNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ExternalNetworkingSpec_To_v1alpha2_ExternalNetworkingSpec(a.(*kops.ExternalNetworkingSpec), b.(*ExternalNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FileAssetSpec)(nil), (*kops.FileAssetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec(a.(*FileAssetSpec), b.(*kops.FileAssetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.FileAssetSpec)(nil), (*FileAssetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec(a.(*kops.FileAssetSpec), b.(*FileAssetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlannelNetworkingSpec)(nil), (*kops.FlannelNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_FlannelNetworkingSpec_To_kops_FlannelNetworkingSpec(a.(*FlannelNetworkingSpec), b.(*kops.FlannelNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.FlannelNetworkingSpec)(nil), (*FlannelNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_FlannelNetworkingSpec_To_v1alpha2_FlannelNetworkingSpec(a.(*kops.FlannelNetworkingSpec), b.(*FlannelNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GCPNetworkingSpec)(nil), (*kops.GCPNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GCPNetworkingSpec_To_kops_GCPNetworkingSpec(a.(*GCPNetworkingSpec), b.(*kops.GCPNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.GCPNetworkingSpec)(nil), (*GCPNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_GCPNetworkingSpec_To_v1alpha2_GCPNetworkingSpec(a.(*kops.GCPNetworkingSpec), b.(*GCPNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GossipConfig)(nil), (*kops.GossipConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GossipConfig_To_kops_GossipConfig(a.(*GossipConfig), b.(*kops.GossipConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.GossipConfig)(nil), (*GossipConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_GossipConfig_To_v1alpha2_GossipConfig(a.(*kops.GossipConfig), b.(*GossipConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GossipConfigSecondary)(nil), (*kops.GossipConfigSecondary)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GossipConfigSecondary_To_kops_GossipConfigSecondary(a.(*GossipConfigSecondary), b.(*kops.GossipConfigSecondary), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.GossipConfigSecondary)(nil), (*GossipConfigSecondary)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_GossipConfigSecondary_To_v1alpha2_GossipConfigSecondary(a.(*kops.GossipConfigSecondary), b.(*GossipConfigSecondary), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HTTPProxy)(nil), (*kops.HTTPProxy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_HTTPProxy_To_kops_HTTPProxy(a.(*HTTPProxy), b.(*kops.HTTPProxy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.HTTPProxy)(nil), (*HTTPProxy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_HTTPProxy_To_v1alpha2_HTTPProxy(a.(*kops.HTTPProxy), b.(*HTTPProxy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HubbleSpec)(nil), (*kops.HubbleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_HubbleSpec_To_kops_HubbleSpec(a.(*HubbleSpec), b.(*kops.HubbleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.HubbleSpec)(nil), (*HubbleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_HubbleSpec_To_v1alpha2_HubbleSpec(a.(*kops.HubbleSpec), b.(*HubbleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IAMProfileSpec)(nil), (*kops.IAMProfileSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_IAMProfileSpec_To_kops_IAMProfileSpec(a.(*IAMProfileSpec), b.(*kops.IAMProfileSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.IAMProfileSpec)(nil), (*IAMProfileSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_IAMProfileSpec_To_v1alpha2_IAMProfileSpec(a.(*kops.IAMProfileSpec), b.(*IAMProfileSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IAMSpec)(nil), (*kops.IAMSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_IAMSpec_To_kops_IAMSpec(a.(*IAMSpec), b.(*kops.IAMSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.IAMSpec)(nil), (*IAMSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_IAMSpec_To_v1alpha2_IAMSpec(a.(*kops.IAMSpec), b.(*IAMSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InstanceGroup)(nil), (*kops.InstanceGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InstanceGroup_To_kops_InstanceGroup(a.(*InstanceGroup), b.(*kops.InstanceGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.InstanceGroup)(nil), (*InstanceGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_InstanceGroup_To_v1alpha2_InstanceGroup(a.(*kops.InstanceGroup), b.(*InstanceGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InstanceGroupList)(nil), (*kops.InstanceGroupList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InstanceGroupList_To_kops_InstanceGroupList(a.(*InstanceGroupList), b.(*kops.InstanceGroupList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.InstanceGroupList)(nil), (*InstanceGroupList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_InstanceGroupList_To_v1alpha2_InstanceGroupList(a.(*kops.InstanceGroupList), b.(*InstanceGroupList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InstanceMetadataOptions)(nil), (*kops.InstanceMetadataOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InstanceMetadataOptions_To_kops_InstanceMetadataOptions(a.(*InstanceMetadataOptions), b.(*kops.InstanceMetadataOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.InstanceMetadataOptions)(nil), (*InstanceMetadataOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_InstanceMetadataOptions_To_v1alpha2_InstanceMetadataOptions(a.(*kops.InstanceMetadataOptions), b.(*InstanceMetadataOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InstanceRequirementsSpec)(nil), (*kops.InstanceRequirementsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InstanceRequirementsSpec_To_kops_InstanceRequirementsSpec(a.(*InstanceRequirementsSpec), b.(*kops.InstanceRequirementsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.InstanceRequirementsSpec)(nil), (*InstanceRequirementsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_InstanceRequirementsSpec_To_v1alpha2_InstanceRequirementsSpec(a.(*kops.InstanceRequirementsSpec), b.(*InstanceRequirementsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KarpenterConfig)(nil), (*kops.KarpenterConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KarpenterConfig_To_kops_KarpenterConfig(a.(*KarpenterConfig), b.(*kops.KarpenterConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KarpenterConfig)(nil), (*KarpenterConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KarpenterConfig_To_v1alpha2_KarpenterConfig(a.(*kops.KarpenterConfig), b.(*KarpenterConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Keyset)(nil), (*kops.Keyset)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Keyset_To_kops_Keyset(a.(*Keyset), b.(*kops.Keyset), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.Keyset)(nil), (*Keyset)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_Keyset_To_v1alpha2_Keyset(a.(*kops.Keyset), b.(*Keyset), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeysetItem)(nil), (*kops.KeysetItem)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KeysetItem_To_kops_KeysetItem(a.(*KeysetItem), b.(*kops.KeysetItem), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KeysetItem)(nil), (*KeysetItem)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KeysetItem_To_v1alpha2_KeysetItem(a.(*kops.KeysetItem), b.(*KeysetItem), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeysetList)(nil), (*kops.KeysetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KeysetList_To_kops_KeysetList(a.(*KeysetList), b.(*kops.KeysetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KeysetList)(nil), (*KeysetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KeysetList_To_v1alpha2_KeysetList(a.(*kops.KeysetList), b.(*KeysetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeysetSpec)(nil), (*kops.KeysetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KeysetSpec_To_kops_KeysetSpec(a.(*KeysetSpec), b.(*kops.KeysetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KeysetSpec)(nil), (*KeysetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KeysetSpec_To_v1alpha2_KeysetSpec(a.(*kops.KeysetSpec), b.(*KeysetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KopeioAuthenticationSpec)(nil), (*kops.KopeioAuthenticationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KopeioAuthenticationSpec_To_kops_KopeioAuthenticationSpec(a.(*KopeioAuthenticationSpec), b.(*kops.KopeioAuthenticationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KopeioAuthenticationSpec)(nil), (*KopeioAuthenticationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KopeioAuthenticationSpec_To_v1alpha2_KopeioAuthenticationSpec(a.(*kops.KopeioAuthenticationSpec), b.(*KopeioAuthenticationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KopeioNetworkingSpec)(nil), (*kops.KopeioNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KopeioNetworkingSpec_To_kops_KopeioNetworkingSpec(a.(*KopeioNetworkingSpec), b.(*kops.KopeioNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KopeioNetworkingSpec)(nil), (*KopeioNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KopeioNetworkingSpec_To_v1alpha2_KopeioNetworkingSpec(a.(*kops.KopeioNetworkingSpec), b.(*KopeioNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeAPIServerConfig)(nil), (*kops.KubeAPIServerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeAPIServerConfig_To_kops_KubeAPIServerConfig(a.(*KubeAPIServerConfig), b.(*kops.KubeAPIServerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubeAPIServerConfig)(nil), (*KubeAPIServerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubeAPIServerConfig_To_v1alpha2_KubeAPIServerConfig(a.(*kops.KubeAPIServerConfig), b.(*KubeAPIServerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeControllerManagerConfig)(nil), (*kops.KubeControllerManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeControllerManagerConfig_To_kops_KubeControllerManagerConfig(a.(*KubeControllerManagerConfig), b.(*kops.KubeControllerManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubeControllerManagerConfig)(nil), (*KubeControllerManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubeControllerManagerConfig_To_v1alpha2_KubeControllerManagerConfig(a.(*kops.KubeControllerManagerConfig), b.(*KubeControllerManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeDNSConfig)(nil), (*kops.KubeDNSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeDNSConfig_To_kops_KubeDNSConfig(a.(*KubeDNSConfig), b.(*kops.KubeDNSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubeDNSConfig)(nil), (*KubeDNSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubeDNSConfig_To_v1alpha2_KubeDNSConfig(a.(*kops.KubeDNSConfig), b.(*KubeDNSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeProxyConfig)(nil), (*kops.KubeProxyConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeProxyConfig_To_kops_KubeProxyConfig(a.(*KubeProxyConfig), b.(*kops.KubeProxyConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubeProxyConfig)(nil), (*KubeProxyConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubeProxyConfig_To_v1alpha2_KubeProxyConfig(a.(*kops.KubeProxyConfig), b.(*KubeProxyConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeSchedulerConfig)(nil), (*kops.KubeSchedulerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeSchedulerConfig_To_kops_KubeSchedulerConfig(a.(*KubeSchedulerConfig), b.(*kops.KubeSchedulerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubeSchedulerConfig)(nil), (*KubeSchedulerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubeSchedulerConfig_To_v1alpha2_KubeSchedulerConfig(a.(*kops.KubeSchedulerConfig), b.(*KubeSchedulerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeletConfigSpec)(nil), (*kops.KubeletConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(a.(*KubeletConfigSpec), b.(*kops.KubeletConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubeletConfigSpec)(nil), (*KubeletConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(a.(*kops.KubeletConfigSpec), b.(*KubeletConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubenetNetworkingSpec)(nil), (*kops.KubenetNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubenetNetworkingSpec_To_kops_KubenetNetworkingSpec(a.(*KubenetNetworkingSpec), b.(*kops.KubenetNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KubenetNetworkingSpec)(nil), (*KubenetNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KubenetNetworkingSpec_To_v1alpha2_KubenetNetworkingSpec(a.(*kops.KubenetNetworkingSpec), b.(*KubenetNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KuberouterNetworkingSpec)(nil), (*kops.KuberouterNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KuberouterNetworkingSpec_To_kops_KuberouterNetworkingSpec(a.(*KuberouterNetworkingSpec), b.(*kops.KuberouterNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.KuberouterNetworkingSpec)(nil), (*KuberouterNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_KuberouterNetworkingSpec_To_v1alpha2_KuberouterNetworkingSpec(a.(*kops.KuberouterNetworkingSpec), b.(*KuberouterNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LeaderElectionConfiguration)(nil), (*kops.LeaderElectionConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(a.(*LeaderElectionConfiguration), b.(*kops.LeaderElectionConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.LeaderElectionConfiguration)(nil), (*LeaderElectionConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(a.(*kops.LeaderElectionConfiguration), b.(*LeaderElectionConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancerAccessSpec)(nil), (*kops.LoadBalancerAccessSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LoadBalancerAccessSpec_To_kops_LoadBalancerAccessSpec(a.(*LoadBalancerAccessSpec), b.(*kops.LoadBalancerAccessSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.LoadBalancerAccessSpec)(nil), (*LoadBalancerAccessSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_LoadBalancerAccessSpec_To_v1alpha2_LoadBalancerAccessSpec(a.(*kops.LoadBalancerAccessSpec), b.(*LoadBalancerAccessSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancerControllerSpec)(nil), (*kops.LoadBalancerControllerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LoadBalancerControllerSpec_To_kops_LoadBalancerControllerSpec(a.(*LoadBalancerControllerSpec), b.(*kops.LoadBalancerControllerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.LoadBalancerControllerSpec)(nil), (*LoadBalancerControllerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_LoadBalancerControllerSpec_To_v1alpha2_LoadBalancerControllerSpec(a.(*kops.LoadBalancerControllerSpec), b.(*LoadBalancerControllerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancerSpec)(nil), (*kops.LoadBalancerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LoadBalancerSpec_To_kops_LoadBalancerSpec(a.(*LoadBalancerSpec), b.(*kops.LoadBalancerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.LoadBalancerSpec)(nil), (*LoadBalancerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_LoadBalancerSpec_To_v1alpha2_LoadBalancerSpec(a.(*kops.LoadBalancerSpec), b.(*LoadBalancerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancerSubnetSpec)(nil), (*kops.LoadBalancerSubnetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LoadBalancerSubnetSpec_To_kops_LoadBalancerSubnetSpec(a.(*LoadBalancerSubnetSpec), b.(*kops.LoadBalancerSubnetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.LoadBalancerSubnetSpec)(nil), (*LoadBalancerSubnetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_LoadBalancerSubnetSpec_To_v1alpha2_LoadBalancerSubnetSpec(a.(*kops.LoadBalancerSubnetSpec), b.(*LoadBalancerSubnetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LyftVPCNetworkingSpec)(nil), (*kops.LyftVPCNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LyftVPCNetworkingSpec_To_kops_LyftVPCNetworkingSpec(a.(*LyftVPCNetworkingSpec), b.(*kops.LyftVPCNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.LyftVPCNetworkingSpec)(nil), (*LyftVPCNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_LyftVPCNetworkingSpec_To_v1alpha2_LyftVPCNetworkingSpec(a.(*kops.LyftVPCNetworkingSpec), b.(*LyftVPCNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricsServerConfig)(nil), (*kops.MetricsServerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_MetricsServerConfig_To_kops_MetricsServerConfig(a.(*MetricsServerConfig), b.(*kops.MetricsServerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.MetricsServerConfig)(nil), (*MetricsServerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_MetricsServerConfig_To_v1alpha2_MetricsServerConfig(a.(*kops.MetricsServerConfig), b.(*MetricsServerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MinMaxSpec)(nil), (*kops.MinMaxSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec(a.(*MinMaxSpec), b.(*kops.MinMaxSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.MinMaxSpec)(nil), (*MinMaxSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec(a.(*kops.MinMaxSpec), b.(*MinMaxSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MixedInstancesPolicySpec)(nil), (*kops.MixedInstancesPolicySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_MixedInstancesPolicySpec_To_kops_MixedInstancesPolicySpec(a.(*MixedInstancesPolicySpec), b.(*kops.MixedInstancesPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.MixedInstancesPolicySpec)(nil), (*MixedInstancesPolicySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_MixedInstancesPolicySpec_To_v1alpha2_MixedInstancesPolicySpec(a.(*kops.MixedInstancesPolicySpec), b.(*MixedInstancesPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NRIConfig)(nil), (*kops.NRIConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NRIConfig_To_kops_NRIConfig(a.(*NRIConfig), b.(*kops.NRIConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NRIConfig)(nil), (*NRIConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NRIConfig_To_v1alpha2_NRIConfig(a.(*kops.NRIConfig), b.(*NRIConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NTPConfig)(nil), (*kops.NTPConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NTPConfig_To_kops_NTPConfig(a.(*NTPConfig), b.(*kops.NTPConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NTPConfig)(nil), (*NTPConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NTPConfig_To_v1alpha2_NTPConfig(a.(*kops.NTPConfig), b.(*NTPConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NetworkingSpec)(nil), (*kops.NetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NetworkingSpec_To_kops_NetworkingSpec(a.(*NetworkingSpec), b.(*kops.NetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NetworkingSpec)(nil), (*NetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NetworkingSpec_To_v1alpha2_NetworkingSpec(a.(*kops.NetworkingSpec), b.(*NetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeAuthorizationSpec)(nil), (*kops.NodeAuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NodeAuthorizationSpec_To_kops_NodeAuthorizationSpec(a.(*NodeAuthorizationSpec), b.(*kops.NodeAuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NodeAuthorizationSpec)(nil), (*NodeAuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NodeAuthorizationSpec_To_v1alpha2_NodeAuthorizationSpec(a.(*kops.NodeAuthorizationSpec), b.(*NodeAuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeAuthorizerSpec)(nil), (*kops.NodeAuthorizerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NodeAuthorizerSpec_To_kops_NodeAuthorizerSpec(a.(*NodeAuthorizerSpec), b.(*kops.NodeAuthorizerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NodeAuthorizerSpec)(nil), (*NodeAuthorizerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NodeAuthorizerSpec_To_v1alpha2_NodeAuthorizerSpec(a.(*kops.NodeAuthorizerSpec), b.(*NodeAuthorizerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeLocalDNSConfig)(nil), (*kops.NodeLocalDNSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NodeLocalDNSConfig_To_kops_NodeLocalDNSConfig(a.(*NodeLocalDNSConfig), b.(*kops.NodeLocalDNSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NodeLocalDNSConfig)(nil), (*NodeLocalDNSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NodeLocalDNSConfig_To_v1alpha2_NodeLocalDNSConfig(a.(*kops.NodeLocalDNSConfig), b.(*NodeLocalDNSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeProblemDetectorConfig)(nil), (*kops.NodeProblemDetectorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NodeProblemDetectorConfig_To_kops_NodeProblemDetectorConfig(a.(*NodeProblemDetectorConfig), b.(*kops.NodeProblemDetectorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NodeProblemDetectorConfig)(nil), (*NodeProblemDetectorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NodeProblemDetectorConfig_To_v1alpha2_NodeProblemDetectorConfig(a.(*kops.NodeProblemDetectorConfig), b.(*NodeProblemDetectorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeTerminationHandlerSpec)(nil), (*kops.NodeTerminationHandlerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NodeTerminationHandlerSpec_To_kops_NodeTerminationHandlerSpec(a.(*NodeTerminationHandlerSpec), b.(*kops.NodeTerminationHandlerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NodeTerminationHandlerSpec)(nil), (*NodeTerminationHandlerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NodeTerminationHandlerSpec_To_v1alpha2_NodeTerminationHandlerSpec(a.(*kops.NodeTerminationHandlerSpec), b.(*NodeTerminationHandlerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NvidiaGPUConfig)(nil), (*kops.NvidiaGPUConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NvidiaGPUConfig_To_kops_NvidiaGPUConfig(a.(*NvidiaGPUConfig), b.(*kops.NvidiaGPUConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.NvidiaGPUConfig)(nil), (*NvidiaGPUConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_NvidiaGPUConfig_To_v1alpha2_NvidiaGPUConfig(a.(*kops.NvidiaGPUConfig), b.(*NvidiaGPUConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackBlockStorageConfig)(nil), (*kops.OpenstackBlockStorageConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackBlockStorageConfig_To_kops_OpenstackBlockStorageConfig(a.(*OpenstackBlockStorageConfig), b.(*kops.OpenstackBlockStorageConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackBlockStorageConfig)(nil), (*OpenstackBlockStorageConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackBlockStorageConfig_To_v1alpha2_OpenstackBlockStorageConfig(a.(*kops.OpenstackBlockStorageConfig), b.(*OpenstackBlockStorageConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackLoadbalancerConfig)(nil), (*kops.OpenstackLoadbalancerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackLoadbalancerConfig_To_kops_OpenstackLoadbalancerConfig(a.(*OpenstackLoadbalancerConfig), b.(*kops.OpenstackLoadbalancerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackLoadbalancerConfig)(nil), (*OpenstackLoadbalancerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackLoadbalancerConfig_To_v1alpha2_OpenstackLoadbalancerConfig(a.(*kops.OpenstackLoadbalancerConfig), b.(*OpenstackLoadbalancerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackMetadata)(nil), (*kops.OpenstackMetadata)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackMetadata_To_kops_OpenstackMetadata(a.(*OpenstackMetadata), b.(*kops.OpenstackMetadata), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackMetadata)(nil), (*OpenstackMetadata)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackMetadata_To_v1alpha2_OpenstackMetadata(a.(*kops.OpenstackMetadata), b.(*OpenstackMetadata), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackMonitor)(nil), (*kops.OpenstackMonitor)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackMonitor_To_kops_OpenstackMonitor(a.(*OpenstackMonitor), b.(*kops.OpenstackMonitor), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackMonitor)(nil), (*OpenstackMonitor)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackMonitor_To_v1alpha2_OpenstackMonitor(a.(*kops.OpenstackMonitor), b.(*OpenstackMonitor), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackNetwork)(nil), (*kops.OpenstackNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackNetwork_To_kops_OpenstackNetwork(a.(*OpenstackNetwork), b.(*kops.OpenstackNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackNetwork)(nil), (*OpenstackNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackNetwork_To_v1alpha2_OpenstackNetwork(a.(*kops.OpenstackNetwork), b.(*OpenstackNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackRouter)(nil), (*kops.OpenstackRouter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackRouter_To_kops_OpenstackRouter(a.(*OpenstackRouter), b.(*kops.OpenstackRouter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackRouter)(nil), (*OpenstackRouter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackRouter_To_v1alpha2_OpenstackRouter(a.(*kops.OpenstackRouter), b.(*OpenstackRouter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OpenstackSpec)(nil), (*kops.OpenstackSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_OpenstackSpec_To_kops_OpenstackSpec(a.(*OpenstackSpec), b.(*kops.OpenstackSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.OpenstackSpec)(nil), (*OpenstackSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_OpenstackSpec_To_v1alpha2_OpenstackSpec(a.(*kops.OpenstackSpec), b.(*OpenstackSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PDCSIDriver)(nil), (*kops.PDCSIDriver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_PDCSIDriver_To_kops_PDCSIDriver(a.(*PDCSIDriver), b.(*kops.PDCSIDriver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.PDCSIDriver)(nil), (*PDCSIDriver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_PDCSIDriver_To_v1alpha2_PDCSIDriver(a.(*kops.PDCSIDriver), b.(*PDCSIDriver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PackagesConfig)(nil), (*kops.PackagesConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(a.(*PackagesConfig), b.(*kops.PackagesConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.PackagesConfig)(nil), (*PackagesConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(a.(*kops.PackagesConfig), b.(*PackagesConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PodIdentityWebhookSpec)(nil), (*kops.PodIdentityWebhookSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_PodIdentityWebhookSpec_To_kops_PodIdentityWebhookSpec(a.(*PodIdentityWebhookSpec), b.(*kops.PodIdentityWebhookSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.PodIdentityWebhookSpec)(nil), (*PodIdentityWebhookSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_PodIdentityWebhookSpec_To_v1alpha2_PodIdentityWebhookSpec(a.(*kops.PodIdentityWebhookSpec), b.(*PodIdentityWebhookSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RBACAuthorizationSpec)(nil), (*kops.RBACAuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RBACAuthorizationSpec_To_kops_RBACAuthorizationSpec(a.(*RBACAuthorizationSpec), b.(*kops.RBACAuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.RBACAuthorizationSpec)(nil), (*RBACAuthorizationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_RBACAuthorizationSpec_To_v1alpha2_RBACAuthorizationSpec(a.(*kops.RBACAuthorizationSpec), b.(*RBACAuthorizationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RollingUpdate)(nil), (*kops.RollingUpdate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RollingUpdate_To_kops_RollingUpdate(a.(*RollingUpdate), b.(*kops.RollingUpdate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.RollingUpdate)(nil), (*RollingUpdate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_RollingUpdate_To_v1alpha2_RollingUpdate(a.(*kops.RollingUpdate), b.(*RollingUpdate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RomanaNetworkingSpec)(nil), (*kops.RomanaNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RomanaNetworkingSpec_To_kops_RomanaNetworkingSpec(a.(*RomanaNetworkingSpec), b.(*kops.RomanaNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.RomanaNetworkingSpec)(nil), (*RomanaNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_RomanaNetworkingSpec_To_v1alpha2_RomanaNetworkingSpec(a.(*kops.RomanaNetworkingSpec), b.(*RomanaNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RouteSpec)(nil), (*kops.RouteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RouteSpec_To_kops_RouteSpec(a.(*RouteSpec), b.(*kops.RouteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.RouteSpec)(nil), (*RouteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_RouteSpec_To_v1alpha2_RouteSpec(a.(*kops.RouteSpec), b.(*RouteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Runc)(nil), (*kops.Runc)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Runc_To_kops_Runc(a.(*Runc), b.(*kops.Runc), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.Runc)(nil), (*Runc)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_Runc_To_v1alpha2_Runc(a.(*kops.Runc), b.(*Runc), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SSHCredential)(nil), (*kops.SSHCredential)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SSHCredential_To_kops_SSHCredential(a.(*SSHCredential), b.(*kops.SSHCredential), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.SSHCredential)(nil), (*SSHCredential)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_SSHCredential_To_v1alpha2_SSHCredential(a.(*kops.SSHCredential), b.(*SSHCredential), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SSHCredentialList)(nil), (*kops.SSHCredentialList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SSHCredentialList_To_kops_SSHCredentialList(a.(*SSHCredentialList), b.(*kops.SSHCredentialList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.SSHCredentialList)(nil), (*SSHCredentialList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_SSHCredentialList_To_v1alpha2_SSHCredentialList(a.(*kops.SSHCredentialList), b.(*SSHCredentialList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SSHCredentialSpec)(nil), (*kops.SSHCredentialSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SSHCredentialSpec_To_kops_SSHCredentialSpec(a.(*SSHCredentialSpec), b.(*kops.SSHCredentialSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.SSHCredentialSpec)(nil), (*SSHCredentialSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_SSHCredentialSpec_To_v1alpha2_SSHCredentialSpec(a.(*kops.SSHCredentialSpec), b.(*SSHCredentialSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServiceAccountExternalPermission)(nil), (*kops.ServiceAccountExternalPermission)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ServiceAccountExternalPermission_To_kops_ServiceAccountExternalPermission(a.(*ServiceAccountExternalPermission), b.(*kops.ServiceAccountExternalPermission), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ServiceAccountExternalPermission)(nil), (*ServiceAccountExternalPermission)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ServiceAccountExternalPermission_To_v1alpha2_ServiceAccountExternalPermission(a.(*kops.ServiceAccountExternalPermission), b.(*ServiceAccountExternalPermission), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServiceAccountIssuerDiscoveryConfig)(nil), (*kops.ServiceAccountIssuerDiscoveryConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ServiceAccountIssuerDiscoveryConfig_To_kops_ServiceAccountIssuerDiscoveryConfig(a.(*ServiceAccountIssuerDiscoveryConfig), b.(*kops.ServiceAccountIssuerDiscoveryConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.ServiceAccountIssuerDiscoveryConfig)(nil), (*ServiceAccountIssuerDiscoveryConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ServiceAccountIssuerDiscoveryConfig_To_v1alpha2_ServiceAccountIssuerDiscoveryConfig(a.(*kops.ServiceAccountIssuerDiscoveryConfig), b.(*ServiceAccountIssuerDiscoveryConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SnapshotControllerConfig)(nil), (*kops.SnapshotControllerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SnapshotControllerConfig_To_kops_SnapshotControllerConfig(a.(*SnapshotControllerConfig), b.(*kops.SnapshotControllerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.SnapshotControllerConfig)(nil), (*SnapshotControllerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_SnapshotControllerConfig_To_v1alpha2_SnapshotControllerConfig(a.(*kops.SnapshotControllerConfig), b.(*SnapshotControllerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TargetSpec)(nil), (*kops.TargetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_TargetSpec_To_kops_TargetSpec(a.(*TargetSpec), b.(*kops.TargetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.TargetSpec)(nil), (*TargetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_TargetSpec_To_v1alpha2_TargetSpec(a.(*kops.TargetSpec), b.(*TargetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TerraformSpec)(nil), (*kops.TerraformSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_TerraformSpec_To_kops_TerraformSpec(a.(*TerraformSpec), b.(*kops.TerraformSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.TerraformSpec)(nil), (*TerraformSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_TerraformSpec_To_v1alpha2_TerraformSpec(a.(*kops.TerraformSpec), b.(*TerraformSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UserData)(nil), (*kops.UserData)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_UserData_To_kops_UserData(a.(*UserData), b.(*kops.UserData), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.UserData)(nil), (*UserData)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_UserData_To_v1alpha2_UserData(a.(*kops.UserData), b.(*UserData), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VolumeMountSpec)(nil), (*kops.VolumeMountSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VolumeMountSpec_To_kops_VolumeMountSpec(a.(*VolumeMountSpec), b.(*kops.VolumeMountSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.VolumeMountSpec)(nil), (*VolumeMountSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_VolumeMountSpec_To_v1alpha2_VolumeMountSpec(a.(*kops.VolumeMountSpec), b.(*VolumeMountSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VolumeSpec)(nil), (*kops.VolumeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VolumeSpec_To_kops_VolumeSpec(a.(*VolumeSpec), b.(*kops.VolumeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.VolumeSpec)(nil), (*VolumeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_VolumeSpec_To_v1alpha2_VolumeSpec(a.(*kops.VolumeSpec), b.(*VolumeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*WarmPoolSpec)(nil), (*kops.WarmPoolSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_WarmPoolSpec_To_kops_WarmPoolSpec(a.(*WarmPoolSpec), b.(*kops.WarmPoolSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.WarmPoolSpec)(nil), (*WarmPoolSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_WarmPoolSpec_To_v1alpha2_WarmPoolSpec(a.(*kops.WarmPoolSpec), b.(*WarmPoolSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*WeaveNetworkingSpec)(nil), (*kops.WeaveNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_WeaveNetworkingSpec_To_kops_WeaveNetworkingSpec(a.(*WeaveNetworkingSpec), b.(*kops.WeaveNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kops.WeaveNetworkingSpec)(nil), (*WeaveNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_WeaveNetworkingSpec_To_v1alpha2_WeaveNetworkingSpec(a.(*kops.WeaveNetworkingSpec), b.(*WeaveNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.CanalNetworkingSpec)(nil), (*CanalNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CanalNetworkingSpec_To_v1alpha2_CanalNetworkingSpec(a.(*kops.CanalNetworkingSpec), b.(*CanalNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.CiliumNetworkingSpec)(nil), (*CiliumNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_CiliumNetworkingSpec_To_v1alpha2_CiliumNetworkingSpec(a.(*kops.CiliumNetworkingSpec), b.(*CiliumNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.ClusterSpec)(nil), (*ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ClusterSpec_To_v1alpha2_ClusterSpec(a.(*kops.ClusterSpec), b.(*ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.ExternalDNSConfig)(nil), (*ExternalDNSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_ExternalDNSConfig_To_v1alpha2_ExternalDNSConfig(a.(*kops.ExternalDNSConfig), b.(*ExternalDNSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.HookSpec)(nil), (*HookSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_HookSpec_To_v1alpha2_HookSpec(a.(*kops.HookSpec), b.(*HookSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.InstanceGroupSpec)(nil), (*InstanceGroupSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_InstanceGroupSpec_To_v1alpha2_InstanceGroupSpec(a.(*kops.InstanceGroupSpec), b.(*InstanceGroupSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kops.TopologySpec)(nil), (*TopologySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kops_TopologySpec_To_v1alpha2_TopologySpec(a.(*kops.TopologySpec), b.(*TopologySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*CanalNetworkingSpec)(nil), (*kops.CanalNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CanalNetworkingSpec_To_kops_CanalNetworkingSpec(a.(*CanalNetworkingSpec), b.(*kops.CanalNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*CiliumNetworkingSpec)(nil), (*kops.CiliumNetworkingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CiliumNetworkingSpec_To_kops_CiliumNetworkingSpec(a.(*CiliumNetworkingSpec), b.(*kops.CiliumNetworkingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ClusterSpec)(nil), (*kops.ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterSpec_To_kops_ClusterSpec(a.(*ClusterSpec), b.(*kops.ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ExternalDNSConfig)(nil), (*kops.ExternalDNSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ExternalDNSConfig_To_kops_ExternalDNSConfig(a.(*ExternalDNSConfig), b.(*kops.ExternalDNSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*HookSpec)(nil), (*kops.HookSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_HookSpec_To_kops_HookSpec(a.(*HookSpec), b.(*kops.HookSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*InstanceGroupSpec)(nil), (*kops.InstanceGroupSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InstanceGroupSpec_To_kops_InstanceGroupSpec(a.(*InstanceGroupSpec), b.(*kops.InstanceGroupSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*TopologySpec)(nil), (*kops.TopologySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_TopologySpec_To_kops_TopologySpec(a.(*TopologySpec), b.(*kops.TopologySpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha2_APISpec_To_kops_APISpec(in *APISpec, out *kops.APISpec, s conversion.Scope) error {
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(kops.DNSAccessSpec)
		if err := Convert_v1alpha2_DNSAccessSpec_To_kops_DNSAccessSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DNS = nil
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(kops.LoadBalancerAccessSpec)
		if err := Convert_v1alpha2_LoadBalancerAccessSpec_To_kops_LoadBalancerAccessSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LoadBalancer = nil
	}
	out.PublicName = in.PublicName
	out.AdditionalSANs = in.AdditionalSANs
	out.Access = in.Access
	return nil
}

// Convert_v1alpha2_APISpec_To_kops_APISpec is an autogenerated conversion function.
func Convert_v1alpha2_APISpec_To_kops_APISpec(in *APISpec, out *kops.APISpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_APISpec_To_kops_APISpec(in, out, s)
}

func autoConvert_kops_APISpec_To_v1alpha2_APISpec(in *kops.APISpec, out *APISpec, s conversion.Scope) error {
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(DNSAccessSpec)
		if err := Convert_kops_DNSAccessSpec_To_v1alpha2_DNSAccessSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DNS = nil
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(LoadBalancerAccessSpec)
		if err := Convert_kops_LoadBalancerAccessSpec_To_v1alpha2_LoadBalancerAccessSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LoadBalancer = nil
	}
	out.PublicName = in.PublicName
	out.AdditionalSANs = in.AdditionalSANs
	out.Access = in.Access
	return nil
}

// Convert_kops_APISpec_To_v1alpha2_APISpec is an autogenerated conversion function.
func Convert_kops_APISpec_To_v1alpha2_APISpec(in *kops.APISpec, out *APISpec, s conversion.Scope) error {
	return autoConvert_kops_APISpec_To_v1alpha2_APISpec(in, out, s)
}

func autoConvert_v1alpha2_AWSAuthenticationIdentityMappingSpec_To_kops_AWSAuthenticationIdentityMappingSpec(in *AWSAuthenticationIdentityMappingSpec, out *kops.AWSAuthenticationIdentityMappingSpec, s conversion.Scope) error {
	out.ARN = in.ARN
	out.Username = in.Username
	out.Groups = in.Groups
	return nil
}

// Convert_v1alpha2_AWSAuthenticationIdentityMappingSpec_To_kops_AWSAuthenticationIdentityMappingSpec is an autogenerated conversion function.
func Convert_v1alpha2_AWSAuthenticationIdentityMappingSpec_To_kops_AWSAuthenticationIdentityMappingSpec(in *AWSAuthenticationIdentityMappingSpec, out *kops.AWSAuthenticationIdentityMappingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSAuthenticationIdentityMappingSpec_To_kops_AWSAuthenticationIdentityMappingSpec(in, out, s)
}

func autoConvert_kops_AWSAuthenticationIdentityMappingSpec_To_v1alpha2_AWSAuthenticationIdentityMappingSpec(in *kops.AWSAuthenticationIdentityMappingSpec, out *AWSAuthenticationIdentityMappingSpec, s conversion.Scope) error {
	out.ARN = in.ARN
	out.Username = in.Username
	out.Groups = in.Groups
	return nil
}

// Convert_kops_AWSAuthenticationIdentityMappingSpec_To_v1alpha2_AWSAuthenticationIdentityMappingSpec is an autogenerated conversion function.
func Convert_kops_AWSAuthenticationIdentityMappingSpec_To_v1alpha2_AWSAuthenticationIdentityMappingSpec(in *kops.AWSAuthenticationIdentityMappingSpec, out *AWSAuthenticationIdentityMappingSpec, s conversion.Scope) error {
	return autoConvert_kops_AWSAuthenticationIdentityMappingSpec_To_v1alpha2_AWSAuthenticationIdentityMappingSpec(in, out, s)
}

func autoConvert_v1alpha2_AWSAuthenticationSpec_To_kops_AWSAuthenticationSpec(in *AWSAuthenticationSpec, out *kops.AWSAuthenticationSpec, s conversion.Scope) error {
	out.Image = in.Image
	out.BackendMode = in.BackendMode
	out.ClusterID = in.ClusterID
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	out.CPULimit = in.CPULimit
	if in.IdentityMappings != nil {
		in, out := &in.IdentityMappings, &out.IdentityMappings
		*out = make([]kops.AWSAuthenticationIdentityMappingSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_AWSAuthenticationIdentityMappingSpec_To_kops_AWSAuthenticationIdentityMappingSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.IdentityMappings = nil
	}
	return nil
}

// Convert_v1alpha2_AWSAuthenticationSpec_To_kops_AWSAuthenticationSpec is an autogenerated conversion function.
func Convert_v1alpha2_AWSAuthenticationSpec_To_kops_AWSAuthenticationSpec(in *AWSAuthenticationSpec, out *kops.AWSAuthenticationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSAuthenticationSpec_To_kops_AWSAuthenticationSpec(in, out, s)
}

func autoConvert_kops_AWSAuthenticationSpec_To_v1alpha2_AWSAuthenticationSpec(in *kops.AWSAuthenticationSpec, out *AWSAuthenticationSpec, s conversion.Scope) error {
	out.Image = in.Image
	out.BackendMode = in.BackendMode
	out.ClusterID = in.ClusterID
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	out.CPULimit = in.CPULimit
	if in.IdentityMappings != nil {
		in, out := &in.IdentityMappings, &out.IdentityMappings
		*out = make([]AWSAuthenticationIdentityMappingSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_AWSAuthenticationIdentityMappingSpec_To_v1alpha2_AWSAuthenticationIdentityMappingSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.IdentityMappings = nil
	}
	return nil
}

// Convert_kops_AWSAuthenticationSpec_To_v1alpha2_AWSAuthenticationSpec is an autogenerated conversion function.
func Convert_kops_AWSAuthenticationSpec_To_v1alpha2_AWSAuthenticationSpec(in *kops.AWSAuthenticationSpec, out *AWSAuthenticationSpec, s conversion.Scope) error {
	return autoConvert_kops_AWSAuthenticationSpec_To_v1alpha2_AWSAuthenticationSpec(in, out, s)
}

func autoConvert_v1alpha2_AWSPermission_To_kops_AWSPermission(in *AWSPermission, out *kops.AWSPermission, s conversion.Scope) error {
	out.PolicyARNs = in.PolicyARNs
	out.InlinePolicy = in.InlinePolicy
	return nil
}

// Convert_v1alpha2_AWSPermission_To_kops_AWSPermission is an autogenerated conversion function.
func Convert_v1alpha2_AWSPermission_To_kops_AWSPermission(in *AWSPermission, out *kops.AWSPermission, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSPermission_To_kops_AWSPermission(in, out, s)
}

func autoConvert_kops_AWSPermission_To_v1alpha2_AWSPermission(in *kops.AWSPermission, out *AWSPermission, s conversion.Scope) error {
	out.PolicyARNs = in.PolicyARNs
	out.InlinePolicy = in.InlinePolicy
	return nil
}

// Convert_kops_AWSPermission_To_v1alpha2_AWSPermission is an autogenerated conversion function.
func Convert_kops_AWSPermission_To_v1alpha2_AWSPermission(in *kops.AWSPermission, out *AWSPermission, s conversion.Scope) error {
	return autoConvert_kops_AWSPermission_To_v1alpha2_AWSPermission(in, out, s)
}

func autoConvert_v1alpha2_AcceleratorConfig_To_kops_AcceleratorConfig(in *AcceleratorConfig, out *kops.AcceleratorConfig, s conversion.Scope) error {
	out.AcceleratorCount = in.AcceleratorCount
	out.AcceleratorType = in.AcceleratorType
	return nil
}

// Convert_v1alpha2_AcceleratorConfig_To_kops_AcceleratorConfig is an autogenerated conversion function.
func Convert_v1alpha2_AcceleratorConfig_To_kops_AcceleratorConfig(in *AcceleratorConfig, out *kops.AcceleratorConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_AcceleratorConfig_To_kops_AcceleratorConfig(in, out, s)
}

func autoConvert_kops_AcceleratorConfig_To_v1alpha2_AcceleratorConfig(in *kops.AcceleratorConfig, out *AcceleratorConfig, s conversion.Scope) error {
	out.AcceleratorCount = in.AcceleratorCount
	out.AcceleratorType = in.AcceleratorType
	return nil
}

// Convert_kops_AcceleratorConfig_To_v1alpha2_AcceleratorConfig is an autogenerated conversion function.
func Convert_kops_AcceleratorConfig_To_v1alpha2_AcceleratorConfig(in *kops.AcceleratorConfig, out *AcceleratorConfig, s conversion.Scope) error {
	return autoConvert_kops_AcceleratorConfig_To_v1alpha2_AcceleratorConfig(in, out, s)
}

func autoConvert_v1alpha2_AccessLogSpec_To_kops_AccessLogSpec(in *AccessLogSpec, out *kops.AccessLogSpec, s conversion.Scope) error {
	out.Interval = in.Interval
	out.Bucket = in.Bucket
	out.BucketPrefix = in.BucketPrefix
	return nil
}

// Convert_v1alpha2_AccessLogSpec_To_kops_AccessLogSpec is an autogenerated conversion function.
func Convert_v1alpha2_AccessLogSpec_To_kops_AccessLogSpec(in *AccessLogSpec, out *kops.AccessLogSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AccessLogSpec_To_kops_AccessLogSpec(in, out, s)
}

func autoConvert_kops_AccessLogSpec_To_v1alpha2_AccessLogSpec(in *kops.AccessLogSpec, out *AccessLogSpec, s conversion.Scope) error {
	out.Interval = in.Interval
	out.Bucket = in.Bucket
	out.BucketPrefix = in.BucketPrefix
	return nil
}

// Convert_kops_AccessLogSpec_To_v1alpha2_AccessLogSpec is an autogenerated conversion function.
func Convert_kops_AccessLogSpec_To_v1alpha2_AccessLogSpec(in *kops.AccessLogSpec, out *AccessLogSpec, s conversion.Scope) error {
	return autoConvert_kops_AccessLogSpec_To_v1alpha2_AccessLogSpec(in, out, s)
}

func autoConvert_v1alpha2_AddonSpec_To_kops_AddonSpec(in *AddonSpec, out *kops.AddonSpec, s conversion.Scope) error {
	out.Manifest = in.Manifest
	return nil
}

// Convert_v1alpha2_AddonSpec_To_kops_AddonSpec is an autogenerated conversion function.
func Convert_v1alpha2_AddonSpec_To_kops_AddonSpec(in *AddonSpec, out *kops.AddonSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonSpec_To_kops_AddonSpec(in, out, s)
}

func autoConvert_kops_AddonSpec_To_v1alpha2_AddonSpec(in *kops.AddonSpec, out *AddonSpec, s conversion.Scope) error {
	out.Manifest = in.Manifest
	return nil
}

// Convert_kops_AddonSpec_To_v1alpha2_AddonSpec is an autogenerated conversion function.
func Convert_kops_AddonSpec_To_v1alpha2_AddonSpec(in *kops.AddonSpec, out *AddonSpec, s conversion.Scope) error {
	return autoConvert_kops_AddonSpec_To_v1alpha2_AddonSpec(in, out, s)
}

func autoConvert_v1alpha2_AlwaysAllowAuthorizationSpec_To_kops_AlwaysAllowAuthorizationSpec(in *AlwaysAllowAuthorizationSpec, out *kops.AlwaysAllowAuthorizationSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_AlwaysAllowAuthorizationSpec_To_kops_AlwaysAllowAuthorizationSpec is an autogenerated conversion function.
func Convert_v1alpha2_AlwaysAllowAuthorizationSpec_To_kops_AlwaysAllowAuthorizationSpec(in *AlwaysAllowAuthorizationSpec, out *kops.AlwaysAllowAuthorizationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AlwaysAllowAuthorizationSpec_To_kops_AlwaysAllowAuthorizationSpec(in, out, s)
}

func autoConvert_kops_AlwaysAllowAuthorizationSpec_To_v1alpha2_AlwaysAllowAuthorizationSpec(in *kops.AlwaysAllowAuthorizationSpec, out *AlwaysAllowAuthorizationSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_AlwaysAllowAuthorizationSpec_To_v1alpha2_AlwaysAllowAuthorizationSpec is an autogenerated conversion function.
func Convert_kops_AlwaysAllowAuthorizationSpec_To_v1alpha2_AlwaysAllowAuthorizationSpec(in *kops.AlwaysAllowAuthorizationSpec, out *AlwaysAllowAuthorizationSpec, s conversion.Scope) error {
	return autoConvert_kops_AlwaysAllowAuthorizationSpec_To_v1alpha2_AlwaysAllowAuthorizationSpec(in, out, s)
}

func autoConvert_v1alpha2_AmazonVPCNetworkingSpec_To_kops_AmazonVPCNetworkingSpec(in *AmazonVPCNetworkingSpec, out *kops.AmazonVPCNetworkingSpec, s conversion.Scope) error {
	out.Image = in.Image
	out.InitImage = in.InitImage
	out.NetworkPolicyAgentImage = in.NetworkPolicyAgentImage
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]kops.EnvVar, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_EnvVar_To_kops_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	return nil
}

// Convert_v1alpha2_AmazonVPCNetworkingSpec_To_kops_AmazonVPCNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_AmazonVPCNetworkingSpec_To_kops_AmazonVPCNetworkingSpec(in *AmazonVPCNetworkingSpec, out *kops.AmazonVPCNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AmazonVPCNetworkingSpec_To_kops_AmazonVPCNetworkingSpec(in, out, s)
}

func autoConvert_kops_AmazonVPCNetworkingSpec_To_v1alpha2_AmazonVPCNetworkingSpec(in *kops.AmazonVPCNetworkingSpec, out *AmazonVPCNetworkingSpec, s conversion.Scope) error {
	out.Image = in.Image
	out.InitImage = in.InitImage
	out.NetworkPolicyAgentImage = in.NetworkPolicyAgentImage
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]EnvVar, len(*in))
		for i := range *in {
			if err := Convert_kops_EnvVar_To_v1alpha2_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	return nil
}

// Convert_kops_AmazonVPCNetworkingSpec_To_v1alpha2_AmazonVPCNetworkingSpec is an autogenerated conversion function.
func Convert_kops_AmazonVPCNetworkingSpec_To_v1alpha2_AmazonVPCNetworkingSpec(in *kops.AmazonVPCNetworkingSpec, out *AmazonVPCNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_AmazonVPCNetworkingSpec_To_v1alpha2_AmazonVPCNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_AssetsSpec_To_kops_AssetsSpec(in *AssetsSpec, out *kops.AssetsSpec, s conversion.Scope) error {
	out.ContainerRegistry = in.ContainerRegistry
	out.FileRepository = in.FileRepository
	out.ContainerProxy = in.ContainerProxy
	return nil
}

// Convert_v1alpha2_AssetsSpec_To_kops_AssetsSpec is an autogenerated conversion function.
func Convert_v1alpha2_AssetsSpec_To_kops_AssetsSpec(in *AssetsSpec, out *kops.AssetsSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AssetsSpec_To_kops_AssetsSpec(in, out, s)
}

func autoConvert_kops_AssetsSpec_To_v1alpha2_AssetsSpec(in *kops.AssetsSpec, out *AssetsSpec, s conversion.Scope) error {
	out.ContainerRegistry = in.ContainerRegistry
	out.FileRepository = in.FileRepository
	out.ContainerProxy = in.ContainerProxy
	return nil
}

// Convert_kops_AssetsSpec_To_v1alpha2_AssetsSpec is an autogenerated conversion function.
func Convert_kops_AssetsSpec_To_v1alpha2_AssetsSpec(in *kops.AssetsSpec, out *AssetsSpec, s conversion.Scope) error {
	return autoConvert_kops_AssetsSpec_To_v1alpha2_AssetsSpec(in, out, s)
}

func autoConvert_v1alpha2_AuthenticationSpec_To_kops_AuthenticationSpec(in *AuthenticationSpec, out *kops.AuthenticationSpec, s conversion.Scope) error {
	if in.Kopeio != nil {
		in, out := &in.Kopeio, &out.Kopeio
		*out = new(kops.KopeioAuthenticationSpec)
		if err := Convert_v1alpha2_KopeioAuthenticationSpec_To_kops_KopeioAuthenticationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kopeio = nil
	}
	if in.AWS != nil {
		in, out := &in.AWS, &out.AWS
		*out = new(kops.AWSAuthenticationSpec)
		if err := Convert_v1alpha2_AWSAuthenticationSpec_To_kops_AWSAuthenticationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AWS = nil
	}
	out.OIDC = in.OIDC
	return nil
}

// Convert_v1alpha2_AuthenticationSpec_To_kops_AuthenticationSpec is an autogenerated conversion function.
func Convert_v1alpha2_AuthenticationSpec_To_kops_AuthenticationSpec(in *AuthenticationSpec, out *kops.AuthenticationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AuthenticationSpec_To_kops_AuthenticationSpec(in, out, s)
}

func autoConvert_kops_AuthenticationSpec_To_v1alpha2_AuthenticationSpec(in *kops.AuthenticationSpec, out *AuthenticationSpec, s conversion.Scope) error {
	if in.Kopeio != nil {
		in, out := &in.Kopeio, &out.Kopeio
		*out = new(KopeioAuthenticationSpec)
		if err := Convert_kops_KopeioAuthenticationSpec_To_v1alpha2_KopeioAuthenticationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kopeio = nil
	}
	if in.AWS != nil {
		in, out := &in.AWS, &out.AWS
		*out = new(AWSAuthenticationSpec)
		if err := Convert_kops_AWSAuthenticationSpec_To_v1alpha2_AWSAuthenticationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AWS = nil
	}
	out.OIDC = in.OIDC
	return nil
}

// Convert_kops_AuthenticationSpec_To_v1alpha2_AuthenticationSpec is an autogenerated conversion function.
func Convert_kops_AuthenticationSpec_To_v1alpha2_AuthenticationSpec(in *kops.AuthenticationSpec, out *AuthenticationSpec, s conversion.Scope) error {
	return autoConvert_kops_AuthenticationSpec_To_v1alpha2_AuthenticationSpec(in, out, s)
}

func autoConvert_v1alpha2_AuthorizationSpec_To_kops_AuthorizationSpec(in *AuthorizationSpec, out *kops.AuthorizationSpec, s conversion.Scope) error {
	if in.AlwaysAllow != nil {
		in, out := &in.AlwaysAllow, &out.AlwaysAllow
		*out = new(kops.AlwaysAllowAuthorizationSpec)
		if err := Convert_v1alpha2_AlwaysAllowAuthorizationSpec_To_kops_AlwaysAllowAuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AlwaysAllow = nil
	}
	if in.RBAC != nil {
		in, out := &in.RBAC, &out.RBAC
		*out = new(kops.RBACAuthorizationSpec)
		if err := Convert_v1alpha2_RBACAuthorizationSpec_To_kops_RBACAuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RBAC = nil
	}
	return nil
}

// Convert_v1alpha2_AuthorizationSpec_To_kops_AuthorizationSpec is an autogenerated conversion function.
func Convert_v1alpha2_AuthorizationSpec_To_kops_AuthorizationSpec(in *AuthorizationSpec, out *kops.AuthorizationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AuthorizationSpec_To_kops_AuthorizationSpec(in, out, s)
}

func autoConvert_kops_AuthorizationSpec_To_v1alpha2_AuthorizationSpec(in *kops.AuthorizationSpec, out *AuthorizationSpec, s conversion.Scope) error {
	if in.AlwaysAllow != nil {
		in, out := &in.AlwaysAllow, &out.AlwaysAllow
		*out = new(AlwaysAllowAuthorizationSpec)
		if err := Convert_kops_AlwaysAllowAuthorizationSpec_To_v1alpha2_AlwaysAllowAuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AlwaysAllow = nil
	}
	if in.RBAC != nil {
		in, out := &in.RBAC, &out.RBAC
		*out = new(RBACAuthorizationSpec)
		if err := Convert_kops_RBACAuthorizationSpec_To_v1alpha2_RBACAuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RBAC = nil
	}
	return nil
}

// Convert_kops_AuthorizationSpec_To_v1alpha2_AuthorizationSpec is an autogenerated conversion function.
func Convert_kops_AuthorizationSpec_To_v1alpha2_AuthorizationSpec(in *kops.AuthorizationSpec, out *AuthorizationSpec, s conversion.Scope) error {
	return autoConvert_kops_AuthorizationSpec_To_v1alpha2_AuthorizationSpec(in, out, s)
}

func autoConvert_v1alpha2_AzureSpec_To_kops_AzureSpec(in *AzureSpec, out *kops.AzureSpec, s conversion.Scope) error {
	out.SubscriptionID = in.SubscriptionID
	out.StorageAccountID = in.StorageAccountID
	out.TenantID = in.TenantID
	out.ResourceGroupName = in.ResourceGroupName
	out.RouteTableName = in.RouteTableName
	out.AdminUser = in.AdminUser
	return nil
}

// Convert_v1alpha2_AzureSpec_To_kops_AzureSpec is an autogenerated conversion function.
func Convert_v1alpha2_AzureSpec_To_kops_AzureSpec(in *AzureSpec, out *kops.AzureSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AzureSpec_To_kops_AzureSpec(in, out, s)
}

func autoConvert_kops_AzureSpec_To_v1alpha2_AzureSpec(in *kops.AzureSpec, out *AzureSpec, s conversion.Scope) error {
	out.SubscriptionID = in.SubscriptionID
	out.StorageAccountID = in.StorageAccountID
	out.TenantID = in.TenantID
	out.ResourceGroupName = in.ResourceGroupName
	out.RouteTableName = in.RouteTableName
	out.AdminUser = in.AdminUser
	return nil
}

// Convert_kops_AzureSpec_To_v1alpha2_AzureSpec is an autogenerated conversion function.
func Convert_kops_AzureSpec_To_v1alpha2_AzureSpec(in *kops.AzureSpec, out *AzureSpec, s conversion.Scope) error {
	return autoConvert_kops_AzureSpec_To_v1alpha2_AzureSpec(in, out, s)
}

func autoConvert_v1alpha2_BastionLoadBalancerSpec_To_kops_BastionLoadBalancerSpec(in *BastionLoadBalancerSpec, out *kops.BastionLoadBalancerSpec, s conversion.Scope) error {
	// INFO: in.AdditionalSecurityGroups opted out of conversion generation
	out.Type = kops.LoadBalancerType(in.Type)
	return nil
}

// Convert_v1alpha2_BastionLoadBalancerSpec_To_kops_BastionLoadBalancerSpec is an autogenerated conversion function.
func Convert_v1alpha2_BastionLoadBalancerSpec_To_kops_BastionLoadBalancerSpec(in *BastionLoadBalancerSpec, out *kops.BastionLoadBalancerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_BastionLoadBalancerSpec_To_kops_BastionLoadBalancerSpec(in, out, s)
}

func autoConvert_kops_BastionLoadBalancerSpec_To_v1alpha2_BastionLoadBalancerSpec(in *kops.BastionLoadBalancerSpec, out *BastionLoadBalancerSpec, s conversion.Scope) error {
	out.Type = LoadBalancerType(in.Type)
	return nil
}

// Convert_kops_BastionLoadBalancerSpec_To_v1alpha2_BastionLoadBalancerSpec is an autogenerated conversion function.
func Convert_kops_BastionLoadBalancerSpec_To_v1alpha2_BastionLoadBalancerSpec(in *kops.BastionLoadBalancerSpec, out *BastionLoadBalancerSpec, s conversion.Scope) error {
	return autoConvert_kops_BastionLoadBalancerSpec_To_v1alpha2_BastionLoadBalancerSpec(in, out, s)
}

func autoConvert_v1alpha2_BastionSpec_To_kops_BastionSpec(in *BastionSpec, out *kops.BastionSpec, s conversion.Scope) error {
	out.PublicName = in.PublicName
	// INFO: in.IdleTimeoutSeconds opted out of conversion generation
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(kops.BastionLoadBalancerSpec)
		if err := Convert_v1alpha2_BastionLoadBalancerSpec_To_kops_BastionLoadBalancerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LoadBalancer = nil
	}
	return nil
}

// Convert_v1alpha2_BastionSpec_To_kops_BastionSpec is an autogenerated conversion function.
func Convert_v1alpha2_BastionSpec_To_kops_BastionSpec(in *BastionSpec, out *kops.BastionSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_BastionSpec_To_kops_BastionSpec(in, out, s)
}

func autoConvert_kops_BastionSpec_To_v1alpha2_BastionSpec(in *kops.BastionSpec, out *BastionSpec, s conversion.Scope) error {
	out.PublicName = in.PublicName
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(BastionLoadBalancerSpec)
		if err := Convert_kops_BastionLoadBalancerSpec_To_v1alpha2_BastionLoadBalancerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LoadBalancer = nil
	}
	return nil
}

// Convert_kops_BastionSpec_To_v1alpha2_BastionSpec is an autogenerated conversion function.
func Convert_kops_BastionSpec_To_v1alpha2_BastionSpec(in *kops.BastionSpec, out *BastionSpec, s conversion.Scope) error {
	return autoConvert_kops_BastionSpec_To_v1alpha2_BastionSpec(in, out, s)
}

func autoConvert_v1alpha2_CNINetworkingSpec_To_kops_CNINetworkingSpec(in *CNINetworkingSpec, out *kops.CNINetworkingSpec, s conversion.Scope) error {
	out.UsesSecondaryIP = in.UsesSecondaryIP
	return nil
}

// Convert_v1alpha2_CNINetworkingSpec_To_kops_CNINetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_CNINetworkingSpec_To_kops_CNINetworkingSpec(in *CNINetworkingSpec, out *kops.CNINetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_CNINetworkingSpec_To_kops_CNINetworkingSpec(in, out, s)
}

func autoConvert_kops_CNINetworkingSpec_To_v1alpha2_CNINetworkingSpec(in *kops.CNINetworkingSpec, out *CNINetworkingSpec, s conversion.Scope) error {
	out.UsesSecondaryIP = in.UsesSecondaryIP
	return nil
}

// Convert_kops_CNINetworkingSpec_To_v1alpha2_CNINetworkingSpec is an autogenerated conversion function.
func Convert_kops_CNINetworkingSpec_To_v1alpha2_CNINetworkingSpec(in *kops.CNINetworkingSpec, out *CNINetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_CNINetworkingSpec_To_v1alpha2_CNINetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_CalicoNetworkingSpec_To_kops_CalicoNetworkingSpec(in *CalicoNetworkingSpec, out *kops.CalicoNetworkingSpec, s conversion.Scope) error {
	out.Registry = in.Registry
	out.Version = in.Version
	out.AllowIPForwarding = in.AllowIPForwarding
	out.AWSSrcDstCheck = in.AWSSrcDstCheck
	out.BPFEnabled = in.BPFEnabled
	out.BPFExternalServiceMode = in.BPFExternalServiceMode
	out.BPFKubeProxyIptablesCleanupEnabled = in.BPFKubeProxyIptablesCleanupEnabled
	out.BPFLogLevel = in.BPFLogLevel
	out.ChainInsertMode = in.ChainInsertMode
	out.CPURequest = in.CPURequest
	out.CrossSubnet = in.CrossSubnet
	out.EncapsulationMode = in.EncapsulationMode
	out.IPIPMode = in.IPIPMode
	out.IPv4AutoDetectionMethod = in.IPv4AutoDetectionMethod
	out.IPv6AutoDetectionMethod = in.IPv6AutoDetectionMethod
	out.IptablesBackend = in.IptablesBackend
	out.LogSeverityScreen = in.LogSeverityScreen
	out.MTU = in.MTU
	out.PrometheusMetricsEnabled = in.PrometheusMetricsEnabled
	out.PrometheusMetricsPort = in.PrometheusMetricsPort
	out.PrometheusGoMetricsEnabled = in.PrometheusGoMetricsEnabled
	out.PrometheusProcessMetricsEnabled = in.PrometheusProcessMetricsEnabled
	// INFO: in.MajorVersion opted out of conversion generation
	out.TyphaPrometheusMetricsEnabled = in.TyphaPrometheusMetricsEnabled
	out.TyphaPrometheusMetricsPort = in.TyphaPrometheusMetricsPort
	out.TyphaReplicas = in.TyphaReplicas
	out.VXLANMode = in.VXLANMode
	out.WireguardEnabled = in.WireguardEnabled
	return nil
}

// Convert_v1alpha2_CalicoNetworkingSpec_To_kops_CalicoNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_CalicoNetworkingSpec_To_kops_CalicoNetworkingSpec(in *CalicoNetworkingSpec, out *kops.CalicoNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_CalicoNetworkingSpec_To_kops_CalicoNetworkingSpec(in, out, s)
}

func autoConvert_kops_CalicoNetworkingSpec_To_v1alpha2_CalicoNetworkingSpec(in *kops.CalicoNetworkingSpec, out *CalicoNetworkingSpec, s conversion.Scope) error {
	out.Registry = in.Registry
	out.Version = in.Version
	out.AllowIPForwarding = in.AllowIPForwarding
	out.AWSSrcDstCheck = in.AWSSrcDstCheck
	out.BPFEnabled = in.BPFEnabled
	out.BPFExternalServiceMode = in.BPFExternalServiceMode
	out.BPFKubeProxyIptablesCleanupEnabled = in.BPFKubeProxyIptablesCleanupEnabled
	out.BPFLogLevel = in.BPFLogLevel
	out.ChainInsertMode = in.ChainInsertMode
	out.CPURequest = in.CPURequest
	out.CrossSubnet = in.CrossSubnet
	out.EncapsulationMode = in.EncapsulationMode
	out.IPIPMode = in.IPIPMode
	out.IPv4AutoDetectionMethod = in.IPv4AutoDetectionMethod
	out.IPv6AutoDetectionMethod = in.IPv6AutoDetectionMethod
	out.IptablesBackend = in.IptablesBackend
	out.LogSeverityScreen = in.LogSeverityScreen
	out.MTU = in.MTU
	out.PrometheusMetricsEnabled = in.PrometheusMetricsEnabled
	out.PrometheusMetricsPort = in.PrometheusMetricsPort
	out.PrometheusGoMetricsEnabled = in.PrometheusGoMetricsEnabled
	out.PrometheusProcessMetricsEnabled = in.PrometheusProcessMetricsEnabled
	out.TyphaPrometheusMetricsEnabled = in.TyphaPrometheusMetricsEnabled
	out.TyphaPrometheusMetricsPort = in.TyphaPrometheusMetricsPort
	out.TyphaReplicas = in.TyphaReplicas
	out.VXLANMode = in.VXLANMode
	out.WireguardEnabled = in.WireguardEnabled
	return nil
}

// Convert_kops_CalicoNetworkingSpec_To_v1alpha2_CalicoNetworkingSpec is an autogenerated conversion function.
func Convert_kops_CalicoNetworkingSpec_To_v1alpha2_CalicoNetworkingSpec(in *kops.CalicoNetworkingSpec, out *CalicoNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_CalicoNetworkingSpec_To_v1alpha2_CalicoNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_CanalNetworkingSpec_To_kops_CanalNetworkingSpec(in *CanalNetworkingSpec, out *kops.CanalNetworkingSpec, s conversion.Scope) error {
	out.ChainInsertMode = in.ChainInsertMode
	out.CPURequest = in.CPURequest
	out.DefaultEndpointToHostAction = in.DefaultEndpointToHostAction
	out.FlanneldIptablesForwardRules = in.FlanneldIptablesForwardRules
	// INFO: in.DisableTxChecksumOffloading opted out of conversion generation
	out.IptablesBackend = in.IptablesBackend
	out.LogSeveritySys = in.LogSeveritySys
	out.MTU = in.MTU
	out.PrometheusGoMetricsEnabled = in.PrometheusGoMetricsEnabled
	out.PrometheusMetricsEnabled = in.PrometheusMetricsEnabled
	out.PrometheusMetricsPort = in.PrometheusMetricsPort
	out.PrometheusProcessMetricsEnabled = in.PrometheusProcessMetricsEnabled
	out.TyphaPrometheusMetricsEnabled = in.TyphaPrometheusMetricsEnabled
	out.TyphaPrometheusMetricsPort = in.TyphaPrometheusMetricsPort
	out.TyphaReplicas = in.TyphaReplicas
	return nil
}

func autoConvert_kops_CanalNetworkingSpec_To_v1alpha2_CanalNetworkingSpec(in *kops.CanalNetworkingSpec, out *CanalNetworkingSpec, s conversion.Scope) error {
	out.ChainInsertMode = in.ChainInsertMode
	out.CPURequest = in.CPURequest
	out.DefaultEndpointToHostAction = in.DefaultEndpointToHostAction
	out.FlanneldIptablesForwardRules = in.FlanneldIptablesForwardRules
	out.IptablesBackend = in.IptablesBackend
	out.LogSeveritySys = in.LogSeveritySys
	out.MTU = in.MTU
	out.PrometheusGoMetricsEnabled = in.PrometheusGoMetricsEnabled
	out.PrometheusMetricsEnabled = in.PrometheusMetricsEnabled
	out.PrometheusMetricsPort = in.PrometheusMetricsPort
	out.PrometheusProcessMetricsEnabled = in.PrometheusProcessMetricsEnabled
	out.TyphaPrometheusMetricsEnabled = in.TyphaPrometheusMetricsEnabled
	out.TyphaPrometheusMetricsPort = in.TyphaPrometheusMetricsPort
	out.TyphaReplicas = in.TyphaReplicas
	return nil
}

func autoConvert_v1alpha2_CertManagerConfig_To_kops_CertManagerConfig(in *CertManagerConfig, out *kops.CertManagerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Managed = in.Managed
	out.Image = in.Image
	out.DefaultIssuer = in.DefaultIssuer
	out.Nameservers = in.Nameservers
	out.HostedZoneIDs = in.HostedZoneIDs
	out.FeatureGates = in.FeatureGates
	return nil
}

// Convert_v1alpha2_CertManagerConfig_To_kops_CertManagerConfig is an autogenerated conversion function.
func Convert_v1alpha2_CertManagerConfig_To_kops_CertManagerConfig(in *CertManagerConfig, out *kops.CertManagerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_CertManagerConfig_To_kops_CertManagerConfig(in, out, s)
}

func autoConvert_kops_CertManagerConfig_To_v1alpha2_CertManagerConfig(in *kops.CertManagerConfig, out *CertManagerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Managed = in.Managed
	out.Image = in.Image
	out.DefaultIssuer = in.DefaultIssuer
	out.Nameservers = in.Nameservers
	out.HostedZoneIDs = in.HostedZoneIDs
	out.FeatureGates = in.FeatureGates
	return nil
}

// Convert_kops_CertManagerConfig_To_v1alpha2_CertManagerConfig is an autogenerated conversion function.
func Convert_kops_CertManagerConfig_To_v1alpha2_CertManagerConfig(in *kops.CertManagerConfig, out *CertManagerConfig, s conversion.Scope) error {
	return autoConvert_kops_CertManagerConfig_To_v1alpha2_CertManagerConfig(in, out, s)
}

func autoConvert_v1alpha2_CiliumIngressSpec_To_kops_CiliumIngressSpec(in *CiliumIngressSpec, out *kops.CiliumIngressSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.EnforceHttps = in.EnforceHttps
	out.EnableSecretsSync = in.EnableSecretsSync
	out.LoadBalancerAnnotationPrefixes = in.LoadBalancerAnnotationPrefixes
	out.DefaultLoadBalancerMode = in.DefaultLoadBalancerMode
	out.SharedLoadBalancerServiceName = in.SharedLoadBalancerServiceName
	return nil
}

// Convert_v1alpha2_CiliumIngressSpec_To_kops_CiliumIngressSpec is an autogenerated conversion function.
func Convert_v1alpha2_CiliumIngressSpec_To_kops_CiliumIngressSpec(in *CiliumIngressSpec, out *kops.CiliumIngressSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_CiliumIngressSpec_To_kops_CiliumIngressSpec(in, out, s)
}

func autoConvert_kops_CiliumIngressSpec_To_v1alpha2_CiliumIngressSpec(in *kops.CiliumIngressSpec, out *CiliumIngressSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.EnforceHttps = in.EnforceHttps
	out.EnableSecretsSync = in.EnableSecretsSync
	out.LoadBalancerAnnotationPrefixes = in.LoadBalancerAnnotationPrefixes
	out.DefaultLoadBalancerMode = in.DefaultLoadBalancerMode
	out.SharedLoadBalancerServiceName = in.SharedLoadBalancerServiceName
	return nil
}

// Convert_kops_CiliumIngressSpec_To_v1alpha2_CiliumIngressSpec is an autogenerated conversion function.
func Convert_kops_CiliumIngressSpec_To_v1alpha2_CiliumIngressSpec(in *kops.CiliumIngressSpec, out *CiliumIngressSpec, s conversion.Scope) error {
	return autoConvert_kops_CiliumIngressSpec_To_v1alpha2_CiliumIngressSpec(in, out, s)
}

func autoConvert_v1alpha2_CiliumNetworkingSpec_To_kops_CiliumNetworkingSpec(in *CiliumNetworkingSpec, out *kops.CiliumNetworkingSpec, s conversion.Scope) error {
	out.Registry = in.Registry
	out.Version = in.Version
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	// INFO: in.AccessLog opted out of conversion generation
	// INFO: in.AgentLabels opted out of conversion generation
	out.AgentPrometheusPort = in.AgentPrometheusPort
	out.Metrics = in.Metrics
	// INFO: in.AllowLocalhost opted out of conversion generation
	// INFO: in.AutoIpv6NodeRoutes opted out of conversion generation
	// INFO: in.BPFRoot opted out of conversion generation
	out.ChainingMode = in.ChainingMode
	// INFO: in.ContainerRuntime opted out of conversion generation
	// INFO: in.ContainerRuntimeEndpoint opted out of conversion generation
	out.Debug = in.Debug
	// INFO: in.DebugVerbose opted out of conversion generation
	// INFO: in.Device opted out of conversion generation
	// INFO: in.DisableConntrack opted out of conversion generation
	out.DisableEndpointCRD = in.DisableEndpointCRD
	// INFO: in.DisableIpv4 opted out of conversion generation
	// INFO: in.DisableK8sServices opted out of conversion generation
	out.EnablePolicy = in.EnablePolicy
	out.EnableL7Proxy = in.EnableL7Proxy
	out.EnableBPFMasquerade = in.EnableBPFMasquerade
	out.EnableEndpointHealthChecking = in.EnableEndpointHealthChecking
	// INFO: in.EnableTracing opted out of conversion generation
	out.EnablePrometheusMetrics = in.EnablePrometheusMetrics
	out.EnableEncryption = in.EnableEncryption
	out.EncryptionType = kops.CiliumEncryptionType(in.EncryptionType)
	out.NodeEncryption = in.NodeEncryption
	// INFO: in.EnvoyLog opted out of conversion generation
	out.IdentityAllocationMode = in.IdentityAllocationMode
	out.IdentityChangeGracePeriod = in.IdentityChangeGracePeriod
	// INFO: in.Ipv4ClusterCIDRMaskSize opted out of conversion generation
	// INFO: in.Ipv4Node opted out of conversion generation
	// INFO: in.Ipv4Range opted out of conversion generation
	// INFO: in.Ipv4ServiceRange opted out of conversion generation
	// INFO: in.Ipv6ClusterAllocCidr opted out of conversion generation
	// INFO: in.Ipv6Node opted out of conversion generation
	// INFO: in.Ipv6Range opted out of conversion generation
	// INFO: in.Ipv6ServiceRange opted out of conversion generation
	// INFO: in.K8sAPIServer opted out of conversion generation
	// INFO: in.K8sKubeconfigPath opted out of conversion generation
	// INFO: in.KeepBPFTemplates opted out of conversion generation
	// INFO: in.KeepConfig opted out of conversion generation
	// INFO: in.LabelPrefixFile opted out of conversion generation
	// INFO: in.Labels opted out of conversion generation
	// INFO: in.LB opted out of conversion generation
	// INFO: in.LibDir opted out of conversion generation
	// INFO: in.LogDrivers opted out of conversion generation
	// INFO: in.LogOpt opted out of conversion generation
	// INFO: in.Logstash opted out of conversion generation
	// INFO: in.LogstashAgent opted out of conversion generation
	// INFO: in.LogstashProbeTimer opted out of conversion generation
	out.Masquerade = in.Masquerade
	// INFO: in.Nat46Range opted out of conversion generation
	out.AgentPodAnnotations = in.AgentPodAnnotations
	out.OperatorPodAnnotations = in.OperatorPodAnnotations
	// INFO: in.Pprof opted out of conversion generation
	// INFO: in.PrefilterDevice opted out of conversion generation
	// INFO: in.PrometheusServeAddr opted out of conversion generation
	// INFO: in.Restore opted out of conversion generation
	// INFO: in.SingleClusterRoute opted out of conversion generation
	// INFO: in.SocketPath opted out of conversion generation
	// INFO: in.StateDir opted out of conversion generation
	// INFO: in.TracePayloadLen opted out of conversion generation
	out.Tunnel = in.Tunnel
	// INFO: in.EnableIpv6 opted out of conversion generation
	// INFO: in.EnableIpv4 opted out of conversion generation
	out.MonitorAggregation = in.MonitorAggregation
	out.BPFCTGlobalTCPMax = in.BPFCTGlobalTCPMax
	out.BPFCTGlobalAnyMax = in.BPFCTGlobalAnyMax
	out.BPFLBAlgorithm = in.BPFLBAlgorithm
	out.BPFLBMaglevTableSize = in.BPFLBMaglevTableSize
	out.BPFNATGlobalMax = in.BPFNATGlobalMax
	out.BPFNeighGlobalMax = in.BPFNeighGlobalMax
	out.BPFPolicyMapMax = in.BPFPolicyMapMax
	out.BPFLBMapMax = in.BPFLBMapMax
	out.BPFLBSockHostNSOnly = in.BPFLBSockHostNSOnly
	out.PreallocateBPFMaps = in.PreallocateBPFMaps
	out.SidecarIstioProxyImage = in.SidecarIstioProxyImage
	out.ClusterName = in.ClusterName
	out.ClusterID = in.ClusterID
	out.ToFQDNsDNSRejectResponseCode = in.ToFQDNsDNSRejectResponseCode
	out.ToFQDNsEnablePoller = in.ToFQDNsEnablePoller
	// INFO: in.ContainerRuntimeLabels opted out of conversion generation
	out.IPAM = in.IPAM
	out.InstallIptablesRules = in.InstallIptablesRules
	out.AutoDirectNodeRoutes = in.AutoDirectNodeRoutes
	out.EnableHostReachableServices = in.EnableHostReachableServices
	out.EnableNodePort = in.EnableNodePort
	out.EtcdManaged = in.EtcdManaged
	out.EnableRemoteNodeIdentity = in.EnableRemoteNodeIdentity
	out.EnableUnreachableRoutes = in.EnableUnreachableRoutes
	if in.Hubble != nil {
		in, out := &in.Hubble, &out.Hubble
		*out = new(kops.HubbleSpec)
		if err := Convert_v1alpha2_HubbleSpec_To_kops_HubbleSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Hubble = nil
	}
	// INFO: in.RemoveCbrBridge opted out of conversion generation
	// INFO: in.RestartPods opted out of conversion generation
	// INFO: in.ReconfigureKubelet opted out of conversion generation
	// INFO: in.NodeInitBootstrapFile opted out of conversion generation
	// INFO: in.CniBinPath opted out of conversion generation
	out.DisableCNPStatusUpdates = in.DisableCNPStatusUpdates
	out.EnableServiceTopology = in.EnableServiceTopology
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(kops.CiliumIngressSpec)
		if err := Convert_v1alpha2_CiliumIngressSpec_To_kops_CiliumIngressSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Ingress = nil
	}
	return nil
}

func autoConvert_kops_CiliumNetworkingSpec_To_v1alpha2_CiliumNetworkingSpec(in *kops.CiliumNetworkingSpec, out *CiliumNetworkingSpec, s conversion.Scope) error {
	out.Registry = in.Registry
	out.Version = in.Version
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.AgentPrometheusPort = in.AgentPrometheusPort
	out.Metrics = in.Metrics
	out.ChainingMode = in.ChainingMode
	out.Debug = in.Debug
	out.DisableEndpointCRD = in.DisableEndpointCRD
	out.EnablePolicy = in.EnablePolicy
	out.EnableL7Proxy = in.EnableL7Proxy
	out.EnableBPFMasquerade = in.EnableBPFMasquerade
	out.EnableEndpointHealthChecking = in.EnableEndpointHealthChecking
	out.EnablePrometheusMetrics = in.EnablePrometheusMetrics
	out.EnableEncryption = in.EnableEncryption
	out.EncryptionType = CiliumEncryptionType(in.EncryptionType)
	out.NodeEncryption = in.NodeEncryption
	out.IdentityAllocationMode = in.IdentityAllocationMode
	out.IdentityChangeGracePeriod = in.IdentityChangeGracePeriod
	out.Masquerade = in.Masquerade
	out.AgentPodAnnotations = in.AgentPodAnnotations
	out.OperatorPodAnnotations = in.OperatorPodAnnotations
	out.Tunnel = in.Tunnel
	out.MonitorAggregation = in.MonitorAggregation
	out.BPFCTGlobalTCPMax = in.BPFCTGlobalTCPMax
	out.BPFCTGlobalAnyMax = in.BPFCTGlobalAnyMax
	out.BPFLBAlgorithm = in.BPFLBAlgorithm
	out.BPFLBMaglevTableSize = in.BPFLBMaglevTableSize
	out.BPFNATGlobalMax = in.BPFNATGlobalMax
	out.BPFNeighGlobalMax = in.BPFNeighGlobalMax
	out.BPFPolicyMapMax = in.BPFPolicyMapMax
	out.BPFLBMapMax = in.BPFLBMapMax
	out.BPFLBSockHostNSOnly = in.BPFLBSockHostNSOnly
	out.PreallocateBPFMaps = in.PreallocateBPFMaps
	out.SidecarIstioProxyImage = in.SidecarIstioProxyImage
	out.ClusterName = in.ClusterName
	out.ClusterID = in.ClusterID
	out.ToFQDNsDNSRejectResponseCode = in.ToFQDNsDNSRejectResponseCode
	out.ToFQDNsEnablePoller = in.ToFQDNsEnablePoller
	out.IPAM = in.IPAM
	out.InstallIptablesRules = in.InstallIptablesRules
	out.AutoDirectNodeRoutes = in.AutoDirectNodeRoutes
	out.EnableHostReachableServices = in.EnableHostReachableServices
	out.EnableNodePort = in.EnableNodePort
	out.EtcdManaged = in.EtcdManaged
	out.EnableRemoteNodeIdentity = in.EnableRemoteNodeIdentity
	out.EnableUnreachableRoutes = in.EnableUnreachableRoutes
	if in.Hubble != nil {
		in, out := &in.Hubble, &out.Hubble
		*out = new(HubbleSpec)
		if err := Convert_kops_HubbleSpec_To_v1alpha2_HubbleSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Hubble = nil
	}
	out.DisableCNPStatusUpdates = in.DisableCNPStatusUpdates
	out.EnableServiceTopology = in.EnableServiceTopology
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(CiliumIngressSpec)
		if err := Convert_kops_CiliumIngressSpec_To_v1alpha2_CiliumIngressSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Ingress = nil
	}
	return nil
}

func autoConvert_v1alpha2_ClassicNetworkingSpec_To_kops_ClassicNetworkingSpec(in *ClassicNetworkingSpec, out *kops.ClassicNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_ClassicNetworkingSpec_To_kops_ClassicNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClassicNetworkingSpec_To_kops_ClassicNetworkingSpec(in *ClassicNetworkingSpec, out *kops.ClassicNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClassicNetworkingSpec_To_kops_ClassicNetworkingSpec(in, out, s)
}

func autoConvert_kops_ClassicNetworkingSpec_To_v1alpha2_ClassicNetworkingSpec(in *kops.ClassicNetworkingSpec, out *ClassicNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_ClassicNetworkingSpec_To_v1alpha2_ClassicNetworkingSpec is an autogenerated conversion function.
func Convert_kops_ClassicNetworkingSpec_To_v1alpha2_ClassicNetworkingSpec(in *kops.ClassicNetworkingSpec, out *ClassicNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_ClassicNetworkingSpec_To_v1alpha2_ClassicNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_CloudConfiguration_To_kops_CloudConfiguration(in *CloudConfiguration, out *kops.CloudConfiguration, s conversion.Scope) error {
	out.ManageStorageClasses = in.ManageStorageClasses
	// INFO: in.Multizone opted out of conversion generation
	// INFO: in.NodeTags opted out of conversion generation
	// INFO: in.NodeInstancePrefix opted out of conversion generation
	// INFO: in.NodeIPFamilies opted out of conversion generation
	// INFO: in.GCEServiceAccount opted out of conversion generation
	// INFO: in.GCEUseStartupScript opted out of conversion generation
	// INFO: in.DisableSecurityGroupIngress opted out of conversion generation
	// INFO: in.ElbSecurityGroup opted out of conversion generation
	// INFO: in.VSphereUsername opted out of conversion generation
	// INFO: in.VSpherePassword opted out of conversion generation
	// INFO: in.VSphereServer opted out of conversion generation
	// INFO: in.VSphereDatacenter opted out of conversion generation
	// INFO: in.VSphereResourcePool opted out of conversion generation
	// INFO: in.VSphereDatastore opted out of conversion generation
	// INFO: in.VSphereCoreDNSServer opted out of conversion generation
	// INFO: in.SpotinstProduct opted out of conversion generation
	// INFO: in.SpotinstOrientation opted out of conversion generation
	// INFO: in.Openstack opted out of conversion generation
	// INFO: in.Azure opted out of conversion generation
	// INFO: in.AWSEBSCSIDriver opted out of conversion generation
	// INFO: in.GCPPDCSIDriver opted out of conversion generation
	return nil
}

// Convert_v1alpha2_CloudConfiguration_To_kops_CloudConfiguration is an autogenerated conversion function.
func Convert_v1alpha2_CloudConfiguration_To_kops_CloudConfiguration(in *CloudConfiguration, out *kops.CloudConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha2_CloudConfiguration_To_kops_CloudConfiguration(in, out, s)
}

func autoConvert_kops_CloudConfiguration_To_v1alpha2_CloudConfiguration(in *kops.CloudConfiguration, out *CloudConfiguration, s conversion.Scope) error {
	out.ManageStorageClasses = in.ManageStorageClasses
	return nil
}

// Convert_kops_CloudConfiguration_To_v1alpha2_CloudConfiguration is an autogenerated conversion function.
func Convert_kops_CloudConfiguration_To_v1alpha2_CloudConfiguration(in *kops.CloudConfiguration, out *CloudConfiguration, s conversion.Scope) error {
	return autoConvert_kops_CloudConfiguration_To_v1alpha2_CloudConfiguration(in, out, s)
}

func autoConvert_v1alpha2_CloudControllerManagerConfig_To_kops_CloudControllerManagerConfig(in *CloudControllerManagerConfig, out *kops.CloudControllerManagerConfig, s conversion.Scope) error {
	out.Master = in.Master
	out.LogLevel = in.LogLevel
	out.Image = in.Image
	out.CloudProvider = in.CloudProvider
	out.ClusterName = in.ClusterName
	out.AllowUntaggedCloud = in.AllowUntaggedCloud
	out.ClusterCIDR = in.ClusterCIDR
	out.AllocateNodeCIDRs = in.AllocateNodeCIDRs
	out.ConfigureCloudRoutes = in.ConfigureCloudRoutes
	out.Controllers = in.Controllers
	out.CIDRAllocatorType = in.CIDRAllocatorType
	if in.LeaderElection != nil {
		in, out := &in.LeaderElection, &out.LeaderElection
		*out = new(kops.LeaderElectionConfiguration)
		if err := Convert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LeaderElection = nil
	}
	out.UseServiceAccountCredentials = in.UseServiceAccountCredentials
	out.EnableLeaderMigration = in.EnableLeaderMigration
	out.CPURequest = in.CPURequest
	out.NodeStatusUpdateFrequency = in.NodeStatusUpdateFrequency
	out.ConcurrentNodeSyncs = in.ConcurrentNodeSyncs
	return nil
}

// Convert_v1alpha2_CloudControllerManagerConfig_To_kops_CloudControllerManagerConfig is an autogenerated conversion function.
func Convert_v1alpha2_CloudControllerManagerConfig_To_kops_CloudControllerManagerConfig(in *CloudControllerManagerConfig, out *kops.CloudControllerManagerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_CloudControllerManagerConfig_To_kops_CloudControllerManagerConfig(in, out, s)
}

func autoConvert_kops_CloudControllerManagerConfig_To_v1alpha2_CloudControllerManagerConfig(in *kops.CloudControllerManagerConfig, out *CloudControllerManagerConfig, s conversion.Scope) error {
	out.Master = in.Master
	out.LogLevel = in.LogLevel
	out.Image = in.Image
	out.CloudProvider = in.CloudProvider
	out.ClusterName = in.ClusterName
	out.AllowUntaggedCloud = in.AllowUntaggedCloud
	out.ClusterCIDR = in.ClusterCIDR
	out.AllocateNodeCIDRs = in.AllocateNodeCIDRs
	out.ConfigureCloudRoutes = in.ConfigureCloudRoutes
	out.Controllers = in.Controllers
	out.CIDRAllocatorType = in.CIDRAllocatorType
	if in.LeaderElection != nil {
		in, out := &in.LeaderElection, &out.LeaderElection
		*out = new(LeaderElectionConfiguration)
		if err := Convert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LeaderElection = nil
	}
	out.UseServiceAccountCredentials = in.UseServiceAccountCredentials
	out.EnableLeaderMigration = in.EnableLeaderMigration
	out.CPURequest = in.CPURequest
	out.NodeStatusUpdateFrequency = in.NodeStatusUpdateFrequency
	out.ConcurrentNodeSyncs = in.ConcurrentNodeSyncs
	return nil
}

// Convert_kops_CloudControllerManagerConfig_To_v1alpha2_CloudControllerManagerConfig is an autogenerated conversion function.
func Convert_kops_CloudControllerManagerConfig_To_v1alpha2_CloudControllerManagerConfig(in *kops.CloudControllerManagerConfig, out *CloudControllerManagerConfig, s conversion.Scope) error {
	return autoConvert_kops_CloudControllerManagerConfig_To_v1alpha2_CloudControllerManagerConfig(in, out, s)
}

func autoConvert_v1alpha2_Cluster_To_kops_Cluster(in *Cluster, out *kops.Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_ClusterSpec_To_kops_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_Cluster_To_kops_Cluster is an autogenerated conversion function.
func Convert_v1alpha2_Cluster_To_kops_Cluster(in *Cluster, out *kops.Cluster, s conversion.Scope) error {
	return autoConvert_v1alpha2_Cluster_To_kops_Cluster(in, out, s)
}

func autoConvert_kops_Cluster_To_v1alpha2_Cluster(in *kops.Cluster, out *Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_kops_ClusterSpec_To_v1alpha2_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_kops_Cluster_To_v1alpha2_Cluster is an autogenerated conversion function.
func Convert_kops_Cluster_To_v1alpha2_Cluster(in *kops.Cluster, out *Cluster, s conversion.Scope) error {
	return autoConvert_kops_Cluster_To_v1alpha2_Cluster(in, out, s)
}

func autoConvert_v1alpha2_ClusterAutoscalerConfig_To_kops_ClusterAutoscalerConfig(in *ClusterAutoscalerConfig, out *kops.ClusterAutoscalerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Expander = in.Expander
	out.BalanceSimilarNodeGroups = in.BalanceSimilarNodeGroups
	out.EmitPerNodegroupMetrics = in.EmitPerNodegroupMetrics
	out.AWSUseStaticInstanceList = in.AWSUseStaticInstanceList
	out.IgnoreDaemonSetsUtilization = in.IgnoreDaemonSetsUtilization
	out.ScaleDownUtilizationThreshold = in.ScaleDownUtilizationThreshold
	out.SkipNodesWithCustomControllerPods = in.SkipNodesWithCustomControllerPods
	out.SkipNodesWithSystemPods = in.SkipNodesWithSystemPods
	out.SkipNodesWithLocalStorage = in.SkipNodesWithLocalStorage
	out.NewPodScaleUpDelay = in.NewPodScaleUpDelay
	out.ScaleDownDelayAfterAdd = in.ScaleDownDelayAfterAdd
	out.ScaleDownUnneededTime = in.ScaleDownUnneededTime
	out.ScaleDownUnreadyTime = in.ScaleDownUnreadyTime
	out.CordonNodeBeforeTerminating = in.CordonNodeBeforeTerminating
	out.Image = in.Image
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MaxNodeProvisionTime = in.MaxNodeProvisionTime
	out.PodAnnotations = in.PodAnnotations
	out.CreatePriorityExpenderConfig = in.CreatePriorityExpenderConfig
	out.CustomPriorityExpanderConfig = in.CustomPriorityExpanderConfig
	return nil
}

// Convert_v1alpha2_ClusterAutoscalerConfig_To_kops_ClusterAutoscalerConfig is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAutoscalerConfig_To_kops_ClusterAutoscalerConfig(in *ClusterAutoscalerConfig, out *kops.ClusterAutoscalerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAutoscalerConfig_To_kops_ClusterAutoscalerConfig(in, out, s)
}

func autoConvert_kops_ClusterAutoscalerConfig_To_v1alpha2_ClusterAutoscalerConfig(in *kops.ClusterAutoscalerConfig, out *ClusterAutoscalerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Expander = in.Expander
	out.BalanceSimilarNodeGroups = in.BalanceSimilarNodeGroups
	out.EmitPerNodegroupMetrics = in.EmitPerNodegroupMetrics
	out.AWSUseStaticInstanceList = in.AWSUseStaticInstanceList
	out.IgnoreDaemonSetsUtilization = in.IgnoreDaemonSetsUtilization
	out.ScaleDownUtilizationThreshold = in.ScaleDownUtilizationThreshold
	out.SkipNodesWithCustomControllerPods = in.SkipNodesWithCustomControllerPods
	out.SkipNodesWithSystemPods = in.SkipNodesWithSystemPods
	out.SkipNodesWithLocalStorage = in.SkipNodesWithLocalStorage
	out.NewPodScaleUpDelay = in.NewPodScaleUpDelay
	out.ScaleDownDelayAfterAdd = in.ScaleDownDelayAfterAdd
	out.ScaleDownUnneededTime = in.ScaleDownUnneededTime
	out.ScaleDownUnreadyTime = in.ScaleDownUnreadyTime
	out.CordonNodeBeforeTerminating = in.CordonNodeBeforeTerminating
	out.Image = in.Image
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MaxNodeProvisionTime = in.MaxNodeProvisionTime
	out.PodAnnotations = in.PodAnnotations
	out.CreatePriorityExpenderConfig = in.CreatePriorityExpenderConfig
	out.CustomPriorityExpanderConfig = in.CustomPriorityExpanderConfig
	return nil
}

// Convert_kops_ClusterAutoscalerConfig_To_v1alpha2_ClusterAutoscalerConfig is an autogenerated conversion function.
func Convert_kops_ClusterAutoscalerConfig_To_v1alpha2_ClusterAutoscalerConfig(in *kops.ClusterAutoscalerConfig, out *ClusterAutoscalerConfig, s conversion.Scope) error {
	return autoConvert_kops_ClusterAutoscalerConfig_To_v1alpha2_ClusterAutoscalerConfig(in, out, s)
}

func autoConvert_v1alpha2_ClusterList_To_kops_ClusterList(in *ClusterList, out *kops.ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]kops.Cluster, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_Cluster_To_kops_Cluster(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_ClusterList_To_kops_ClusterList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterList_To_kops_ClusterList(in *ClusterList, out *kops.ClusterList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterList_To_kops_ClusterList(in, out, s)
}

func autoConvert_kops_ClusterList_To_v1alpha2_ClusterList(in *kops.ClusterList, out *ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			if err := Convert_kops_Cluster_To_v1alpha2_Cluster(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_kops_ClusterList_To_v1alpha2_ClusterList is an autogenerated conversion function.
func Convert_kops_ClusterList_To_v1alpha2_ClusterList(in *kops.ClusterList, out *ClusterList, s conversion.Scope) error {
	return autoConvert_kops_ClusterList_To_v1alpha2_ClusterList(in, out, s)
}

func autoConvert_v1alpha2_ClusterSpec_To_kops_ClusterSpec(in *ClusterSpec, out *kops.ClusterSpec, s conversion.Scope) error {
	out.Channel = in.Channel
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = make([]kops.AddonSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_AddonSpec_To_kops_AddonSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Addons = nil
	}
	out.ConfigStore = in.ConfigStore
	// INFO: in.ConfigBase opted out of conversion generation
	out.CloudProvider = in.CloudProvider
	// INFO: in.LegacyCloudProvider opted out of conversion generation
	if in.GossipConfig != nil {
		in, out := &in.GossipConfig, &out.GossipConfig
		*out = new(kops.GossipConfig)
		if err := Convert_v1alpha2_GossipConfig_To_kops_GossipConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GossipConfig = nil
	}
	out.ContainerRuntime = in.ContainerRuntime
	out.KubernetesVersion = in.KubernetesVersion
	// INFO: in.Subnets opted out of conversion generation
	// INFO: in.Project opted out of conversion generation
	// INFO: in.MasterPublicName opted out of conversion generation
	// INFO: in.MasterInternalName opted out of conversion generation
	// INFO: in.NetworkCIDR opted out of conversion generation
	// INFO: in.AdditionalNetworkCIDRs opted out of conversion generation
	// INFO: in.NetworkID opted out of conversion generation
	// INFO: in.Topology opted out of conversion generation
	// INFO: in.SecretStore opted out of conversion generation
	// INFO: in.KeyStore opted out of conversion generation
	// INFO: in.LegacyConfigStore opted out of conversion generation
	out.DNSZone = in.DNSZone
	if in.DNSControllerGossipConfig != nil {
		in, out := &in.DNSControllerGossipConfig, &out.DNSControllerGossipConfig
		*out = new(kops.DNSControllerGossipConfig)
		if err := Convert_v1alpha2_DNSControllerGossipConfig_To_kops_DNSControllerGossipConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DNSControllerGossipConfig = nil
	}
	// INFO: in.AdditionalSANs opted out of conversion generation
	out.ClusterDNSDomain = in.ClusterDNSDomain
	// INFO: in.ServiceClusterIPRange opted out of conversion generation
	// INFO: in.PodCIDR opted out of conversion generation
	// INFO: in.NonMasqueradeCIDR opted out of conversion generation
	out.SSHAccess = in.SSHAccess
	out.NodePortAccess = in.NodePortAccess
	// INFO: in.EgressProxy opted out of conversion generation
	out.SSHKeyName = in.SSHKeyName
	// INFO: in.KubernetesAPIAccess opted out of conversion generation
	// INFO: in.IsolateMasters opted out of conversion generation
	out.UpdatePolicy = in.UpdatePolicy
	out.ExternalPolicies = in.ExternalPolicies
	out.AdditionalPolicies = in.AdditionalPolicies
	if in.FileAssets != nil {
		in, out := &in.FileAssets, &out.FileAssets
		*out = make([]kops.FileAssetSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.FileAssets = nil
	}
	if in.EtcdClusters != nil {
		in, out := &in.EtcdClusters, &out.EtcdClusters
		*out = make([]kops.EtcdClusterSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_EtcdClusterSpec_To_kops_EtcdClusterSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.EtcdClusters = nil
	}
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = new(kops.DockerConfig)
		if err := Convert_v1alpha2_DockerConfig_To_kops_DockerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Docker = nil
	}
	if in.Containerd != nil {
		in, out := &in.Containerd, &out.Containerd
		*out = new(kops.ContainerdConfig)
		if err := Convert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Containerd = nil
	}
	if in.KubeDNS != nil {
		in, out := &in.KubeDNS, &out.KubeDNS
		*out = new(kops.KubeDNSConfig)
		if err := Convert_v1alpha2_KubeDNSConfig_To_kops_KubeDNSConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeDNS = nil
	}
	if in.KubeAPIServer != nil {
		in, out := &in.KubeAPIServer, &out.KubeAPIServer
		*out = new(kops.KubeAPIServerConfig)
		if err := Convert_v1alpha2_KubeAPIServerConfig_To_kops_KubeAPIServerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeAPIServer = nil
	}
	if in.KubeControllerManager != nil {
		in, out := &in.KubeControllerManager, &out.KubeControllerManager
		*out = new(kops.KubeControllerManagerConfig)
		if err := Convert_v1alpha2_KubeControllerManagerConfig_To_kops_KubeControllerManagerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeControllerManager = nil
	}
	if in.ExternalCloudControllerManager != nil {
		in, out := &in.ExternalCloudControllerManager, &out.ExternalCloudControllerManager
		*out = new(kops.CloudControllerManagerConfig)
		if err := Convert_v1alpha2_CloudControllerManagerConfig_To_kops_CloudControllerManagerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ExternalCloudControllerManager = nil
	}
	if in.KubeScheduler != nil {
		in, out := &in.KubeScheduler, &out.KubeScheduler
		*out = new(kops.KubeSchedulerConfig)
		if err := Convert_v1alpha2_KubeSchedulerConfig_To_kops_KubeSchedulerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeScheduler = nil
	}
	if in.KubeProxy != nil {
		in, out := &in.KubeProxy, &out.KubeProxy
		*out = new(kops.KubeProxyConfig)
		if err := Convert_v1alpha2_KubeProxyConfig_To_kops_KubeProxyConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeProxy = nil
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = new(kops.KubeletConfigSpec)
		if err := Convert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kubelet = nil
	}
	if in.ControlPlaneKubelet != nil {
		in, out := &in.ControlPlaneKubelet, &out.ControlPlaneKubelet
		*out = new(kops.KubeletConfigSpec)
		if err := Convert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ControlPlaneKubelet = nil
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = new(kops.CloudConfiguration)
		if err := Convert_v1alpha2_CloudConfiguration_To_kops_CloudConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CloudConfig = nil
	}
	if in.ExternalDNS != nil {
		in, out := &in.ExternalDNS, &out.ExternalDNS
		*out = new(kops.ExternalDNSConfig)
		if err := Convert_v1alpha2_ExternalDNSConfig_To_kops_ExternalDNSConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ExternalDNS = nil
	}
	if in.NTP != nil {
		in, out := &in.NTP, &out.NTP
		*out = new(kops.NTPConfig)
		if err := Convert_v1alpha2_NTPConfig_To_kops_NTPConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NTP = nil
	}
	out.Packages = in.Packages
	// INFO: in.NodeTerminationHandler opted out of conversion generation
	if in.NodeProblemDetector != nil {
		in, out := &in.NodeProblemDetector, &out.NodeProblemDetector
		*out = new(kops.NodeProblemDetectorConfig)
		if err := Convert_v1alpha2_NodeProblemDetectorConfig_To_kops_NodeProblemDetectorConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeProblemDetector = nil
	}
	if in.MetricsServer != nil {
		in, out := &in.MetricsServer, &out.MetricsServer
		*out = new(kops.MetricsServerConfig)
		if err := Convert_v1alpha2_MetricsServerConfig_To_kops_MetricsServerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.MetricsServer = nil
	}
	if in.CertManager != nil {
		in, out := &in.CertManager, &out.CertManager
		*out = new(kops.CertManagerConfig)
		if err := Convert_v1alpha2_CertManagerConfig_To_kops_CertManagerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CertManager = nil
	}
	// INFO: in.AWSLoadBalancerController opted out of conversion generation
	// INFO: in.LegacyNetworking opted out of conversion generation
	if err := Convert_v1alpha2_NetworkingSpec_To_kops_NetworkingSpec(&in.Networking, &out.Networking, s); err != nil {
		return err
	}
	// INFO: in.LegacyAPI opted out of conversion generation
	if err := Convert_v1alpha2_APISpec_To_kops_APISpec(&in.API, &out.API, s); err != nil {
		return err
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(kops.AuthenticationSpec)
		if err := Convert_v1alpha2_AuthenticationSpec_To_kops_AuthenticationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Authentication = nil
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(kops.AuthorizationSpec)
		if err := Convert_v1alpha2_AuthorizationSpec_To_kops_AuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Authorization = nil
	}
	if in.NodeAuthorization != nil {
		in, out := &in.NodeAuthorization, &out.NodeAuthorization
		*out = new(kops.NodeAuthorizationSpec)
		if err := Convert_v1alpha2_NodeAuthorizationSpec_To_kops_NodeAuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeAuthorization = nil
	}
	out.CloudLabels = in.CloudLabels
	if in.Hooks != nil {
		in, out := &in.Hooks, &out.Hooks
		*out = make([]kops.HookSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_HookSpec_To_kops_HookSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Hooks = nil
	}
	if in.Assets != nil {
		in, out := &in.Assets, &out.Assets
		*out = new(kops.AssetsSpec)
		if err := Convert_v1alpha2_AssetsSpec_To_kops_AssetsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Assets = nil
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(kops.IAMSpec)
		if err := Convert_v1alpha2_IAMSpec_To_kops_IAMSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.IAM = nil
	}
	out.EncryptionConfig = in.EncryptionConfig
	// INFO: in.TagSubnets opted out of conversion generation
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(kops.TargetSpec)
		if err := Convert_v1alpha2_TargetSpec_To_kops_TargetSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Target = nil
	}
	out.UseHostCertificates = in.UseHostCertificates
	out.SysctlParameters = in.SysctlParameters
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(kops.RollingUpdate)
		if err := Convert_v1alpha2_RollingUpdate_To_kops_RollingUpdate(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	if in.ClusterAutoscaler != nil {
		in, out := &in.ClusterAutoscaler, &out.ClusterAutoscaler
		*out = new(kops.ClusterAutoscalerConfig)
		if err := Convert_v1alpha2_ClusterAutoscalerConfig_To_kops_ClusterAutoscalerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ClusterAutoscaler = nil
	}
	// INFO: in.WarmPool opted out of conversion generation
	if in.ServiceAccountIssuerDiscovery != nil {
		in, out := &in.ServiceAccountIssuerDiscovery, &out.ServiceAccountIssuerDiscovery
		*out = new(kops.ServiceAccountIssuerDiscoveryConfig)
		if err := Convert_v1alpha2_ServiceAccountIssuerDiscoveryConfig_To_kops_ServiceAccountIssuerDiscoveryConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ServiceAccountIssuerDiscovery = nil
	}
	if in.SnapshotController != nil {
		in, out := &in.SnapshotController, &out.SnapshotController
		*out = new(kops.SnapshotControllerConfig)
		if err := Convert_v1alpha2_SnapshotControllerConfig_To_kops_SnapshotControllerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SnapshotController = nil
	}
	if in.Karpenter != nil {
		in, out := &in.Karpenter, &out.Karpenter
		*out = new(kops.KarpenterConfig)
		if err := Convert_v1alpha2_KarpenterConfig_To_kops_KarpenterConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Karpenter = nil
	}
	// INFO: in.PodIdentityWebhook opted out of conversion generation
	return nil
}

func autoConvert_kops_ClusterSpec_To_v1alpha2_ClusterSpec(in *kops.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	out.Channel = in.Channel
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = make([]AddonSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_AddonSpec_To_v1alpha2_AddonSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Addons = nil
	}
	out.ConfigStore = in.ConfigStore
	out.CloudProvider = in.CloudProvider
	if in.GossipConfig != nil {
		in, out := &in.GossipConfig, &out.GossipConfig
		*out = new(GossipConfig)
		if err := Convert_kops_GossipConfig_To_v1alpha2_GossipConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GossipConfig = nil
	}
	out.ContainerRuntime = in.ContainerRuntime
	out.KubernetesVersion = in.KubernetesVersion
	out.DNSZone = in.DNSZone
	if in.DNSControllerGossipConfig != nil {
		in, out := &in.DNSControllerGossipConfig, &out.DNSControllerGossipConfig
		*out = new(DNSControllerGossipConfig)
		if err := Convert_kops_DNSControllerGossipConfig_To_v1alpha2_DNSControllerGossipConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DNSControllerGossipConfig = nil
	}
	out.ClusterDNSDomain = in.ClusterDNSDomain
	out.SSHAccess = in.SSHAccess
	out.NodePortAccess = in.NodePortAccess
	out.SSHKeyName = in.SSHKeyName
	out.UpdatePolicy = in.UpdatePolicy
	out.ExternalPolicies = in.ExternalPolicies
	out.AdditionalPolicies = in.AdditionalPolicies
	if in.FileAssets != nil {
		in, out := &in.FileAssets, &out.FileAssets
		*out = make([]FileAssetSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.FileAssets = nil
	}
	if in.EtcdClusters != nil {
		in, out := &in.EtcdClusters, &out.EtcdClusters
		*out = make([]EtcdClusterSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_EtcdClusterSpec_To_v1alpha2_EtcdClusterSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.EtcdClusters = nil
	}
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = new(DockerConfig)
		if err := Convert_kops_DockerConfig_To_v1alpha2_DockerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Docker = nil
	}
	if in.Containerd != nil {
		in, out := &in.Containerd, &out.Containerd
		*out = new(ContainerdConfig)
		if err := Convert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Containerd = nil
	}
	if in.KubeDNS != nil {
		in, out := &in.KubeDNS, &out.KubeDNS
		*out = new(KubeDNSConfig)
		if err := Convert_kops_KubeDNSConfig_To_v1alpha2_KubeDNSConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeDNS = nil
	}
	if in.KubeAPIServer != nil {
		in, out := &in.KubeAPIServer, &out.KubeAPIServer
		*out = new(KubeAPIServerConfig)
		if err := Convert_kops_KubeAPIServerConfig_To_v1alpha2_KubeAPIServerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeAPIServer = nil
	}
	if in.KubeControllerManager != nil {
		in, out := &in.KubeControllerManager, &out.KubeControllerManager
		*out = new(KubeControllerManagerConfig)
		if err := Convert_kops_KubeControllerManagerConfig_To_v1alpha2_KubeControllerManagerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeControllerManager = nil
	}
	if in.ExternalCloudControllerManager != nil {
		in, out := &in.ExternalCloudControllerManager, &out.ExternalCloudControllerManager
		*out = new(CloudControllerManagerConfig)
		if err := Convert_kops_CloudControllerManagerConfig_To_v1alpha2_CloudControllerManagerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ExternalCloudControllerManager = nil
	}
	if in.KubeScheduler != nil {
		in, out := &in.KubeScheduler, &out.KubeScheduler
		*out = new(KubeSchedulerConfig)
		if err := Convert_kops_KubeSchedulerConfig_To_v1alpha2_KubeSchedulerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeScheduler = nil
	}
	if in.KubeProxy != nil {
		in, out := &in.KubeProxy, &out.KubeProxy
		*out = new(KubeProxyConfig)
		if err := Convert_kops_KubeProxyConfig_To_v1alpha2_KubeProxyConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeProxy = nil
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = new(KubeletConfigSpec)
		if err := Convert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kubelet = nil
	}
	if in.ControlPlaneKubelet != nil {
		in, out := &in.ControlPlaneKubelet, &out.ControlPlaneKubelet
		*out = new(KubeletConfigSpec)
		if err := Convert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ControlPlaneKubelet = nil
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = new(CloudConfiguration)
		if err := Convert_kops_CloudConfiguration_To_v1alpha2_CloudConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CloudConfig = nil
	}
	if in.ExternalDNS != nil {
		in, out := &in.ExternalDNS, &out.ExternalDNS
		*out = new(ExternalDNSConfig)
		if err := Convert_kops_ExternalDNSConfig_To_v1alpha2_ExternalDNSConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ExternalDNS = nil
	}
	if in.NTP != nil {
		in, out := &in.NTP, &out.NTP
		*out = new(NTPConfig)
		if err := Convert_kops_NTPConfig_To_v1alpha2_NTPConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NTP = nil
	}
	out.Packages = in.Packages
	if in.NodeProblemDetector != nil {
		in, out := &in.NodeProblemDetector, &out.NodeProblemDetector
		*out = new(NodeProblemDetectorConfig)
		if err := Convert_kops_NodeProblemDetectorConfig_To_v1alpha2_NodeProblemDetectorConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeProblemDetector = nil
	}
	if in.MetricsServer != nil {
		in, out := &in.MetricsServer, &out.MetricsServer
		*out = new(MetricsServerConfig)
		if err := Convert_kops_MetricsServerConfig_To_v1alpha2_MetricsServerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.MetricsServer = nil
	}
	if in.CertManager != nil {
		in, out := &in.CertManager, &out.CertManager
		*out = new(CertManagerConfig)
		if err := Convert_kops_CertManagerConfig_To_v1alpha2_CertManagerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CertManager = nil
	}
	if err := Convert_kops_NetworkingSpec_To_v1alpha2_NetworkingSpec(&in.Networking, &out.Networking, s); err != nil {
		return err
	}
	if err := Convert_kops_APISpec_To_v1alpha2_APISpec(&in.API, &out.API, s); err != nil {
		return err
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(AuthenticationSpec)
		if err := Convert_kops_AuthenticationSpec_To_v1alpha2_AuthenticationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Authentication = nil
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(AuthorizationSpec)
		if err := Convert_kops_AuthorizationSpec_To_v1alpha2_AuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Authorization = nil
	}
	if in.NodeAuthorization != nil {
		in, out := &in.NodeAuthorization, &out.NodeAuthorization
		*out = new(NodeAuthorizationSpec)
		if err := Convert_kops_NodeAuthorizationSpec_To_v1alpha2_NodeAuthorizationSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeAuthorization = nil
	}
	out.CloudLabels = in.CloudLabels
	if in.Hooks != nil {
		in, out := &in.Hooks, &out.Hooks
		*out = make([]HookSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_HookSpec_To_v1alpha2_HookSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Hooks = nil
	}
	if in.Assets != nil {
		in, out := &in.Assets, &out.Assets
		*out = new(AssetsSpec)
		if err := Convert_kops_AssetsSpec_To_v1alpha2_AssetsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Assets = nil
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(IAMSpec)
		if err := Convert_kops_IAMSpec_To_v1alpha2_IAMSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.IAM = nil
	}
	out.EncryptionConfig = in.EncryptionConfig
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(TargetSpec)
		if err := Convert_kops_TargetSpec_To_v1alpha2_TargetSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Target = nil
	}
	out.UseHostCertificates = in.UseHostCertificates
	out.SysctlParameters = in.SysctlParameters
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(RollingUpdate)
		if err := Convert_kops_RollingUpdate_To_v1alpha2_RollingUpdate(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	if in.ClusterAutoscaler != nil {
		in, out := &in.ClusterAutoscaler, &out.ClusterAutoscaler
		*out = new(ClusterAutoscalerConfig)
		if err := Convert_kops_ClusterAutoscalerConfig_To_v1alpha2_ClusterAutoscalerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ClusterAutoscaler = nil
	}
	if in.ServiceAccountIssuerDiscovery != nil {
		in, out := &in.ServiceAccountIssuerDiscovery, &out.ServiceAccountIssuerDiscovery
		*out = new(ServiceAccountIssuerDiscoveryConfig)
		if err := Convert_kops_ServiceAccountIssuerDiscoveryConfig_To_v1alpha2_ServiceAccountIssuerDiscoveryConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ServiceAccountIssuerDiscovery = nil
	}
	if in.SnapshotController != nil {
		in, out := &in.SnapshotController, &out.SnapshotController
		*out = new(SnapshotControllerConfig)
		if err := Convert_kops_SnapshotControllerConfig_To_v1alpha2_SnapshotControllerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SnapshotController = nil
	}
	if in.Karpenter != nil {
		in, out := &in.Karpenter, &out.Karpenter
		*out = new(KarpenterConfig)
		if err := Convert_kops_KarpenterConfig_To_v1alpha2_KarpenterConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Karpenter = nil
	}
	return nil
}

func autoConvert_v1alpha2_ClusterSubnetSpec_To_kops_ClusterSubnetSpec(in *ClusterSubnetSpec, out *kops.ClusterSubnetSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Zone = in.Zone
	out.Region = in.Region
	out.CIDR = in.CIDR
	out.IPv6CIDR = in.IPv6CIDR
	out.ID = in.ID
	out.Egress = in.Egress
	out.Type = kops.SubnetType(in.Type)
	out.PublicIP = in.PublicIP
	if in.AdditionalRoutes != nil {
		in, out := &in.AdditionalRoutes, &out.AdditionalRoutes
		*out = make([]kops.RouteSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_RouteSpec_To_kops_RouteSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.AdditionalRoutes = nil
	}
	return nil
}

// Convert_v1alpha2_ClusterSubnetSpec_To_kops_ClusterSubnetSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClusterSubnetSpec_To_kops_ClusterSubnetSpec(in *ClusterSubnetSpec, out *kops.ClusterSubnetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterSubnetSpec_To_kops_ClusterSubnetSpec(in, out, s)
}

func autoConvert_kops_ClusterSubnetSpec_To_v1alpha2_ClusterSubnetSpec(in *kops.ClusterSubnetSpec, out *ClusterSubnetSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.CIDR = in.CIDR
	out.IPv6CIDR = in.IPv6CIDR
	out.Zone = in.Zone
	out.Region = in.Region
	out.ID = in.ID
	out.Egress = in.Egress
	out.Type = SubnetType(in.Type)
	out.PublicIP = in.PublicIP
	if in.AdditionalRoutes != nil {
		in, out := &in.AdditionalRoutes, &out.AdditionalRoutes
		*out = make([]RouteSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_RouteSpec_To_v1alpha2_RouteSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.AdditionalRoutes = nil
	}
	return nil
}

// Convert_kops_ClusterSubnetSpec_To_v1alpha2_ClusterSubnetSpec is an autogenerated conversion function.
func Convert_kops_ClusterSubnetSpec_To_v1alpha2_ClusterSubnetSpec(in *kops.ClusterSubnetSpec, out *ClusterSubnetSpec, s conversion.Scope) error {
	return autoConvert_kops_ClusterSubnetSpec_To_v1alpha2_ClusterSubnetSpec(in, out, s)
}

func autoConvert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig(in *ContainerdConfig, out *kops.ContainerdConfig, s conversion.Scope) error {
	out.Address = in.Address
	out.ConfigAdditions = in.ConfigAdditions
	out.ConfigOverride = in.ConfigOverride
	out.LogLevel = in.LogLevel
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(kops.PackagesConfig)
		if err := Convert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Packages = nil
	}
	out.RegistryMirrors = in.RegistryMirrors
	out.Root = in.Root
	out.SkipInstall = in.SkipInstall
	out.State = in.State
	out.Version = in.Version
	if in.NvidiaGPU != nil {
		in, out := &in.NvidiaGPU, &out.NvidiaGPU
		*out = new(kops.NvidiaGPUConfig)
		if err := Convert_v1alpha2_NvidiaGPUConfig_To_kops_NvidiaGPUConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NvidiaGPU = nil
	}
	if in.Runc != nil {
		in, out := &in.Runc, &out.Runc
		*out = new(kops.Runc)
		if err := Convert_v1alpha2_Runc_To_kops_Runc(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Runc = nil
	}
	out.SeLinuxEnabled = in.SeLinuxEnabled
	if in.NRI != nil {
		in, out := &in.NRI, &out.NRI
		*out = new(kops.NRIConfig)
		if err := Convert_v1alpha2_NRIConfig_To_kops_NRIConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NRI = nil
	}
	out.UseECRCredentialsForMirrors = in.UseECRCredentialsForMirrors
	return nil
}

// Convert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig is an autogenerated conversion function.
func Convert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig(in *ContainerdConfig, out *kops.ContainerdConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig(in, out, s)
}

func autoConvert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig(in *kops.ContainerdConfig, out *ContainerdConfig, s conversion.Scope) error {
	out.Address = in.Address
	out.ConfigAdditions = in.ConfigAdditions
	out.ConfigOverride = in.ConfigOverride
	out.LogLevel = in.LogLevel
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(PackagesConfig)
		if err := Convert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Packages = nil
	}
	out.RegistryMirrors = in.RegistryMirrors
	out.Root = in.Root
	out.SkipInstall = in.SkipInstall
	out.State = in.State
	out.Version = in.Version
	if in.NvidiaGPU != nil {
		in, out := &in.NvidiaGPU, &out.NvidiaGPU
		*out = new(NvidiaGPUConfig)
		if err := Convert_kops_NvidiaGPUConfig_To_v1alpha2_NvidiaGPUConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NvidiaGPU = nil
	}
	if in.Runc != nil {
		in, out := &in.Runc, &out.Runc
		*out = new(Runc)
		if err := Convert_kops_Runc_To_v1alpha2_Runc(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Runc = nil
	}
	out.SeLinuxEnabled = in.SeLinuxEnabled
	if in.NRI != nil {
		in, out := &in.NRI, &out.NRI
		*out = new(NRIConfig)
		if err := Convert_kops_NRIConfig_To_v1alpha2_NRIConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NRI = nil
	}
	out.UseECRCredentialsForMirrors = in.UseECRCredentialsForMirrors
	return nil
}

// Convert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig is an autogenerated conversion function.
func Convert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig(in *kops.ContainerdConfig, out *ContainerdConfig, s conversion.Scope) error {
	return autoConvert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig(in, out, s)
}

func autoConvert_v1alpha2_DCGMExporterConfig_To_kops_DCGMExporterConfig(in *DCGMExporterConfig, out *kops.DCGMExporterConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_DCGMExporterConfig_To_kops_DCGMExporterConfig is an autogenerated conversion function.
func Convert_v1alpha2_DCGMExporterConfig_To_kops_DCGMExporterConfig(in *DCGMExporterConfig, out *kops.DCGMExporterConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_DCGMExporterConfig_To_kops_DCGMExporterConfig(in, out, s)
}

func autoConvert_kops_DCGMExporterConfig_To_v1alpha2_DCGMExporterConfig(in *kops.DCGMExporterConfig, out *DCGMExporterConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_kops_DCGMExporterConfig_To_v1alpha2_DCGMExporterConfig is an autogenerated conversion function.
func Convert_kops_DCGMExporterConfig_To_v1alpha2_DCGMExporterConfig(in *kops.DCGMExporterConfig, out *DCGMExporterConfig, s conversion.Scope) error {
	return autoConvert_kops_DCGMExporterConfig_To_v1alpha2_DCGMExporterConfig(in, out, s)
}

func autoConvert_v1alpha2_DNSAccessSpec_To_kops_DNSAccessSpec(in *DNSAccessSpec, out *kops.DNSAccessSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_DNSAccessSpec_To_kops_DNSAccessSpec is an autogenerated conversion function.
func Convert_v1alpha2_DNSAccessSpec_To_kops_DNSAccessSpec(in *DNSAccessSpec, out *kops.DNSAccessSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_DNSAccessSpec_To_kops_DNSAccessSpec(in, out, s)
}

func autoConvert_kops_DNSAccessSpec_To_v1alpha2_DNSAccessSpec(in *kops.DNSAccessSpec, out *DNSAccessSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_DNSAccessSpec_To_v1alpha2_DNSAccessSpec is an autogenerated conversion function.
func Convert_kops_DNSAccessSpec_To_v1alpha2_DNSAccessSpec(in *kops.DNSAccessSpec, out *DNSAccessSpec, s conversion.Scope) error {
	return autoConvert_kops_DNSAccessSpec_To_v1alpha2_DNSAccessSpec(in, out, s)
}

func autoConvert_v1alpha2_DNSControllerGossipConfig_To_kops_DNSControllerGossipConfig(in *DNSControllerGossipConfig, out *kops.DNSControllerGossipConfig, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	if in.Secondary != nil {
		in, out := &in.Secondary, &out.Secondary
		*out = new(kops.DNSControllerGossipConfigSecondary)
		if err := Convert_v1alpha2_DNSControllerGossipConfigSecondary_To_kops_DNSControllerGossipConfigSecondary(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Secondary = nil
	}
	out.Seed = in.Seed
	return nil
}

// Convert_v1alpha2_DNSControllerGossipConfig_To_kops_DNSControllerGossipConfig is an autogenerated conversion function.
func Convert_v1alpha2_DNSControllerGossipConfig_To_kops_DNSControllerGossipConfig(in *DNSControllerGossipConfig, out *kops.DNSControllerGossipConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_DNSControllerGossipConfig_To_kops_DNSControllerGossipConfig(in, out, s)
}

func autoConvert_kops_DNSControllerGossipConfig_To_v1alpha2_DNSControllerGossipConfig(in *kops.DNSControllerGossipConfig, out *DNSControllerGossipConfig, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	if in.Secondary != nil {
		in, out := &in.Secondary, &out.Secondary
		*out = new(DNSControllerGossipConfigSecondary)
		if err := Convert_kops_DNSControllerGossipConfigSecondary_To_v1alpha2_DNSControllerGossipConfigSecondary(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Secondary = nil
	}
	out.Seed = in.Seed
	return nil
}

// Convert_kops_DNSControllerGossipConfig_To_v1alpha2_DNSControllerGossipConfig is an autogenerated conversion function.
func Convert_kops_DNSControllerGossipConfig_To_v1alpha2_DNSControllerGossipConfig(in *kops.DNSControllerGossipConfig, out *DNSControllerGossipConfig, s conversion.Scope) error {
	return autoConvert_kops_DNSControllerGossipConfig_To_v1alpha2_DNSControllerGossipConfig(in, out, s)
}

func autoConvert_v1alpha2_DNSControllerGossipConfigSecondary_To_kops_DNSControllerGossipConfigSecondary(in *DNSControllerGossipConfigSecondary, out *kops.DNSControllerGossipConfigSecondary, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	out.Seed = in.Seed
	return nil
}

// Convert_v1alpha2_DNSControllerGossipConfigSecondary_To_kops_DNSControllerGossipConfigSecondary is an autogenerated conversion function.
func Convert_v1alpha2_DNSControllerGossipConfigSecondary_To_kops_DNSControllerGossipConfigSecondary(in *DNSControllerGossipConfigSecondary, out *kops.DNSControllerGossipConfigSecondary, s conversion.Scope) error {
	return autoConvert_v1alpha2_DNSControllerGossipConfigSecondary_To_kops_DNSControllerGossipConfigSecondary(in, out, s)
}

func autoConvert_kops_DNSControllerGossipConfigSecondary_To_v1alpha2_DNSControllerGossipConfigSecondary(in *kops.DNSControllerGossipConfigSecondary, out *DNSControllerGossipConfigSecondary, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	out.Seed = in.Seed
	return nil
}

// Convert_kops_DNSControllerGossipConfigSecondary_To_v1alpha2_DNSControllerGossipConfigSecondary is an autogenerated conversion function.
func Convert_kops_DNSControllerGossipConfigSecondary_To_v1alpha2_DNSControllerGossipConfigSecondary(in *kops.DNSControllerGossipConfigSecondary, out *DNSControllerGossipConfigSecondary, s conversion.Scope) error {
	return autoConvert_kops_DNSControllerGossipConfigSecondary_To_v1alpha2_DNSControllerGossipConfigSecondary(in, out, s)
}

func autoConvert_v1alpha2_DockerConfig_To_kops_DockerConfig(in *DockerConfig, out *kops.DockerConfig, s conversion.Scope) error {
	out.AuthorizationPlugins = in.AuthorizationPlugins
	out.Bridge = in.Bridge
	out.BridgeIP = in.BridgeIP
	out.DataRoot = in.DataRoot
	out.DefaultUlimit = in.DefaultUlimit
	out.DefaultRuntime = in.DefaultRuntime
	out.DNS = in.DNS
	out.ExecOpt = in.ExecOpt
	out.ExecRoot = in.ExecRoot
	out.Experimental = in.Experimental
	out.HealthCheck = in.HealthCheck
	out.Hosts = in.Hosts
	out.IPMasq = in.IPMasq
	out.IPTables = in.IPTables
	out.InsecureRegistry = in.InsecureRegistry
	out.InsecureRegistries = in.InsecureRegistries
	out.LiveRestore = in.LiveRestore
	out.LogDriver = in.LogDriver
	out.LogLevel = in.LogLevel
	out.LogOpt = in.LogOpt
	out.MaxConcurrentDownloads = in.MaxConcurrentDownloads
	out.MaxConcurrentUploads = in.MaxConcurrentUploads
	out.MaxDownloadAttempts = in.MaxDownloadAttempts
	out.MetricsAddress = in.MetricsAddress
	out.MTU = in.MTU
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(kops.PackagesConfig)
		if err := Convert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Packages = nil
	}
	out.RegistryMirrors = in.RegistryMirrors
	out.Runtimes = in.Runtimes
	out.SelinuxEnabled = in.SelinuxEnabled
	out.SkipInstall = in.SkipInstall
	out.Storage = in.Storage
	out.StorageOpts = in.StorageOpts
	out.UserNamespaceRemap = in.UserNamespaceRemap
	out.Version = in.Version
	return nil
}

// Convert_v1alpha2_DockerConfig_To_kops_DockerConfig is an autogenerated conversion function.
func Convert_v1alpha2_DockerConfig_To_kops_DockerConfig(in *DockerConfig, out *kops.DockerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_DockerConfig_To_kops_DockerConfig(in, out, s)
}

func autoConvert_kops_DockerConfig_To_v1alpha2_DockerConfig(in *kops.DockerConfig, out *DockerConfig, s conversion.Scope) error {
	out.AuthorizationPlugins = in.AuthorizationPlugins
	out.Bridge = in.Bridge
	out.BridgeIP = in.BridgeIP
	out.DataRoot = in.DataRoot
	out.DefaultUlimit = in.DefaultUlimit
	out.DefaultRuntime = in.DefaultRuntime
	out.DNS = in.DNS
	out.ExecOpt = in.ExecOpt
	out.ExecRoot = in.ExecRoot
	out.Experimental = in.Experimental
	out.HealthCheck = in.HealthCheck
	out.Hosts = in.Hosts
	out.IPMasq = in.IPMasq
	out.IPTables = in.IPTables
	out.InsecureRegistry = in.InsecureRegistry
	out.InsecureRegistries = in.InsecureRegistries
	out.LiveRestore = in.LiveRestore
	out.LogDriver = in.LogDriver
	out.LogLevel = in.LogLevel
	out.LogOpt = in.LogOpt
	out.MaxConcurrentDownloads = in.MaxConcurrentDownloads
	out.MaxConcurrentUploads = in.MaxConcurrentUploads
	out.MaxDownloadAttempts = in.MaxDownloadAttempts
	out.MetricsAddress = in.MetricsAddress
	out.MTU = in.MTU
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(PackagesConfig)
		if err := Convert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Packages = nil
	}
	out.RegistryMirrors = in.RegistryMirrors
	out.Runtimes = in.Runtimes
	out.SelinuxEnabled = in.SelinuxEnabled
	out.SkipInstall = in.SkipInstall
	out.Storage = in.Storage
	out.StorageOpts = in.StorageOpts
	out.UserNamespaceRemap = in.UserNamespaceRemap
	out.Version = in.Version
	return nil
}

// Convert_kops_DockerConfig_To_v1alpha2_DockerConfig is an autogenerated conversion function.
func Convert_kops_DockerConfig_To_v1alpha2_DockerConfig(in *kops.DockerConfig, out *DockerConfig, s conversion.Scope) error {
	return autoConvert_kops_DockerConfig_To_v1alpha2_DockerConfig(in, out, s)
}

func autoConvert_v1alpha2_EBSCSIDriverSpec_To_kops_EBSCSIDriverSpec(in *EBSCSIDriverSpec, out *kops.EBSCSIDriverSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Managed = in.Managed
	out.Version = in.Version
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = in.KubeAPIBurst
	out.HostNetwork = in.HostNetwork
	out.VolumeAttachLimit = in.VolumeAttachLimit
	out.PodAnnotations = in.PodAnnotations
	return nil
}

// Convert_v1alpha2_EBSCSIDriverSpec_To_kops_EBSCSIDriverSpec is an autogenerated conversion function.
func Convert_v1alpha2_EBSCSIDriverSpec_To_kops_EBSCSIDriverSpec(in *EBSCSIDriverSpec, out *kops.EBSCSIDriverSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_EBSCSIDriverSpec_To_kops_EBSCSIDriverSpec(in, out, s)
}

func autoConvert_kops_EBSCSIDriverSpec_To_v1alpha2_EBSCSIDriverSpec(in *kops.EBSCSIDriverSpec, out *EBSCSIDriverSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Managed = in.Managed
	out.Version = in.Version
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = in.KubeAPIBurst
	out.HostNetwork = in.HostNetwork
	out.VolumeAttachLimit = in.VolumeAttachLimit
	out.PodAnnotations = in.PodAnnotations
	return nil
}

// Convert_kops_EBSCSIDriverSpec_To_v1alpha2_EBSCSIDriverSpec is an autogenerated conversion function.
func Convert_kops_EBSCSIDriverSpec_To_v1alpha2_EBSCSIDriverSpec(in *kops.EBSCSIDriverSpec, out *EBSCSIDriverSpec, s conversion.Scope) error {
	return autoConvert_kops_EBSCSIDriverSpec_To_v1alpha2_EBSCSIDriverSpec(in, out, s)
}

func autoConvert_v1alpha2_EgressProxySpec_To_kops_EgressProxySpec(in *EgressProxySpec, out *kops.EgressProxySpec, s conversion.Scope) error {
	if err := Convert_v1alpha2_HTTPProxy_To_kops_HTTPProxy(&in.HTTPProxy, &out.HTTPProxy, s); err != nil {
		return err
	}
	out.ProxyExcludes = in.ProxyExcludes
	return nil
}

// Convert_v1alpha2_EgressProxySpec_To_kops_EgressProxySpec is an autogenerated conversion function.
func Convert_v1alpha2_EgressProxySpec_To_kops_EgressProxySpec(in *EgressProxySpec, out *kops.EgressProxySpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_EgressProxySpec_To_kops_EgressProxySpec(in, out, s)
}

func autoConvert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec(in *kops.EgressProxySpec, out *EgressProxySpec, s conversion.Scope) error {
	if err := Convert_kops_HTTPProxy_To_v1alpha2_HTTPProxy(&in.HTTPProxy, &out.HTTPProxy, s); err != nil {
		return err
	}
	out.ProxyExcludes = in.ProxyExcludes
	return nil
}

// Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec is an autogenerated conversion function.
func Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec(in *kops.EgressProxySpec, out *EgressProxySpec, s conversion.Scope) error {
	return autoConvert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec(in, out, s)
}

func autoConvert_v1alpha2_EnvVar_To_kops_EnvVar(in *EnvVar, out *kops.EnvVar, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_v1alpha2_EnvVar_To_kops_EnvVar is an autogenerated conversion function.
func Convert_v1alpha2_EnvVar_To_kops_EnvVar(in *EnvVar, out *kops.EnvVar, s conversion.Scope) error {
	return autoConvert_v1alpha2_EnvVar_To_kops_EnvVar(in, out, s)
}

func autoConvert_kops_EnvVar_To_v1alpha2_EnvVar(in *kops.EnvVar, out *EnvVar, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_kops_EnvVar_To_v1alpha2_EnvVar is an autogenerated conversion function.
func Convert_kops_EnvVar_To_v1alpha2_EnvVar(in *kops.EnvVar, out *EnvVar, s conversion.Scope) error {
	return autoConvert_kops_EnvVar_To_v1alpha2_EnvVar(in, out, s)
}

func autoConvert_v1alpha2_EtcdBackupSpec_To_kops_EtcdBackupSpec(in *EtcdBackupSpec, out *kops.EtcdBackupSpec, s conversion.Scope) error {
	out.BackupStore = in.BackupStore
	out.Image = in.Image
	return nil
}

// Convert_v1alpha2_EtcdBackupSpec_To_kops_EtcdBackupSpec is an autogenerated conversion function.
func Convert_v1alpha2_EtcdBackupSpec_To_kops_EtcdBackupSpec(in *EtcdBackupSpec, out *kops.EtcdBackupSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_EtcdBackupSpec_To_kops_EtcdBackupSpec(in, out, s)
}

func autoConvert_kops_EtcdBackupSpec_To_v1alpha2_EtcdBackupSpec(in *kops.EtcdBackupSpec, out *EtcdBackupSpec, s conversion.Scope) error {
	out.BackupStore = in.BackupStore
	out.Image = in.Image
	return nil
}

// Convert_kops_EtcdBackupSpec_To_v1alpha2_EtcdBackupSpec is an autogenerated conversion function.
func Convert_kops_EtcdBackupSpec_To_v1alpha2_EtcdBackupSpec(in *kops.EtcdBackupSpec, out *EtcdBackupSpec, s conversion.Scope) error {
	return autoConvert_kops_EtcdBackupSpec_To_v1alpha2_EtcdBackupSpec(in, out, s)
}

func autoConvert_v1alpha2_EtcdClusterSpec_To_kops_EtcdClusterSpec(in *EtcdClusterSpec, out *kops.EtcdClusterSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Provider = kops.EtcdProviderType(in.Provider)
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]kops.EtcdMemberSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_EtcdMemberSpec_To_kops_EtcdMemberSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Members = nil
	}
	// INFO: in.EnableEtcdTLS opted out of conversion generation
	// INFO: in.EnableTLSAuth opted out of conversion generation
	out.Version = in.Version
	out.LeaderElectionTimeout = in.LeaderElectionTimeout
	out.HeartbeatInterval = in.HeartbeatInterval
	out.Image = in.Image
	if in.Backups != nil {
		in, out := &in.Backups, &out.Backups
		*out = new(kops.EtcdBackupSpec)
		if err := Convert_v1alpha2_EtcdBackupSpec_To_kops_EtcdBackupSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Backups = nil
	}
	if in.Manager != nil {
		in, out := &in.Manager, &out.Manager
		*out = new(kops.EtcdManagerSpec)
		if err := Convert_v1alpha2_EtcdManagerSpec_To_kops_EtcdManagerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Manager = nil
	}
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	return nil
}

// Convert_v1alpha2_EtcdClusterSpec_To_kops_EtcdClusterSpec is an autogenerated conversion function.
func Convert_v1alpha2_EtcdClusterSpec_To_kops_EtcdClusterSpec(in *EtcdClusterSpec, out *kops.EtcdClusterSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_EtcdClusterSpec_To_kops_EtcdClusterSpec(in, out, s)
}

func autoConvert_kops_EtcdClusterSpec_To_v1alpha2_EtcdClusterSpec(in *kops.EtcdClusterSpec, out *EtcdClusterSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Provider = EtcdProviderType(in.Provider)
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]EtcdMemberSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_EtcdMemberSpec_To_v1alpha2_EtcdMemberSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Members = nil
	}
	out.Version = in.Version
	out.LeaderElectionTimeout = in.LeaderElectionTimeout
	out.HeartbeatInterval = in.HeartbeatInterval
	out.Image = in.Image
	if in.Backups != nil {
		in, out := &in.Backups, &out.Backups
		*out = new(EtcdBackupSpec)
		if err := Convert_kops_EtcdBackupSpec_To_v1alpha2_EtcdBackupSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Backups = nil
	}
	if in.Manager != nil {
		in, out := &in.Manager, &out.Manager
		*out = new(EtcdManagerSpec)
		if err := Convert_kops_EtcdManagerSpec_To_v1alpha2_EtcdManagerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Manager = nil
	}
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	return nil
}

// Convert_kops_EtcdClusterSpec_To_v1alpha2_EtcdClusterSpec is an autogenerated conversion function.
func Convert_kops_EtcdClusterSpec_To_v1alpha2_EtcdClusterSpec(in *kops.EtcdClusterSpec, out *EtcdClusterSpec, s conversion.Scope) error {
	return autoConvert_kops_EtcdClusterSpec_To_v1alpha2_EtcdClusterSpec(in, out, s)
}

func autoConvert_v1alpha2_EtcdManagerSpec_To_kops_EtcdManagerSpec(in *EtcdManagerSpec, out *kops.EtcdManagerSpec, s conversion.Scope) error {
	out.Image = in.Image
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]kops.EnvVar, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_EnvVar_To_kops_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.BackupInterval = in.BackupInterval
	out.BackupRetentionDays = in.BackupRetentionDays
	out.DiscoveryPollInterval = in.DiscoveryPollInterval
	out.ListenMetricsURLs = in.ListenMetricsURLs
	out.LogLevel = in.LogLevel
	return nil
}

// Convert_v1alpha2_EtcdManagerSpec_To_kops_EtcdManagerSpec is an autogenerated conversion function.
func Convert_v1alpha2_EtcdManagerSpec_To_kops_EtcdManagerSpec(in *EtcdManagerSpec, out *kops.EtcdManagerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_EtcdManagerSpec_To_kops_EtcdManagerSpec(in, out, s)
}

func autoConvert_kops_EtcdManagerSpec_To_v1alpha2_EtcdManagerSpec(in *kops.EtcdManagerSpec, out *EtcdManagerSpec, s conversion.Scope) error {
	out.Image = in.Image
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]EnvVar, len(*in))
		for i := range *in {
			if err := Convert_kops_EnvVar_To_v1alpha2_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.BackupInterval = in.BackupInterval
	out.BackupRetentionDays = in.BackupRetentionDays
	out.DiscoveryPollInterval = in.DiscoveryPollInterval
	out.ListenMetricsURLs = in.ListenMetricsURLs
	out.LogLevel = in.LogLevel
	return nil
}

// Convert_kops_EtcdManagerSpec_To_v1alpha2_EtcdManagerSpec is an autogenerated conversion function.
func Convert_kops_EtcdManagerSpec_To_v1alpha2_EtcdManagerSpec(in *kops.EtcdManagerSpec, out *EtcdManagerSpec, s conversion.Scope) error {
	return autoConvert_kops_EtcdManagerSpec_To_v1alpha2_EtcdManagerSpec(in, out, s)
}

func autoConvert_v1alpha2_EtcdMemberSpec_To_kops_EtcdMemberSpec(in *EtcdMemberSpec, out *kops.EtcdMemberSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.InstanceGroup = in.InstanceGroup
	out.VolumeType = in.VolumeType
	out.VolumeIOPS = in.VolumeIOPS
	out.VolumeThroughput = in.VolumeThroughput
	out.VolumeSize = in.VolumeSize
	out.KmsKeyID = in.KmsKeyID
	out.EncryptedVolume = in.EncryptedVolume
	return nil
}

// Convert_v1alpha2_EtcdMemberSpec_To_kops_EtcdMemberSpec is an autogenerated conversion function.
func Convert_v1alpha2_EtcdMemberSpec_To_kops_EtcdMemberSpec(in *EtcdMemberSpec, out *kops.EtcdMemberSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_EtcdMemberSpec_To_kops_EtcdMemberSpec(in, out, s)
}

func autoConvert_kops_EtcdMemberSpec_To_v1alpha2_EtcdMemberSpec(in *kops.EtcdMemberSpec, out *EtcdMemberSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.InstanceGroup = in.InstanceGroup
	out.VolumeType = in.VolumeType
	out.VolumeIOPS = in.VolumeIOPS
	out.VolumeThroughput = in.VolumeThroughput
	out.VolumeSize = in.VolumeSize
	out.KmsKeyID = in.KmsKeyID
	out.EncryptedVolume = in.EncryptedVolume
	return nil
}

// Convert_kops_EtcdMemberSpec_To_v1alpha2_EtcdMemberSpec is an autogenerated conversion function.
func Convert_kops_EtcdMemberSpec_To_v1alpha2_EtcdMemberSpec(in *kops.EtcdMemberSpec, out *EtcdMemberSpec, s conversion.Scope) error {
	return autoConvert_kops_EtcdMemberSpec_To_v1alpha2_EtcdMemberSpec(in, out, s)
}

func autoConvert_v1alpha2_ExecContainerAction_To_kops_ExecContainerAction(in *ExecContainerAction, out *kops.ExecContainerAction, s conversion.Scope) error {
	out.Image = in.Image
	out.Command = in.Command
	out.Environment = in.Environment
	return nil
}

// Convert_v1alpha2_ExecContainerAction_To_kops_ExecContainerAction is an autogenerated conversion function.
func Convert_v1alpha2_ExecContainerAction_To_kops_ExecContainerAction(in *ExecContainerAction, out *kops.ExecContainerAction, s conversion.Scope) error {
	return autoConvert_v1alpha2_ExecContainerAction_To_kops_ExecContainerAction(in, out, s)
}

func autoConvert_kops_ExecContainerAction_To_v1alpha2_ExecContainerAction(in *kops.ExecContainerAction, out *ExecContainerAction, s conversion.Scope) error {
	out.Image = in.Image
	out.Command = in.Command
	out.Environment = in.Environment
	return nil
}

// Convert_kops_ExecContainerAction_To_v1alpha2_ExecContainerAction is an autogenerated conversion function.
func Convert_kops_ExecContainerAction_To_v1alpha2_ExecContainerAction(in *kops.ExecContainerAction, out *ExecContainerAction, s conversion.Scope) error {
	return autoConvert_kops_ExecContainerAction_To_v1alpha2_ExecContainerAction(in, out, s)
}

func autoConvert_v1alpha2_ExternalDNSConfig_To_kops_ExternalDNSConfig(in *ExternalDNSConfig, out *kops.ExternalDNSConfig, s conversion.Scope) error {
	// INFO: in.Disable opted out of conversion generation
	out.WatchIngress = in.WatchIngress
	out.WatchNamespace = in.WatchNamespace
	out.Provider = kops.ExternalDNSProvider(in.Provider)
	return nil
}

func autoConvert_kops_ExternalDNSConfig_To_v1alpha2_ExternalDNSConfig(in *kops.ExternalDNSConfig, out *ExternalDNSConfig, s conversion.Scope) error {
	out.WatchIngress = in.WatchIngress
	out.WatchNamespace = in.WatchNamespace
	out.Provider = ExternalDNSProvider(in.Provider)
	return nil
}

func autoConvert_v1alpha2_ExternalNetworkingSpec_To_kops_ExternalNetworkingSpec(in *ExternalNetworkingSpec, out *kops.ExternalNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_ExternalNetworkingSpec_To_kops_ExternalNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_ExternalNetworkingSpec_To_kops_ExternalNetworkingSpec(in *ExternalNetworkingSpec, out *kops.ExternalNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ExternalNetworkingSpec_To_kops_ExternalNetworkingSpec(in, out, s)
}

func autoConvert_kops_ExternalNetworkingSpec_To_v1alpha2_ExternalNetworkingSpec(in *kops.ExternalNetworkingSpec, out *ExternalNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_ExternalNetworkingSpec_To_v1alpha2_ExternalNetworkingSpec is an autogenerated conversion function.
func Convert_kops_ExternalNetworkingSpec_To_v1alpha2_ExternalNetworkingSpec(in *kops.ExternalNetworkingSpec, out *ExternalNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_ExternalNetworkingSpec_To_v1alpha2_ExternalNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec(in *FileAssetSpec, out *kops.FileAssetSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Path = in.Path
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]kops.InstanceGroupRole, len(*in))
		for i := range *in {
			(*out)[i] = kops.InstanceGroupRole((*in)[i])
		}
	} else {
		out.Roles = nil
	}
	out.Content = in.Content
	out.IsBase64 = in.IsBase64
	out.Mode = in.Mode
	return nil
}

// Convert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec is an autogenerated conversion function.
func Convert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec(in *FileAssetSpec, out *kops.FileAssetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec(in, out, s)
}

func autoConvert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec(in *kops.FileAssetSpec, out *FileAssetSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Path = in.Path
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]InstanceGroupRole, len(*in))
		for i := range *in {
			(*out)[i] = InstanceGroupRole((*in)[i])
		}
	} else {
		out.Roles = nil
	}
	out.Content = in.Content
	out.IsBase64 = in.IsBase64
	out.Mode = in.Mode
	return nil
}

// Convert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec is an autogenerated conversion function.
func Convert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec(in *kops.FileAssetSpec, out *FileAssetSpec, s conversion.Scope) error {
	return autoConvert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec(in, out, s)
}

func autoConvert_v1alpha2_FlannelNetworkingSpec_To_kops_FlannelNetworkingSpec(in *FlannelNetworkingSpec, out *kops.FlannelNetworkingSpec, s conversion.Scope) error {
	out.Backend = in.Backend
	// INFO: in.DisableTxChecksumOffloading opted out of conversion generation
	out.IptablesResyncSeconds = in.IptablesResyncSeconds
	return nil
}

// Convert_v1alpha2_FlannelNetworkingSpec_To_kops_FlannelNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_FlannelNetworkingSpec_To_kops_FlannelNetworkingSpec(in *FlannelNetworkingSpec, out *kops.FlannelNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_FlannelNetworkingSpec_To_kops_FlannelNetworkingSpec(in, out, s)
}

func autoConvert_kops_FlannelNetworkingSpec_To_v1alpha2_FlannelNetworkingSpec(in *kops.FlannelNetworkingSpec, out *FlannelNetworkingSpec, s conversion.Scope) error {
	out.Backend = in.Backend
	out.IptablesResyncSeconds = in.IptablesResyncSeconds
	return nil
}

// Convert_kops_FlannelNetworkingSpec_To_v1alpha2_FlannelNetworkingSpec is an autogenerated conversion function.
func Convert_kops_FlannelNetworkingSpec_To_v1alpha2_FlannelNetworkingSpec(in *kops.FlannelNetworkingSpec, out *FlannelNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_FlannelNetworkingSpec_To_v1alpha2_FlannelNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_GCPNetworkingSpec_To_kops_GCPNetworkingSpec(in *GCPNetworkingSpec, out *kops.GCPNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_GCPNetworkingSpec_To_kops_GCPNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_GCPNetworkingSpec_To_kops_GCPNetworkingSpec(in *GCPNetworkingSpec, out *kops.GCPNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_GCPNetworkingSpec_To_kops_GCPNetworkingSpec(in, out, s)
}

func autoConvert_kops_GCPNetworkingSpec_To_v1alpha2_GCPNetworkingSpec(in *kops.GCPNetworkingSpec, out *GCPNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_GCPNetworkingSpec_To_v1alpha2_GCPNetworkingSpec is an autogenerated conversion function.
func Convert_kops_GCPNetworkingSpec_To_v1alpha2_GCPNetworkingSpec(in *kops.GCPNetworkingSpec, out *GCPNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_GCPNetworkingSpec_To_v1alpha2_GCPNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_GossipConfig_To_kops_GossipConfig(in *GossipConfig, out *kops.GossipConfig, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	if in.Secondary != nil {
		in, out := &in.Secondary, &out.Secondary
		*out = new(kops.GossipConfigSecondary)
		if err := Convert_v1alpha2_GossipConfigSecondary_To_kops_GossipConfigSecondary(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Secondary = nil
	}
	return nil
}

// Convert_v1alpha2_GossipConfig_To_kops_GossipConfig is an autogenerated conversion function.
func Convert_v1alpha2_GossipConfig_To_kops_GossipConfig(in *GossipConfig, out *kops.GossipConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_GossipConfig_To_kops_GossipConfig(in, out, s)
}

func autoConvert_kops_GossipConfig_To_v1alpha2_GossipConfig(in *kops.GossipConfig, out *GossipConfig, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	if in.Secondary != nil {
		in, out := &in.Secondary, &out.Secondary
		*out = new(GossipConfigSecondary)
		if err := Convert_kops_GossipConfigSecondary_To_v1alpha2_GossipConfigSecondary(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Secondary = nil
	}
	return nil
}

// Convert_kops_GossipConfig_To_v1alpha2_GossipConfig is an autogenerated conversion function.
func Convert_kops_GossipConfig_To_v1alpha2_GossipConfig(in *kops.GossipConfig, out *GossipConfig, s conversion.Scope) error {
	return autoConvert_kops_GossipConfig_To_v1alpha2_GossipConfig(in, out, s)
}

func autoConvert_v1alpha2_GossipConfigSecondary_To_kops_GossipConfigSecondary(in *GossipConfigSecondary, out *kops.GossipConfigSecondary, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	return nil
}

// Convert_v1alpha2_GossipConfigSecondary_To_kops_GossipConfigSecondary is an autogenerated conversion function.
func Convert_v1alpha2_GossipConfigSecondary_To_kops_GossipConfigSecondary(in *GossipConfigSecondary, out *kops.GossipConfigSecondary, s conversion.Scope) error {
	return autoConvert_v1alpha2_GossipConfigSecondary_To_kops_GossipConfigSecondary(in, out, s)
}

func autoConvert_kops_GossipConfigSecondary_To_v1alpha2_GossipConfigSecondary(in *kops.GossipConfigSecondary, out *GossipConfigSecondary, s conversion.Scope) error {
	out.Protocol = in.Protocol
	out.Listen = in.Listen
	out.Secret = in.Secret
	return nil
}

// Convert_kops_GossipConfigSecondary_To_v1alpha2_GossipConfigSecondary is an autogenerated conversion function.
func Convert_kops_GossipConfigSecondary_To_v1alpha2_GossipConfigSecondary(in *kops.GossipConfigSecondary, out *GossipConfigSecondary, s conversion.Scope) error {
	return autoConvert_kops_GossipConfigSecondary_To_v1alpha2_GossipConfigSecondary(in, out, s)
}

func autoConvert_v1alpha2_HTTPProxy_To_kops_HTTPProxy(in *HTTPProxy, out *kops.HTTPProxy, s conversion.Scope) error {
	out.Host = in.Host
	out.Port = in.Port
	return nil
}

// Convert_v1alpha2_HTTPProxy_To_kops_HTTPProxy is an autogenerated conversion function.
func Convert_v1alpha2_HTTPProxy_To_kops_HTTPProxy(in *HTTPProxy, out *kops.HTTPProxy, s conversion.Scope) error {
	return autoConvert_v1alpha2_HTTPProxy_To_kops_HTTPProxy(in, out, s)
}

func autoConvert_kops_HTTPProxy_To_v1alpha2_HTTPProxy(in *kops.HTTPProxy, out *HTTPProxy, s conversion.Scope) error {
	out.Host = in.Host
	out.Port = in.Port
	return nil
}

// Convert_kops_HTTPProxy_To_v1alpha2_HTTPProxy is an autogenerated conversion function.
func Convert_kops_HTTPProxy_To_v1alpha2_HTTPProxy(in *kops.HTTPProxy, out *HTTPProxy, s conversion.Scope) error {
	return autoConvert_kops_HTTPProxy_To_v1alpha2_HTTPProxy(in, out, s)
}

func autoConvert_v1alpha2_HookSpec_To_kops_HookSpec(in *HookSpec, out *kops.HookSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Enabled = in.Enabled
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]kops.InstanceGroupRole, len(*in))
		for i := range *in {
			(*out)[i] = kops.InstanceGroupRole((*in)[i])
		}
	} else {
		out.Roles = nil
	}
	out.Requires = in.Requires
	out.Before = in.Before
	if in.ExecContainer != nil {
		in, out := &in.ExecContainer, &out.ExecContainer
		*out = new(kops.ExecContainerAction)
		if err := Convert_v1alpha2_ExecContainerAction_To_kops_ExecContainerAction(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ExecContainer = nil
	}
	out.Manifest = in.Manifest
	out.UseRawManifest = in.UseRawManifest
	return nil
}

func autoConvert_kops_HookSpec_To_v1alpha2_HookSpec(in *kops.HookSpec, out *HookSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Enabled = in.Enabled
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]InstanceGroupRole, len(*in))
		for i := range *in {
			(*out)[i] = InstanceGroupRole((*in)[i])
		}
	} else {
		out.Roles = nil
	}
	out.Requires = in.Requires
	out.Before = in.Before
	if in.ExecContainer != nil {
		in, out := &in.ExecContainer, &out.ExecContainer
		*out = new(ExecContainerAction)
		if err := Convert_kops_ExecContainerAction_To_v1alpha2_ExecContainerAction(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ExecContainer = nil
	}
	out.Manifest = in.Manifest
	out.UseRawManifest = in.UseRawManifest
	return nil
}

func autoConvert_v1alpha2_HubbleSpec_To_kops_HubbleSpec(in *HubbleSpec, out *kops.HubbleSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Metrics = in.Metrics
	return nil
}

// Convert_v1alpha2_HubbleSpec_To_kops_HubbleSpec is an autogenerated conversion function.
func Convert_v1alpha2_HubbleSpec_To_kops_HubbleSpec(in *HubbleSpec, out *kops.HubbleSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_HubbleSpec_To_kops_HubbleSpec(in, out, s)
}

func autoConvert_kops_HubbleSpec_To_v1alpha2_HubbleSpec(in *kops.HubbleSpec, out *HubbleSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Metrics = in.Metrics
	return nil
}

// Convert_kops_HubbleSpec_To_v1alpha2_HubbleSpec is an autogenerated conversion function.
func Convert_kops_HubbleSpec_To_v1alpha2_HubbleSpec(in *kops.HubbleSpec, out *HubbleSpec, s conversion.Scope) error {
	return autoConvert_kops_HubbleSpec_To_v1alpha2_HubbleSpec(in, out, s)
}

func autoConvert_v1alpha2_IAMProfileSpec_To_kops_IAMProfileSpec(in *IAMProfileSpec, out *kops.IAMProfileSpec, s conversion.Scope) error {
	out.Profile = in.Profile
	return nil
}

// Convert_v1alpha2_IAMProfileSpec_To_kops_IAMProfileSpec is an autogenerated conversion function.
func Convert_v1alpha2_IAMProfileSpec_To_kops_IAMProfileSpec(in *IAMProfileSpec, out *kops.IAMProfileSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_IAMProfileSpec_To_kops_IAMProfileSpec(in, out, s)
}

func autoConvert_kops_IAMProfileSpec_To_v1alpha2_IAMProfileSpec(in *kops.IAMProfileSpec, out *IAMProfileSpec, s conversion.Scope) error {
	out.Profile = in.Profile
	return nil
}

// Convert_kops_IAMProfileSpec_To_v1alpha2_IAMProfileSpec is an autogenerated conversion function.
func Convert_kops_IAMProfileSpec_To_v1alpha2_IAMProfileSpec(in *kops.IAMProfileSpec, out *IAMProfileSpec, s conversion.Scope) error {
	return autoConvert_kops_IAMProfileSpec_To_v1alpha2_IAMProfileSpec(in, out, s)
}

func autoConvert_v1alpha2_IAMSpec_To_kops_IAMSpec(in *IAMSpec, out *kops.IAMSpec, s conversion.Scope) error {
	out.Legacy = in.Legacy
	out.AllowContainerRegistry = in.AllowContainerRegistry
	out.PermissionsBoundary = in.PermissionsBoundary
	out.UseServiceAccountExternalPermissions = in.UseServiceAccountExternalPermissions
	if in.ServiceAccountExternalPermissions != nil {
		in, out := &in.ServiceAccountExternalPermissions, &out.ServiceAccountExternalPermissions
		*out = make([]kops.ServiceAccountExternalPermission, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_ServiceAccountExternalPermission_To_kops_ServiceAccountExternalPermission(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ServiceAccountExternalPermissions = nil
	}
	return nil
}

// Convert_v1alpha2_IAMSpec_To_kops_IAMSpec is an autogenerated conversion function.
func Convert_v1alpha2_IAMSpec_To_kops_IAMSpec(in *IAMSpec, out *kops.IAMSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_IAMSpec_To_kops_IAMSpec(in, out, s)
}

func autoConvert_kops_IAMSpec_To_v1alpha2_IAMSpec(in *kops.IAMSpec, out *IAMSpec, s conversion.Scope) error {
	out.Legacy = in.Legacy
	out.AllowContainerRegistry = in.AllowContainerRegistry
	out.PermissionsBoundary = in.PermissionsBoundary
	out.UseServiceAccountExternalPermissions = in.UseServiceAccountExternalPermissions
	if in.ServiceAccountExternalPermissions != nil {
		in, out := &in.ServiceAccountExternalPermissions, &out.ServiceAccountExternalPermissions
		*out = make([]ServiceAccountExternalPermission, len(*in))
		for i := range *in {
			if err := Convert_kops_ServiceAccountExternalPermission_To_v1alpha2_ServiceAccountExternalPermission(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ServiceAccountExternalPermissions = nil
	}
	return nil
}

// Convert_kops_IAMSpec_To_v1alpha2_IAMSpec is an autogenerated conversion function.
func Convert_kops_IAMSpec_To_v1alpha2_IAMSpec(in *kops.IAMSpec, out *IAMSpec, s conversion.Scope) error {
	return autoConvert_kops_IAMSpec_To_v1alpha2_IAMSpec(in, out, s)
}

func autoConvert_v1alpha2_InstanceGroup_To_kops_InstanceGroup(in *InstanceGroup, out *kops.InstanceGroup, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_InstanceGroupSpec_To_kops_InstanceGroupSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_InstanceGroup_To_kops_InstanceGroup is an autogenerated conversion function.
func Convert_v1alpha2_InstanceGroup_To_kops_InstanceGroup(in *InstanceGroup, out *kops.InstanceGroup, s conversion.Scope) error {
	return autoConvert_v1alpha2_InstanceGroup_To_kops_InstanceGroup(in, out, s)
}

func autoConvert_kops_InstanceGroup_To_v1alpha2_InstanceGroup(in *kops.InstanceGroup, out *InstanceGroup, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_kops_InstanceGroupSpec_To_v1alpha2_InstanceGroupSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_kops_InstanceGroup_To_v1alpha2_InstanceGroup is an autogenerated conversion function.
func Convert_kops_InstanceGroup_To_v1alpha2_InstanceGroup(in *kops.InstanceGroup, out *InstanceGroup, s conversion.Scope) error {
	return autoConvert_kops_InstanceGroup_To_v1alpha2_InstanceGroup(in, out, s)
}

func autoConvert_v1alpha2_InstanceGroupList_To_kops_InstanceGroupList(in *InstanceGroupList, out *kops.InstanceGroupList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]kops.InstanceGroup, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_InstanceGroup_To_kops_InstanceGroup(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_InstanceGroupList_To_kops_InstanceGroupList is an autogenerated conversion function.
func Convert_v1alpha2_InstanceGroupList_To_kops_InstanceGroupList(in *InstanceGroupList, out *kops.InstanceGroupList, s conversion.Scope) error {
	return autoConvert_v1alpha2_InstanceGroupList_To_kops_InstanceGroupList(in, out, s)
}

func autoConvert_kops_InstanceGroupList_To_v1alpha2_InstanceGroupList(in *kops.InstanceGroupList, out *InstanceGroupList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceGroup, len(*in))
		for i := range *in {
			if err := Convert_kops_InstanceGroup_To_v1alpha2_InstanceGroup(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_kops_InstanceGroupList_To_v1alpha2_InstanceGroupList is an autogenerated conversion function.
func Convert_kops_InstanceGroupList_To_v1alpha2_InstanceGroupList(in *kops.InstanceGroupList, out *InstanceGroupList, s conversion.Scope) error {
	return autoConvert_kops_InstanceGroupList_To_v1alpha2_InstanceGroupList(in, out, s)
}

func autoConvert_v1alpha2_InstanceGroupSpec_To_kops_InstanceGroupSpec(in *InstanceGroupSpec, out *kops.InstanceGroupSpec, s conversion.Scope) error {
	out.Manager = kops.InstanceManager(in.Manager)
	out.Role = kops.InstanceGroupRole(in.Role)
	out.Image = in.Image
	out.MinSize = in.MinSize
	out.MaxSize = in.MaxSize
	out.Autoscale = in.Autoscale
	out.AutoscalePriority = in.AutoscalePriority
	out.MachineType = in.MachineType
	out.RootVolume = in.RootVolume
	// INFO: in.RootVolumeSize opted out of conversion generation
	// INFO: in.RootVolumeType opted out of conversion generation
	// INFO: in.RootVolumeIOPS opted out of conversion generation
	// INFO: in.RootVolumeThroughput opted out of conversion generation
	// INFO: in.RootVolumeOptimization opted out of conversion generation
	// INFO: in.RootVolumeDeleteOnTermination opted out of conversion generation
	// INFO: in.RootVolumeEncryption opted out of conversion generation
	// INFO: in.RootVolumeEncryptionKey opted out of conversion generation
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]kops.VolumeSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_VolumeSpec_To_kops_VolumeSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]kops.VolumeMountSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_VolumeMountSpec_To_kops_VolumeMountSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.VolumeMounts = nil
	}
	out.Subnets = in.Subnets
	out.Zones = in.Zones
	if in.Hooks != nil {
		in, out := &in.Hooks, &out.Hooks
		*out = make([]kops.HookSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_HookSpec_To_kops_HookSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Hooks = nil
	}
	out.MaxPrice = in.MaxPrice
	out.SpotDurationInMinutes = in.SpotDurationInMinutes
	out.CPUCredits = in.CPUCredits
	out.AssociatePublicIP = in.AssociatePublicIP
	out.AdditionalSecurityGroups = in.AdditionalSecurityGroups
	out.CloudLabels = in.CloudLabels
	out.NodeLabels = in.NodeLabels
	if in.FileAssets != nil {
		in, out := &in.FileAssets, &out.FileAssets
		*out = make([]kops.FileAssetSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_FileAssetSpec_To_kops_FileAssetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.FileAssets = nil
	}
	out.Tenancy = in.Tenancy
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = new(kops.KubeletConfigSpec)
		if err := Convert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kubelet = nil
	}
	out.Taints = in.Taints
	if in.MixedInstancesPolicy != nil {
		in, out := &in.MixedInstancesPolicy, &out.MixedInstancesPolicy
		*out = new(kops.MixedInstancesPolicySpec)
		if err := Convert_v1alpha2_MixedInstancesPolicySpec_To_kops_MixedInstancesPolicySpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.MixedInstancesPolicy = nil
	}
	out.CapacityRebalance = in.CapacityRebalance
	if in.AdditionalUserData != nil {
		in, out := &in.AdditionalUserData, &out.AdditionalUserData
		*out = make([]kops.UserData, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_UserData_To_kops_UserData(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.AdditionalUserData = nil
	}
	out.SuspendProcesses = in.SuspendProcesses
	if in.ExternalLoadBalancers != nil {
		in, out := &in.ExternalLoadBalancers, &out.ExternalLoadBalancers
		*out = make([]kops.LoadBalancerSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_LoadBalancerSpec_To_kops_LoadBalancerSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ExternalLoadBalancers = nil
	}
	out.DetailedInstanceMonitoring = in.DetailedInstanceMonitoring
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(kops.IAMProfileSpec)
		if err := Convert_v1alpha2_IAMProfileSpec_To_kops_IAMProfileSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.IAM = nil
	}
	out.SecurityGroupOverride = in.SecurityGroupOverride
	out.InstanceProtection = in.InstanceProtection
	out.SysctlParameters = in.SysctlParameters
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(kops.RollingUpdate)
		if err := Convert_v1alpha2_RollingUpdate_To_kops_RollingUpdate(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	out.InstanceInterruptionBehavior = in.InstanceInterruptionBehavior
	out.CompressUserData = in.CompressUserData
	if in.InstanceMetadata != nil {
		in, out := &in.InstanceMetadata, &out.InstanceMetadata
		*out = new(kops.InstanceMetadataOptions)
		if err := Convert_v1alpha2_InstanceMetadataOptions_To_kops_InstanceMetadataOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.InstanceMetadata = nil
	}
	out.UpdatePolicy = in.UpdatePolicy
	if in.WarmPool != nil {
		in, out := &in.WarmPool, &out.WarmPool
		*out = new(kops.WarmPoolSpec)
		if err := Convert_v1alpha2_WarmPoolSpec_To_kops_WarmPoolSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.WarmPool = nil
	}
	if in.Containerd != nil {
		in, out := &in.Containerd, &out.Containerd
		*out = new(kops.ContainerdConfig)
		if err := Convert_v1alpha2_ContainerdConfig_To_kops_ContainerdConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Containerd = nil
	}
	out.Packages = in.Packages
	if in.GuestAccelerators != nil {
		in, out := &in.GuestAccelerators, &out.GuestAccelerators
		*out = make([]kops.AcceleratorConfig, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_AcceleratorConfig_To_kops_AcceleratorConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.GuestAccelerators = nil
	}
	out.MaxInstanceLifetime = in.MaxInstanceLifetime
	out.GCPProvisioningModel = in.GCPProvisioningModel
	return nil
}

func autoConvert_kops_InstanceGroupSpec_To_v1alpha2_InstanceGroupSpec(in *kops.InstanceGroupSpec, out *InstanceGroupSpec, s conversion.Scope) error {
	out.Manager = InstanceManager(in.Manager)
	out.Role = InstanceGroupRole(in.Role)
	out.Image = in.Image
	out.MinSize = in.MinSize
	out.MaxSize = in.MaxSize
	out.Autoscale = in.Autoscale
	out.AutoscalePriority = in.AutoscalePriority
	out.MachineType = in.MachineType
	out.RootVolume = in.RootVolume
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumeSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_VolumeSpec_To_v1alpha2_VolumeSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]VolumeMountSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_VolumeMountSpec_To_v1alpha2_VolumeMountSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.VolumeMounts = nil
	}
	out.Subnets = in.Subnets
	out.Zones = in.Zones
	if in.Hooks != nil {
		in, out := &in.Hooks, &out.Hooks
		*out = make([]HookSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_HookSpec_To_v1alpha2_HookSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Hooks = nil
	}
	out.MaxPrice = in.MaxPrice
	out.SpotDurationInMinutes = in.SpotDurationInMinutes
	out.CPUCredits = in.CPUCredits
	out.AssociatePublicIP = in.AssociatePublicIP
	out.AdditionalSecurityGroups = in.AdditionalSecurityGroups
	out.CloudLabels = in.CloudLabels
	out.NodeLabels = in.NodeLabels
	if in.FileAssets != nil {
		in, out := &in.FileAssets, &out.FileAssets
		*out = make([]FileAssetSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_FileAssetSpec_To_v1alpha2_FileAssetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.FileAssets = nil
	}
	out.Tenancy = in.Tenancy
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = new(KubeletConfigSpec)
		if err := Convert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kubelet = nil
	}
	out.Taints = in.Taints
	if in.MixedInstancesPolicy != nil {
		in, out := &in.MixedInstancesPolicy, &out.MixedInstancesPolicy
		*out = new(MixedInstancesPolicySpec)
		if err := Convert_kops_MixedInstancesPolicySpec_To_v1alpha2_MixedInstancesPolicySpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.MixedInstancesPolicy = nil
	}
	out.CapacityRebalance = in.CapacityRebalance
	if in.AdditionalUserData != nil {
		in, out := &in.AdditionalUserData, &out.AdditionalUserData
		*out = make([]UserData, len(*in))
		for i := range *in {
			if err := Convert_kops_UserData_To_v1alpha2_UserData(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.AdditionalUserData = nil
	}
	out.SuspendProcesses = in.SuspendProcesses
	if in.ExternalLoadBalancers != nil {
		in, out := &in.ExternalLoadBalancers, &out.ExternalLoadBalancers
		*out = make([]LoadBalancerSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_LoadBalancerSpec_To_v1alpha2_LoadBalancerSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ExternalLoadBalancers = nil
	}
	out.DetailedInstanceMonitoring = in.DetailedInstanceMonitoring
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(IAMProfileSpec)
		if err := Convert_kops_IAMProfileSpec_To_v1alpha2_IAMProfileSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.IAM = nil
	}
	out.SecurityGroupOverride = in.SecurityGroupOverride
	out.InstanceProtection = in.InstanceProtection
	out.SysctlParameters = in.SysctlParameters
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(RollingUpdate)
		if err := Convert_kops_RollingUpdate_To_v1alpha2_RollingUpdate(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	out.InstanceInterruptionBehavior = in.InstanceInterruptionBehavior
	out.CompressUserData = in.CompressUserData
	if in.InstanceMetadata != nil {
		in, out := &in.InstanceMetadata, &out.InstanceMetadata
		*out = new(InstanceMetadataOptions)
		if err := Convert_kops_InstanceMetadataOptions_To_v1alpha2_InstanceMetadataOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.InstanceMetadata = nil
	}
	out.UpdatePolicy = in.UpdatePolicy
	if in.WarmPool != nil {
		in, out := &in.WarmPool, &out.WarmPool
		*out = new(WarmPoolSpec)
		if err := Convert_kops_WarmPoolSpec_To_v1alpha2_WarmPoolSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.WarmPool = nil
	}
	if in.Containerd != nil {
		in, out := &in.Containerd, &out.Containerd
		*out = new(ContainerdConfig)
		if err := Convert_kops_ContainerdConfig_To_v1alpha2_ContainerdConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Containerd = nil
	}
	out.Packages = in.Packages
	if in.GuestAccelerators != nil {
		in, out := &in.GuestAccelerators, &out.GuestAccelerators
		*out = make([]AcceleratorConfig, len(*in))
		for i := range *in {
			if err := Convert_kops_AcceleratorConfig_To_v1alpha2_AcceleratorConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.GuestAccelerators = nil
	}
	out.MaxInstanceLifetime = in.MaxInstanceLifetime
	out.GCPProvisioningModel = in.GCPProvisioningModel
	return nil
}

func autoConvert_v1alpha2_InstanceMetadataOptions_To_kops_InstanceMetadataOptions(in *InstanceMetadataOptions, out *kops.InstanceMetadataOptions, s conversion.Scope) error {
	out.HTTPPutResponseHopLimit = in.HTTPPutResponseHopLimit
	out.HTTPTokens = in.HTTPTokens
	return nil
}

// Convert_v1alpha2_InstanceMetadataOptions_To_kops_InstanceMetadataOptions is an autogenerated conversion function.
func Convert_v1alpha2_InstanceMetadataOptions_To_kops_InstanceMetadataOptions(in *InstanceMetadataOptions, out *kops.InstanceMetadataOptions, s conversion.Scope) error {
	return autoConvert_v1alpha2_InstanceMetadataOptions_To_kops_InstanceMetadataOptions(in, out, s)
}

func autoConvert_kops_InstanceMetadataOptions_To_v1alpha2_InstanceMetadataOptions(in *kops.InstanceMetadataOptions, out *InstanceMetadataOptions, s conversion.Scope) error {
	out.HTTPPutResponseHopLimit = in.HTTPPutResponseHopLimit
	out.HTTPTokens = in.HTTPTokens
	return nil
}

// Convert_kops_InstanceMetadataOptions_To_v1alpha2_InstanceMetadataOptions is an autogenerated conversion function.
func Convert_kops_InstanceMetadataOptions_To_v1alpha2_InstanceMetadataOptions(in *kops.InstanceMetadataOptions, out *InstanceMetadataOptions, s conversion.Scope) error {
	return autoConvert_kops_InstanceMetadataOptions_To_v1alpha2_InstanceMetadataOptions(in, out, s)
}

func autoConvert_v1alpha2_InstanceRequirementsSpec_To_kops_InstanceRequirementsSpec(in *InstanceRequirementsSpec, out *kops.InstanceRequirementsSpec, s conversion.Scope) error {
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(kops.MinMaxSpec)
		if err := Convert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CPU = nil
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(kops.MinMaxSpec)
		if err := Convert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Memory = nil
	}
	return nil
}

// Convert_v1alpha2_InstanceRequirementsSpec_To_kops_InstanceRequirementsSpec is an autogenerated conversion function.
func Convert_v1alpha2_InstanceRequirementsSpec_To_kops_InstanceRequirementsSpec(in *InstanceRequirementsSpec, out *kops.InstanceRequirementsSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_InstanceRequirementsSpec_To_kops_InstanceRequirementsSpec(in, out, s)
}

func autoConvert_kops_InstanceRequirementsSpec_To_v1alpha2_InstanceRequirementsSpec(in *kops.InstanceRequirementsSpec, out *InstanceRequirementsSpec, s conversion.Scope) error {
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(MinMaxSpec)
		if err := Convert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CPU = nil
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(MinMaxSpec)
		if err := Convert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Memory = nil
	}
	return nil
}

// Convert_kops_InstanceRequirementsSpec_To_v1alpha2_InstanceRequirementsSpec is an autogenerated conversion function.
func Convert_kops_InstanceRequirementsSpec_To_v1alpha2_InstanceRequirementsSpec(in *kops.InstanceRequirementsSpec, out *InstanceRequirementsSpec, s conversion.Scope) error {
	return autoConvert_kops_InstanceRequirementsSpec_To_v1alpha2_InstanceRequirementsSpec(in, out, s)
}

func autoConvert_v1alpha2_KarpenterConfig_To_kops_KarpenterConfig(in *KarpenterConfig, out *kops.KarpenterConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.LogEncoding = in.LogEncoding
	out.LogLevel = in.LogLevel
	out.Image = in.Image
	out.MemoryLimit = in.MemoryLimit
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	return nil
}

// Convert_v1alpha2_KarpenterConfig_To_kops_KarpenterConfig is an autogenerated conversion function.
func Convert_v1alpha2_KarpenterConfig_To_kops_KarpenterConfig(in *KarpenterConfig, out *kops.KarpenterConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_KarpenterConfig_To_kops_KarpenterConfig(in, out, s)
}

func autoConvert_kops_KarpenterConfig_To_v1alpha2_KarpenterConfig(in *kops.KarpenterConfig, out *KarpenterConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.LogEncoding = in.LogEncoding
	out.LogLevel = in.LogLevel
	out.Image = in.Image
	out.MemoryLimit = in.MemoryLimit
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	return nil
}

// Convert_kops_KarpenterConfig_To_v1alpha2_KarpenterConfig is an autogenerated conversion function.
func Convert_kops_KarpenterConfig_To_v1alpha2_KarpenterConfig(in *kops.KarpenterConfig, out *KarpenterConfig, s conversion.Scope) error {
	return autoConvert_kops_KarpenterConfig_To_v1alpha2_KarpenterConfig(in, out, s)
}

func autoConvert_v1alpha2_Keyset_To_kops_Keyset(in *Keyset, out *kops.Keyset, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_KeysetSpec_To_kops_KeysetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_Keyset_To_kops_Keyset is an autogenerated conversion function.
func Convert_v1alpha2_Keyset_To_kops_Keyset(in *Keyset, out *kops.Keyset, s conversion.Scope) error {
	return autoConvert_v1alpha2_Keyset_To_kops_Keyset(in, out, s)
}

func autoConvert_kops_Keyset_To_v1alpha2_Keyset(in *kops.Keyset, out *Keyset, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_kops_KeysetSpec_To_v1alpha2_KeysetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_kops_Keyset_To_v1alpha2_Keyset is an autogenerated conversion function.
func Convert_kops_Keyset_To_v1alpha2_Keyset(in *kops.Keyset, out *Keyset, s conversion.Scope) error {
	return autoConvert_kops_Keyset_To_v1alpha2_Keyset(in, out, s)
}

func autoConvert_v1alpha2_KeysetItem_To_kops_KeysetItem(in *KeysetItem, out *kops.KeysetItem, s conversion.Scope) error {
	out.Id = in.Id
	out.DistrustTimestamp = in.DistrustTimestamp
	if err := conversion.Convert_Slice_byte_To_Slice_byte(&in.PublicMaterial, &out.PublicMaterial, s); err != nil {
		return err
	}
	if err := conversion.Convert_Slice_byte_To_Slice_byte(&in.PrivateMaterial, &out.PrivateMaterial, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_KeysetItem_To_kops_KeysetItem is an autogenerated conversion function.
func Convert_v1alpha2_KeysetItem_To_kops_KeysetItem(in *KeysetItem, out *kops.KeysetItem, s conversion.Scope) error {
	return autoConvert_v1alpha2_KeysetItem_To_kops_KeysetItem(in, out, s)
}

func autoConvert_kops_KeysetItem_To_v1alpha2_KeysetItem(in *kops.KeysetItem, out *KeysetItem, s conversion.Scope) error {
	out.Id = in.Id
	out.DistrustTimestamp = in.DistrustTimestamp
	if err := conversion.Convert_Slice_byte_To_Slice_byte(&in.PublicMaterial, &out.PublicMaterial, s); err != nil {
		return err
	}
	if err := conversion.Convert_Slice_byte_To_Slice_byte(&in.PrivateMaterial, &out.PrivateMaterial, s); err != nil {
		return err
	}
	return nil
}

// Convert_kops_KeysetItem_To_v1alpha2_KeysetItem is an autogenerated conversion function.
func Convert_kops_KeysetItem_To_v1alpha2_KeysetItem(in *kops.KeysetItem, out *KeysetItem, s conversion.Scope) error {
	return autoConvert_kops_KeysetItem_To_v1alpha2_KeysetItem(in, out, s)
}

func autoConvert_v1alpha2_KeysetList_To_kops_KeysetList(in *KeysetList, out *kops.KeysetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]kops.Keyset, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_Keyset_To_kops_Keyset(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_KeysetList_To_kops_KeysetList is an autogenerated conversion function.
func Convert_v1alpha2_KeysetList_To_kops_KeysetList(in *KeysetList, out *kops.KeysetList, s conversion.Scope) error {
	return autoConvert_v1alpha2_KeysetList_To_kops_KeysetList(in, out, s)
}

func autoConvert_kops_KeysetList_To_v1alpha2_KeysetList(in *kops.KeysetList, out *KeysetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Keyset, len(*in))
		for i := range *in {
			if err := Convert_kops_Keyset_To_v1alpha2_Keyset(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_kops_KeysetList_To_v1alpha2_KeysetList is an autogenerated conversion function.
func Convert_kops_KeysetList_To_v1alpha2_KeysetList(in *kops.KeysetList, out *KeysetList, s conversion.Scope) error {
	return autoConvert_kops_KeysetList_To_v1alpha2_KeysetList(in, out, s)
}

func autoConvert_v1alpha2_KeysetSpec_To_kops_KeysetSpec(in *KeysetSpec, out *kops.KeysetSpec, s conversion.Scope) error {
	out.Type = kops.KeysetType(in.Type)
	out.PrimaryID = in.PrimaryID
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]kops.KeysetItem, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_KeysetItem_To_kops_KeysetItem(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Keys = nil
	}
	return nil
}

// Convert_v1alpha2_KeysetSpec_To_kops_KeysetSpec is an autogenerated conversion function.
func Convert_v1alpha2_KeysetSpec_To_kops_KeysetSpec(in *KeysetSpec, out *kops.KeysetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KeysetSpec_To_kops_KeysetSpec(in, out, s)
}

func autoConvert_kops_KeysetSpec_To_v1alpha2_KeysetSpec(in *kops.KeysetSpec, out *KeysetSpec, s conversion.Scope) error {
	out.Type = KeysetType(in.Type)
	out.PrimaryID = in.PrimaryID
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]KeysetItem, len(*in))
		for i := range *in {
			if err := Convert_kops_KeysetItem_To_v1alpha2_KeysetItem(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Keys = nil
	}
	return nil
}

// Convert_kops_KeysetSpec_To_v1alpha2_KeysetSpec is an autogenerated conversion function.
func Convert_kops_KeysetSpec_To_v1alpha2_KeysetSpec(in *kops.KeysetSpec, out *KeysetSpec, s conversion.Scope) error {
	return autoConvert_kops_KeysetSpec_To_v1alpha2_KeysetSpec(in, out, s)
}

func autoConvert_v1alpha2_KopeioAuthenticationSpec_To_kops_KopeioAuthenticationSpec(in *KopeioAuthenticationSpec, out *kops.KopeioAuthenticationSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_KopeioAuthenticationSpec_To_kops_KopeioAuthenticationSpec is an autogenerated conversion function.
func Convert_v1alpha2_KopeioAuthenticationSpec_To_kops_KopeioAuthenticationSpec(in *KopeioAuthenticationSpec, out *kops.KopeioAuthenticationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KopeioAuthenticationSpec_To_kops_KopeioAuthenticationSpec(in, out, s)
}

func autoConvert_kops_KopeioAuthenticationSpec_To_v1alpha2_KopeioAuthenticationSpec(in *kops.KopeioAuthenticationSpec, out *KopeioAuthenticationSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_KopeioAuthenticationSpec_To_v1alpha2_KopeioAuthenticationSpec is an autogenerated conversion function.
func Convert_kops_KopeioAuthenticationSpec_To_v1alpha2_KopeioAuthenticationSpec(in *kops.KopeioAuthenticationSpec, out *KopeioAuthenticationSpec, s conversion.Scope) error {
	return autoConvert_kops_KopeioAuthenticationSpec_To_v1alpha2_KopeioAuthenticationSpec(in, out, s)
}

func autoConvert_v1alpha2_KopeioNetworkingSpec_To_kops_KopeioNetworkingSpec(in *KopeioNetworkingSpec, out *kops.KopeioNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_KopeioNetworkingSpec_To_kops_KopeioNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_KopeioNetworkingSpec_To_kops_KopeioNetworkingSpec(in *KopeioNetworkingSpec, out *kops.KopeioNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KopeioNetworkingSpec_To_kops_KopeioNetworkingSpec(in, out, s)
}

func autoConvert_kops_KopeioNetworkingSpec_To_v1alpha2_KopeioNetworkingSpec(in *kops.KopeioNetworkingSpec, out *KopeioNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_KopeioNetworkingSpec_To_v1alpha2_KopeioNetworkingSpec is an autogenerated conversion function.
func Convert_kops_KopeioNetworkingSpec_To_v1alpha2_KopeioNetworkingSpec(in *kops.KopeioNetworkingSpec, out *KopeioNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_KopeioNetworkingSpec_To_v1alpha2_KopeioNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_KubeAPIServerConfig_To_kops_KubeAPIServerConfig(in *KubeAPIServerConfig, out *kops.KubeAPIServerConfig, s conversion.Scope) error {
	out.Image = in.Image
	out.DisableBasicAuth = in.DisableBasicAuth
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.CloudProvider = in.CloudProvider
	out.SecurePort = in.SecurePort
	out.InsecurePort = in.InsecurePort
	out.Address = in.Address
	out.AdvertiseAddress = in.AdvertiseAddress
	out.BindAddress = in.BindAddress
	out.InsecureBindAddress = in.InsecureBindAddress
	out.EnableBootstrapAuthToken = in.EnableBootstrapAuthToken
	out.EnableAggregatorRouting = in.EnableAggregatorRouting
	out.AdmissionControl = in.AdmissionControl
	out.AppendAdmissionPlugins = in.AppendAdmissionPlugins
	out.EnableAdmissionPlugins = in.EnableAdmissionPlugins
	out.DisableAdmissionPlugins = in.DisableAdmissionPlugins
	out.AdmissionControlConfigFile = in.AdmissionControlConfigFile
	out.ServiceClusterIPRange = in.ServiceClusterIPRange
	out.ServiceNodePortRange = in.ServiceNodePortRange
	out.EtcdServers = in.EtcdServers
	out.EtcdServersOverrides = in.EtcdServersOverrides
	out.EtcdCAFile = in.EtcdCAFile
	out.EtcdCertFile = in.EtcdCertFile
	out.EtcdKeyFile = in.EtcdKeyFile
	out.BasicAuthFile = in.BasicAuthFile
	out.ClientCAFile = in.ClientCAFile
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.TLSCipherSuites = in.TLSCipherSuites
	out.TLSMinVersion = in.TLSMinVersion
	out.TokenAuthFile = in.TokenAuthFile
	out.AllowPrivileged = in.AllowPrivileged
	out.APIServerCount = in.APIServerCount
	out.RuntimeConfig = in.RuntimeConfig
	out.KubeletClientCertificate = in.KubeletClientCertificate
	out.KubeletCertificateAuthority = in.KubeletCertificateAuthority
	out.KubeletClientKey = in.KubeletClientKey
	out.AnonymousAuth = in.AnonymousAuth
	out.KubeletPreferredAddressTypes = in.KubeletPreferredAddressTypes
	out.StorageBackend = in.StorageBackend
	// INFO: in.OIDCUsernameClaim opted out of conversion generation
	// INFO: in.OIDCUsernamePrefix opted out of conversion generation
	// INFO: in.OIDCGroupsClaim opted out of conversion generation
	// INFO: in.OIDCGroupsPrefix opted out of conversion generation
	// INFO: in.OIDCIssuerURL opted out of conversion generation
	// INFO: in.OIDCClientID opted out of conversion generation
	// INFO: in.OIDCRequiredClaim opted out of conversion generation
	out.OIDCCAFile = in.OIDCCAFile
	out.AuthenticationConfigFile = in.AuthenticationConfigFile
	out.ProxyClientCertFile = in.ProxyClientCertFile
	out.ProxyClientKeyFile = in.ProxyClientKeyFile
	out.AuditLogFormat = in.AuditLogFormat
	out.AuditLogPath = in.AuditLogPath
	out.AuditLogMaxAge = in.AuditLogMaxAge
	out.AuditLogMaxBackups = in.AuditLogMaxBackups
	out.AuditLogMaxSize = in.AuditLogMaxSize
	out.AuditPolicyFile = in.AuditPolicyFile
	out.AuditWebhookBatchBufferSize = in.AuditWebhookBatchBufferSize
	out.AuditWebhookBatchMaxSize = in.AuditWebhookBatchMaxSize
	out.AuditWebhookBatchMaxWait = in.AuditWebhookBatchMaxWait
	out.AuditWebhookBatchThrottleBurst = in.AuditWebhookBatchThrottleBurst
	out.AuditWebhookBatchThrottleEnable = in.AuditWebhookBatchThrottleEnable
	out.AuditWebhookBatchThrottleQps = in.AuditWebhookBatchThrottleQps
	out.AuditWebhookConfigFile = in.AuditWebhookConfigFile
	out.AuditWebhookInitialBackoff = in.AuditWebhookInitialBackoff
	out.AuditWebhookMode = in.AuditWebhookMode
	out.AuthenticationTokenWebhookConfigFile = in.AuthenticationTokenWebhookConfigFile
	out.AuthenticationTokenWebhookCacheTTL = in.AuthenticationTokenWebhookCacheTTL
	out.AuthorizationMode = in.AuthorizationMode
	out.AuthorizationWebhookConfigFile = in.AuthorizationWebhookConfigFile
	out.AuthorizationWebhookCacheAuthorizedTTL = in.AuthorizationWebhookCacheAuthorizedTTL
	out.AuthorizationWebhookCacheUnauthorizedTTL = in.AuthorizationWebhookCacheUnauthorizedTTL
	out.AuthorizationRBACSuperUser = in.AuthorizationRBACSuperUser
	out.EncryptionProviderConfig = in.EncryptionProviderConfig
	out.ExperimentalEncryptionProviderConfig = in.ExperimentalEncryptionProviderConfig
	out.RequestheaderUsernameHeaders = in.RequestheaderUsernameHeaders
	out.RequestheaderGroupHeaders = in.RequestheaderGroupHeaders
	out.RequestheaderExtraHeaderPrefixes = in.RequestheaderExtraHeaderPrefixes
	out.RequestheaderClientCAFile = in.RequestheaderClientCAFile
	out.RequestheaderAllowedNames = in.RequestheaderAllowedNames
	out.FeatureGates = in.FeatureGates
	out.MaxRequestsInflight = in.MaxRequestsInflight
	out.MaxMutatingRequestsInflight = in.MaxMutatingRequestsInflight
	out.HTTP2MaxStreamsPerConnection = in.HTTP2MaxStreamsPerConnection
	out.EtcdQuorumRead = in.EtcdQuorumRead
	out.RequestTimeout = in.RequestTimeout
	out.MinRequestTimeout = in.MinRequestTimeout
	out.TargetRamMB = in.TargetRamMB
	out.ServiceAccountKeyFile = in.ServiceAccountKeyFile
	out.ServiceAccountSigningKeyFile = in.ServiceAccountSigningKeyFile
	out.ServiceAccountIssuer = in.ServiceAccountIssuer
	out.AdditionalServiceAccountIssuers = in.AdditionalServiceAccountIssuers
	out.ServiceAccountJWKSURI = in.ServiceAccountJWKSURI
	out.APIAudiences = in.APIAudiences
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	out.EventTTL = in.EventTTL
	out.AuditDynamicConfiguration = in.AuditDynamicConfiguration
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.CorsAllowedOrigins = in.CorsAllowedOrigins
	out.DefaultNotReadyTolerationSeconds = in.DefaultNotReadyTolerationSeconds
	out.DefaultUnreachableTolerationSeconds = in.DefaultUnreachableTolerationSeconds
	return nil
}

// Convert_v1alpha2_KubeAPIServerConfig_To_kops_KubeAPIServerConfig is an autogenerated conversion function.
func Convert_v1alpha2_KubeAPIServerConfig_To_kops_KubeAPIServerConfig(in *KubeAPIServerConfig, out *kops.KubeAPIServerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeAPIServerConfig_To_kops_KubeAPIServerConfig(in, out, s)
}

func autoConvert_kops_KubeAPIServerConfig_To_v1alpha2_KubeAPIServerConfig(in *kops.KubeAPIServerConfig, out *KubeAPIServerConfig, s conversion.Scope) error {
	out.Image = in.Image
	out.DisableBasicAuth = in.DisableBasicAuth
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.CloudProvider = in.CloudProvider
	out.SecurePort = in.SecurePort
	out.InsecurePort = in.InsecurePort
	out.Address = in.Address
	out.AdvertiseAddress = in.AdvertiseAddress
	out.BindAddress = in.BindAddress
	out.InsecureBindAddress = in.InsecureBindAddress
	out.EnableBootstrapAuthToken = in.EnableBootstrapAuthToken
	out.EnableAggregatorRouting = in.EnableAggregatorRouting
	out.AdmissionControl = in.AdmissionControl
	out.AppendAdmissionPlugins = in.AppendAdmissionPlugins
	out.EnableAdmissionPlugins = in.EnableAdmissionPlugins
	out.DisableAdmissionPlugins = in.DisableAdmissionPlugins
	out.AdmissionControlConfigFile = in.AdmissionControlConfigFile
	out.ServiceClusterIPRange = in.ServiceClusterIPRange
	out.ServiceNodePortRange = in.ServiceNodePortRange
	out.EtcdServers = in.EtcdServers
	out.EtcdServersOverrides = in.EtcdServersOverrides
	out.EtcdCAFile = in.EtcdCAFile
	out.EtcdCertFile = in.EtcdCertFile
	out.EtcdKeyFile = in.EtcdKeyFile
	out.BasicAuthFile = in.BasicAuthFile
	out.ClientCAFile = in.ClientCAFile
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.TLSCipherSuites = in.TLSCipherSuites
	out.TLSMinVersion = in.TLSMinVersion
	out.TokenAuthFile = in.TokenAuthFile
	out.AllowPrivileged = in.AllowPrivileged
	out.APIServerCount = in.APIServerCount
	out.RuntimeConfig = in.RuntimeConfig
	out.KubeletClientCertificate = in.KubeletClientCertificate
	out.KubeletCertificateAuthority = in.KubeletCertificateAuthority
	out.KubeletClientKey = in.KubeletClientKey
	out.AnonymousAuth = in.AnonymousAuth
	out.KubeletPreferredAddressTypes = in.KubeletPreferredAddressTypes
	out.StorageBackend = in.StorageBackend
	out.OIDCUsernameClaim = in.OIDCUsernameClaim
	out.OIDCUsernamePrefix = in.OIDCUsernamePrefix
	out.OIDCGroupsClaim = in.OIDCGroupsClaim
	out.OIDCGroupsPrefix = in.OIDCGroupsPrefix
	out.OIDCIssuerURL = in.OIDCIssuerURL
	out.OIDCClientID = in.OIDCClientID
	out.OIDCRequiredClaim = in.OIDCRequiredClaim
	out.OIDCCAFile = in.OIDCCAFile
	out.AuthenticationConfigFile = in.AuthenticationConfigFile
	out.ProxyClientCertFile = in.ProxyClientCertFile
	out.ProxyClientKeyFile = in.ProxyClientKeyFile
	out.AuditLogFormat = in.AuditLogFormat
	out.AuditLogPath = in.AuditLogPath
	out.AuditLogMaxAge = in.AuditLogMaxAge
	out.AuditLogMaxBackups = in.AuditLogMaxBackups
	out.AuditLogMaxSize = in.AuditLogMaxSize
	out.AuditPolicyFile = in.AuditPolicyFile
	out.AuditWebhookBatchBufferSize = in.AuditWebhookBatchBufferSize
	out.AuditWebhookBatchMaxSize = in.AuditWebhookBatchMaxSize
	out.AuditWebhookBatchMaxWait = in.AuditWebhookBatchMaxWait
	out.AuditWebhookBatchThrottleBurst = in.AuditWebhookBatchThrottleBurst
	out.AuditWebhookBatchThrottleEnable = in.AuditWebhookBatchThrottleEnable
	out.AuditWebhookBatchThrottleQps = in.AuditWebhookBatchThrottleQps
	out.AuditWebhookConfigFile = in.AuditWebhookConfigFile
	out.AuditWebhookInitialBackoff = in.AuditWebhookInitialBackoff
	out.AuditWebhookMode = in.AuditWebhookMode
	out.AuthenticationTokenWebhookConfigFile = in.AuthenticationTokenWebhookConfigFile
	out.AuthenticationTokenWebhookCacheTTL = in.AuthenticationTokenWebhookCacheTTL
	out.AuthorizationMode = in.AuthorizationMode
	out.AuthorizationWebhookConfigFile = in.AuthorizationWebhookConfigFile
	out.AuthorizationWebhookCacheAuthorizedTTL = in.AuthorizationWebhookCacheAuthorizedTTL
	out.AuthorizationWebhookCacheUnauthorizedTTL = in.AuthorizationWebhookCacheUnauthorizedTTL
	out.AuthorizationRBACSuperUser = in.AuthorizationRBACSuperUser
	out.EncryptionProviderConfig = in.EncryptionProviderConfig
	out.ExperimentalEncryptionProviderConfig = in.ExperimentalEncryptionProviderConfig
	out.RequestheaderUsernameHeaders = in.RequestheaderUsernameHeaders
	out.RequestheaderGroupHeaders = in.RequestheaderGroupHeaders
	out.RequestheaderExtraHeaderPrefixes = in.RequestheaderExtraHeaderPrefixes
	out.RequestheaderClientCAFile = in.RequestheaderClientCAFile
	out.RequestheaderAllowedNames = in.RequestheaderAllowedNames
	out.FeatureGates = in.FeatureGates
	out.MaxRequestsInflight = in.MaxRequestsInflight
	out.MaxMutatingRequestsInflight = in.MaxMutatingRequestsInflight
	out.HTTP2MaxStreamsPerConnection = in.HTTP2MaxStreamsPerConnection
	out.EtcdQuorumRead = in.EtcdQuorumRead
	out.RequestTimeout = in.RequestTimeout
	out.MinRequestTimeout = in.MinRequestTimeout
	out.TargetRamMB = in.TargetRamMB
	out.ServiceAccountKeyFile = in.ServiceAccountKeyFile
	out.ServiceAccountSigningKeyFile = in.ServiceAccountSigningKeyFile
	out.ServiceAccountIssuer = in.ServiceAccountIssuer
	out.AdditionalServiceAccountIssuers = in.AdditionalServiceAccountIssuers
	out.ServiceAccountJWKSURI = in.ServiceAccountJWKSURI
	out.APIAudiences = in.APIAudiences
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	out.EventTTL = in.EventTTL
	out.AuditDynamicConfiguration = in.AuditDynamicConfiguration
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.CorsAllowedOrigins = in.CorsAllowedOrigins
	out.DefaultNotReadyTolerationSeconds = in.DefaultNotReadyTolerationSeconds
	out.DefaultUnreachableTolerationSeconds = in.DefaultUnreachableTolerationSeconds
	return nil
}

// Convert_kops_KubeAPIServerConfig_To_v1alpha2_KubeAPIServerConfig is an autogenerated conversion function.
func Convert_kops_KubeAPIServerConfig_To_v1alpha2_KubeAPIServerConfig(in *kops.KubeAPIServerConfig, out *KubeAPIServerConfig, s conversion.Scope) error {
	return autoConvert_kops_KubeAPIServerConfig_To_v1alpha2_KubeAPIServerConfig(in, out, s)
}

func autoConvert_v1alpha2_KubeControllerManagerConfig_To_kops_KubeControllerManagerConfig(in *KubeControllerManagerConfig, out *kops.KubeControllerManagerConfig, s conversion.Scope) error {
	out.Master = in.Master
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.ServiceAccountPrivateKeyFile = in.ServiceAccountPrivateKeyFile
	out.Image = in.Image
	out.CloudProvider = in.CloudProvider
	out.ClusterName = in.ClusterName
	out.ClusterCIDR = in.ClusterCIDR
	out.AllocateNodeCIDRs = in.AllocateNodeCIDRs
	out.NodeCIDRMaskSize = in.NodeCIDRMaskSize
	out.ConfigureCloudRoutes = in.ConfigureCloudRoutes
	out.Controllers = in.Controllers
	out.CIDRAllocatorType = in.CIDRAllocatorType
	out.RootCAFile = in.RootCAFile
	if in.LeaderElection != nil {
		in, out := &in.LeaderElection, &out.LeaderElection
		*out = new(kops.LeaderElectionConfiguration)
		if err := Convert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LeaderElection = nil
	}
	out.AttachDetachReconcileSyncPeriod = in.AttachDetachReconcileSyncPeriod
	out.DisableAttachDetachReconcileSync = in.DisableAttachDetachReconcileSync
	out.TerminatedPodGCThreshold = in.TerminatedPodGCThreshold
	out.NodeMonitorPeriod = in.NodeMonitorPeriod
	out.NodeMonitorGracePeriod = in.NodeMonitorGracePeriod
	out.PodEvictionTimeout = in.PodEvictionTimeout
	out.UseServiceAccountCredentials = in.UseServiceAccountCredentials
	out.HorizontalPodAutoscalerSyncPeriod = in.HorizontalPodAutoscalerSyncPeriod
	out.HorizontalPodAutoscalerDownscaleDelay = in.HorizontalPodAutoscalerDownscaleDelay
	out.HorizontalPodAutoscalerDownscaleStabilization = in.HorizontalPodAutoscalerDownscaleStabilization
	out.HorizontalPodAutoscalerUpscaleDelay = in.HorizontalPodAutoscalerUpscaleDelay
	out.HorizontalPodAutoscalerInitialReadinessDelay = in.HorizontalPodAutoscalerInitialReadinessDelay
	out.HorizontalPodAutoscalerCPUInitializationPeriod = in.HorizontalPodAutoscalerCPUInitializationPeriod
	out.HorizontalPodAutoscalerTolerance = in.HorizontalPodAutoscalerTolerance
	out.HorizontalPodAutoscalerUseRestClients = in.HorizontalPodAutoscalerUseRestClients
	out.ExperimentalClusterSigningDuration = in.ExperimentalClusterSigningDuration
	out.ClusterSigningDuration = in.ClusterSigningDuration
	out.FeatureGates = in.FeatureGates
	out.TLSCertFile = in.TLSCertFile
	out.TLSCipherSuites = in.TLSCipherSuites
	out.TLSMinVersion = in.TLSMinVersion
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.MinResyncPeriod = in.MinResyncPeriod
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = in.KubeAPIBurst
	out.ConcurrentDeploymentSyncs = in.ConcurrentDeploymentSyncs
	out.ConcurrentEndpointSyncs = in.ConcurrentEndpointSyncs
	out.ConcurrentNamespaceSyncs = in.ConcurrentNamespaceSyncs
	out.ConcurrentReplicasetSyncs = in.ConcurrentReplicasetSyncs
	out.ConcurrentServiceSyncs = in.ConcurrentServiceSyncs
	out.ConcurrentResourceQuotaSyncs = in.ConcurrentResourceQuotaSyncs
	out.ConcurrentServiceaccountTokenSyncs = in.ConcurrentServiceaccountTokenSyncs
	out.ConcurrentRCSyncs = in.ConcurrentRCSyncs
	out.ConcurrentHorizontalPodAustoscalerSyncs = in.ConcurrentHorizontalPodAustoscalerSyncs
	out.ConcurrentJobSyncs = in.ConcurrentJobSyncs
	out.AuthenticationKubeconfig = in.AuthenticationKubeconfig
	out.AuthorizationKubeconfig = in.AuthorizationKubeconfig
	out.AuthorizationAlwaysAllowPaths = in.AuthorizationAlwaysAllowPaths
	out.ExternalCloudVolumePlugin = in.ExternalCloudVolumePlugin
	out.EndpointUpdatesBatchPeriod = in.EndpointUpdatesBatchPeriod
	out.EndpointSliceUpdatesBatchPeriod = in.EndpointSliceUpdatesBatchPeriod
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.EnableLeaderMigration = in.EnableLeaderMigration
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	return nil
}

// Convert_v1alpha2_KubeControllerManagerConfig_To_kops_KubeControllerManagerConfig is an autogenerated conversion function.
func Convert_v1alpha2_KubeControllerManagerConfig_To_kops_KubeControllerManagerConfig(in *KubeControllerManagerConfig, out *kops.KubeControllerManagerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeControllerManagerConfig_To_kops_KubeControllerManagerConfig(in, out, s)
}

func autoConvert_kops_KubeControllerManagerConfig_To_v1alpha2_KubeControllerManagerConfig(in *kops.KubeControllerManagerConfig, out *KubeControllerManagerConfig, s conversion.Scope) error {
	out.Master = in.Master
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.ServiceAccountPrivateKeyFile = in.ServiceAccountPrivateKeyFile
	out.Image = in.Image
	out.CloudProvider = in.CloudProvider
	out.ClusterName = in.ClusterName
	out.ClusterCIDR = in.ClusterCIDR
	out.AllocateNodeCIDRs = in.AllocateNodeCIDRs
	out.NodeCIDRMaskSize = in.NodeCIDRMaskSize
	out.ConfigureCloudRoutes = in.ConfigureCloudRoutes
	out.Controllers = in.Controllers
	out.CIDRAllocatorType = in.CIDRAllocatorType
	out.RootCAFile = in.RootCAFile
	if in.LeaderElection != nil {
		in, out := &in.LeaderElection, &out.LeaderElection
		*out = new(LeaderElectionConfiguration)
		if err := Convert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LeaderElection = nil
	}
	out.AttachDetachReconcileSyncPeriod = in.AttachDetachReconcileSyncPeriod
	out.DisableAttachDetachReconcileSync = in.DisableAttachDetachReconcileSync
	out.TerminatedPodGCThreshold = in.TerminatedPodGCThreshold
	out.NodeMonitorPeriod = in.NodeMonitorPeriod
	out.NodeMonitorGracePeriod = in.NodeMonitorGracePeriod
	out.PodEvictionTimeout = in.PodEvictionTimeout
	out.UseServiceAccountCredentials = in.UseServiceAccountCredentials
	out.HorizontalPodAutoscalerSyncPeriod = in.HorizontalPodAutoscalerSyncPeriod
	out.HorizontalPodAutoscalerDownscaleDelay = in.HorizontalPodAutoscalerDownscaleDelay
	out.HorizontalPodAutoscalerDownscaleStabilization = in.HorizontalPodAutoscalerDownscaleStabilization
	out.HorizontalPodAutoscalerUpscaleDelay = in.HorizontalPodAutoscalerUpscaleDelay
	out.HorizontalPodAutoscalerInitialReadinessDelay = in.HorizontalPodAutoscalerInitialReadinessDelay
	out.HorizontalPodAutoscalerCPUInitializationPeriod = in.HorizontalPodAutoscalerCPUInitializationPeriod
	out.HorizontalPodAutoscalerTolerance = in.HorizontalPodAutoscalerTolerance
	out.HorizontalPodAutoscalerUseRestClients = in.HorizontalPodAutoscalerUseRestClients
	out.ExperimentalClusterSigningDuration = in.ExperimentalClusterSigningDuration
	out.ClusterSigningDuration = in.ClusterSigningDuration
	out.FeatureGates = in.FeatureGates
	out.TLSCertFile = in.TLSCertFile
	out.TLSCipherSuites = in.TLSCipherSuites
	out.TLSMinVersion = in.TLSMinVersion
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.MinResyncPeriod = in.MinResyncPeriod
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = in.KubeAPIBurst
	out.ConcurrentDeploymentSyncs = in.ConcurrentDeploymentSyncs
	out.ConcurrentEndpointSyncs = in.ConcurrentEndpointSyncs
	out.ConcurrentNamespaceSyncs = in.ConcurrentNamespaceSyncs
	out.ConcurrentReplicasetSyncs = in.ConcurrentReplicasetSyncs
	out.ConcurrentServiceSyncs = in.ConcurrentServiceSyncs
	out.ConcurrentResourceQuotaSyncs = in.ConcurrentResourceQuotaSyncs
	out.ConcurrentServiceaccountTokenSyncs = in.ConcurrentServiceaccountTokenSyncs
	out.ConcurrentRCSyncs = in.ConcurrentRCSyncs
	out.ConcurrentHorizontalPodAustoscalerSyncs = in.ConcurrentHorizontalPodAustoscalerSyncs
	out.ConcurrentJobSyncs = in.ConcurrentJobSyncs
	out.AuthenticationKubeconfig = in.AuthenticationKubeconfig
	out.AuthorizationKubeconfig = in.AuthorizationKubeconfig
	out.AuthorizationAlwaysAllowPaths = in.AuthorizationAlwaysAllowPaths
	out.ExternalCloudVolumePlugin = in.ExternalCloudVolumePlugin
	out.EndpointUpdatesBatchPeriod = in.EndpointUpdatesBatchPeriod
	out.EndpointSliceUpdatesBatchPeriod = in.EndpointSliceUpdatesBatchPeriod
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.EnableLeaderMigration = in.EnableLeaderMigration
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	return nil
}

// Convert_kops_KubeControllerManagerConfig_To_v1alpha2_KubeControllerManagerConfig is an autogenerated conversion function.
func Convert_kops_KubeControllerManagerConfig_To_v1alpha2_KubeControllerManagerConfig(in *kops.KubeControllerManagerConfig, out *KubeControllerManagerConfig, s conversion.Scope) error {
	return autoConvert_kops_KubeControllerManagerConfig_To_v1alpha2_KubeControllerManagerConfig(in, out, s)
}

func autoConvert_v1alpha2_KubeDNSConfig_To_kops_KubeDNSConfig(in *KubeDNSConfig, out *kops.KubeDNSConfig, s conversion.Scope) error {
	out.CacheMaxSize = in.CacheMaxSize
	out.CacheMaxConcurrent = in.CacheMaxConcurrent
	out.Tolerations = in.Tolerations
	out.Affinity = in.Affinity
	out.CoreDNSImage = in.CoreDNSImage
	out.CPAImage = in.CPAImage
	out.Domain = in.Domain
	out.ExternalCoreFile = in.ExternalCoreFile
	// INFO: in.Image opted out of conversion generation
	// INFO: in.Replicas opted out of conversion generation
	out.Provider = in.Provider
	out.ServerIP = in.ServerIP
	out.StubDomains = in.StubDomains
	out.UpstreamNameservers = in.UpstreamNameservers
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	if in.NodeLocalDNS != nil {
		in, out := &in.NodeLocalDNS, &out.NodeLocalDNS
		*out = new(kops.NodeLocalDNSConfig)
		if err := Convert_v1alpha2_NodeLocalDNSConfig_To_kops_NodeLocalDNSConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeLocalDNS = nil
	}
	return nil
}

// Convert_v1alpha2_KubeDNSConfig_To_kops_KubeDNSConfig is an autogenerated conversion function.
func Convert_v1alpha2_KubeDNSConfig_To_kops_KubeDNSConfig(in *KubeDNSConfig, out *kops.KubeDNSConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeDNSConfig_To_kops_KubeDNSConfig(in, out, s)
}

func autoConvert_kops_KubeDNSConfig_To_v1alpha2_KubeDNSConfig(in *kops.KubeDNSConfig, out *KubeDNSConfig, s conversion.Scope) error {
	out.CacheMaxSize = in.CacheMaxSize
	out.CacheMaxConcurrent = in.CacheMaxConcurrent
	out.Tolerations = in.Tolerations
	out.Affinity = in.Affinity
	out.CoreDNSImage = in.CoreDNSImage
	out.CPAImage = in.CPAImage
	out.Domain = in.Domain
	out.ExternalCoreFile = in.ExternalCoreFile
	out.Provider = in.Provider
	out.ServerIP = in.ServerIP
	out.StubDomains = in.StubDomains
	out.UpstreamNameservers = in.UpstreamNameservers
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	if in.NodeLocalDNS != nil {
		in, out := &in.NodeLocalDNS, &out.NodeLocalDNS
		*out = new(NodeLocalDNSConfig)
		if err := Convert_kops_NodeLocalDNSConfig_To_v1alpha2_NodeLocalDNSConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeLocalDNS = nil
	}
	return nil
}

// Convert_kops_KubeDNSConfig_To_v1alpha2_KubeDNSConfig is an autogenerated conversion function.
func Convert_kops_KubeDNSConfig_To_v1alpha2_KubeDNSConfig(in *kops.KubeDNSConfig, out *KubeDNSConfig, s conversion.Scope) error {
	return autoConvert_kops_KubeDNSConfig_To_v1alpha2_KubeDNSConfig(in, out, s)
}

func autoConvert_v1alpha2_KubeProxyConfig_To_kops_KubeProxyConfig(in *KubeProxyConfig, out *kops.KubeProxyConfig, s conversion.Scope) error {
	out.Image = in.Image
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	out.LogLevel = in.LogLevel
	out.ClusterCIDR = in.ClusterCIDR
	out.HostnameOverride = in.HostnameOverride
	out.BindAddress = in.BindAddress
	out.Master = in.Master
	out.MetricsBindAddress = in.MetricsBindAddress
	out.Enabled = in.Enabled
	out.ProxyMode = in.ProxyMode
	out.IPVSExcludeCIDRs = in.IPVSExcludeCIDRs
	out.IPVSMinSyncPeriod = in.IPVSMinSyncPeriod
	out.IPVSScheduler = in.IPVSScheduler
	out.IPVSSyncPeriod = in.IPVSSyncPeriod
	out.FeatureGates = in.FeatureGates
	out.ConntrackMaxPerCore = in.ConntrackMaxPerCore
	out.ConntrackMin = in.ConntrackMin
	return nil
}

// Convert_v1alpha2_KubeProxyConfig_To_kops_KubeProxyConfig is an autogenerated conversion function.
func Convert_v1alpha2_KubeProxyConfig_To_kops_KubeProxyConfig(in *KubeProxyConfig, out *kops.KubeProxyConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeProxyConfig_To_kops_KubeProxyConfig(in, out, s)
}

func autoConvert_kops_KubeProxyConfig_To_v1alpha2_KubeProxyConfig(in *kops.KubeProxyConfig, out *KubeProxyConfig, s conversion.Scope) error {
	out.Image = in.Image
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	out.LogLevel = in.LogLevel
	out.ClusterCIDR = in.ClusterCIDR
	out.HostnameOverride = in.HostnameOverride
	out.BindAddress = in.BindAddress
	out.Master = in.Master
	out.MetricsBindAddress = in.MetricsBindAddress
	out.Enabled = in.Enabled
	out.ProxyMode = in.ProxyMode
	out.IPVSExcludeCIDRs = in.IPVSExcludeCIDRs
	out.IPVSMinSyncPeriod = in.IPVSMinSyncPeriod
	out.IPVSScheduler = in.IPVSScheduler
	out.IPVSSyncPeriod = in.IPVSSyncPeriod
	out.FeatureGates = in.FeatureGates
	out.ConntrackMaxPerCore = in.ConntrackMaxPerCore
	out.ConntrackMin = in.ConntrackMin
	return nil
}

// Convert_kops_KubeProxyConfig_To_v1alpha2_KubeProxyConfig is an autogenerated conversion function.
func Convert_kops_KubeProxyConfig_To_v1alpha2_KubeProxyConfig(in *kops.KubeProxyConfig, out *KubeProxyConfig, s conversion.Scope) error {
	return autoConvert_kops_KubeProxyConfig_To_v1alpha2_KubeProxyConfig(in, out, s)
}

func autoConvert_v1alpha2_KubeSchedulerConfig_To_kops_KubeSchedulerConfig(in *KubeSchedulerConfig, out *kops.KubeSchedulerConfig, s conversion.Scope) error {
	out.Master = in.Master
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.Image = in.Image
	if in.LeaderElection != nil {
		in, out := &in.LeaderElection, &out.LeaderElection
		*out = new(kops.LeaderElectionConfiguration)
		if err := Convert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LeaderElection = nil
	}
	out.UsePolicyConfigMap = in.UsePolicyConfigMap
	out.FeatureGates = in.FeatureGates
	out.MaxPersistentVolumes = in.MaxPersistentVolumes
	out.Qps = in.Qps
	out.Burst = in.Burst
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = in.KubeAPIBurst
	out.AuthenticationKubeconfig = in.AuthenticationKubeconfig
	out.AuthorizationKubeconfig = in.AuthorizationKubeconfig
	out.AuthorizationAlwaysAllowPaths = in.AuthorizationAlwaysAllowPaths
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	return nil
}

// Convert_v1alpha2_KubeSchedulerConfig_To_kops_KubeSchedulerConfig is an autogenerated conversion function.
func Convert_v1alpha2_KubeSchedulerConfig_To_kops_KubeSchedulerConfig(in *KubeSchedulerConfig, out *kops.KubeSchedulerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeSchedulerConfig_To_kops_KubeSchedulerConfig(in, out, s)
}

func autoConvert_kops_KubeSchedulerConfig_To_v1alpha2_KubeSchedulerConfig(in *kops.KubeSchedulerConfig, out *KubeSchedulerConfig, s conversion.Scope) error {
	out.Master = in.Master
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.Image = in.Image
	if in.LeaderElection != nil {
		in, out := &in.LeaderElection, &out.LeaderElection
		*out = new(LeaderElectionConfiguration)
		if err := Convert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LeaderElection = nil
	}
	out.UsePolicyConfigMap = in.UsePolicyConfigMap
	out.FeatureGates = in.FeatureGates
	out.MaxPersistentVolumes = in.MaxPersistentVolumes
	out.Qps = in.Qps
	out.Burst = in.Burst
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = in.KubeAPIBurst
	out.AuthenticationKubeconfig = in.AuthenticationKubeconfig
	out.AuthorizationKubeconfig = in.AuthorizationKubeconfig
	out.AuthorizationAlwaysAllowPaths = in.AuthorizationAlwaysAllowPaths
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.CPURequest = in.CPURequest
	out.CPULimit = in.CPULimit
	out.MemoryRequest = in.MemoryRequest
	out.MemoryLimit = in.MemoryLimit
	return nil
}

// Convert_kops_KubeSchedulerConfig_To_v1alpha2_KubeSchedulerConfig is an autogenerated conversion function.
func Convert_kops_KubeSchedulerConfig_To_v1alpha2_KubeSchedulerConfig(in *kops.KubeSchedulerConfig, out *KubeSchedulerConfig, s conversion.Scope) error {
	return autoConvert_kops_KubeSchedulerConfig_To_v1alpha2_KubeSchedulerConfig(in, out, s)
}

func autoConvert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(in *KubeletConfigSpec, out *kops.KubeletConfigSpec, s conversion.Scope) error {
	out.APIServers = in.APIServers
	out.AnonymousAuth = in.AnonymousAuth
	out.AuthorizationMode = in.AuthorizationMode
	out.BootstrapKubeconfig = in.BootstrapKubeconfig
	out.ClientCAFile = in.ClientCAFile
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.TLSCipherSuites = in.TLSCipherSuites
	out.TLSMinVersion = in.TLSMinVersion
	out.KubeconfigPath = in.KubeconfigPath
	out.RequireKubeconfig = in.RequireKubeconfig
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.PodManifestPath = in.PodManifestPath
	out.HostnameOverride = in.HostnameOverride
	out.PodInfraContainerImage = in.PodInfraContainerImage
	out.SeccompDefault = in.SeccompDefault
	out.SeccompProfileRoot = in.SeccompProfileRoot
	out.AllowPrivileged = in.AllowPrivileged
	out.EnableDebuggingHandlers = in.EnableDebuggingHandlers
	out.RegisterNode = in.RegisterNode
	out.NodeStatusUpdateFrequency = in.NodeStatusUpdateFrequency
	out.ClusterDomain = in.ClusterDomain
	out.ClusterDNS = in.ClusterDNS
	out.NetworkPluginName = in.NetworkPluginName
	out.CloudProvider = in.CloudProvider
	out.KubeletCgroups = in.KubeletCgroups
	out.RuntimeCgroups = in.RuntimeCgroups
	out.ReadOnlyPort = in.ReadOnlyPort
	out.SystemCgroups = in.SystemCgroups
	out.CgroupRoot = in.CgroupRoot
	out.ConfigureCBR0 = in.ConfigureCBR0
	out.HairpinMode = in.HairpinMode
	out.BabysitDaemons = in.BabysitDaemons
	out.MaxPods = in.MaxPods
	out.NvidiaGPUs = in.NvidiaGPUs
	out.PodCIDR = in.PodCIDR
	out.ResolverConfig = in.ResolverConfig
	out.ReconcileCIDR = in.ReconcileCIDR
	out.RegisterSchedulable = in.RegisterSchedulable
	out.SerializeImagePulls = in.SerializeImagePulls
	out.NodeLabels = in.NodeLabels
	out.NonMasqueradeCIDR = in.NonMasqueradeCIDR
	out.EnableCustomMetrics = in.EnableCustomMetrics
	out.NetworkPluginMTU = in.NetworkPluginMTU
	out.ImageMinimumGCAge = in.ImageMinimumGCAge
	out.ImageMaximumGCAge = in.ImageMaximumGCAge
	out.ImageGCHighThresholdPercent = in.ImageGCHighThresholdPercent
	out.ImageGCLowThresholdPercent = in.ImageGCLowThresholdPercent
	out.ImagePullProgressDeadline = in.ImagePullProgressDeadline
	out.EvictionHard = in.EvictionHard
	out.EvictionSoft = in.EvictionSoft
	out.EvictionSoftGracePeriod = in.EvictionSoftGracePeriod
	out.EvictionPressureTransitionPeriod = in.EvictionPressureTransitionPeriod
	out.EvictionMaxPodGracePeriod = in.EvictionMaxPodGracePeriod
	out.EvictionMinimumReclaim = in.EvictionMinimumReclaim
	out.VolumePluginDirectory = in.VolumePluginDirectory
	out.Taints = in.Taints
	out.FeatureGates = in.FeatureGates
	out.KernelMemcgNotification = in.KernelMemcgNotification
	out.KubeReserved = in.KubeReserved
	out.KubeReservedCgroup = in.KubeReservedCgroup
	out.SystemReserved = in.SystemReserved
	out.SystemReservedCgroup = in.SystemReservedCgroup
	out.EnforceNodeAllocatable = in.EnforceNodeAllocatable
	out.RuntimeRequestTimeout = in.RuntimeRequestTimeout
	out.VolumeStatsAggPeriod = in.VolumeStatsAggPeriod
	out.FailSwapOn = in.FailSwapOn
	out.ExperimentalAllowedUnsafeSysctls = in.ExperimentalAllowedUnsafeSysctls
	out.AllowedUnsafeSysctls = in.AllowedUnsafeSysctls
	out.StreamingConnectionIdleTimeout = in.StreamingConnectionIdleTimeout
	out.DockerDisableSharedPID = in.DockerDisableSharedPID
	out.RootDir = in.RootDir
	out.AuthenticationTokenWebhook = in.AuthenticationTokenWebhook
	out.AuthenticationTokenWebhookCacheTTL = in.AuthenticationTokenWebhookCacheTTL
	out.CPUCFSQuota = in.CPUCFSQuota
	out.CPUCFSQuotaPeriod = in.CPUCFSQuotaPeriod
	out.CpuManagerPolicy = in.CpuManagerPolicy
	out.RegistryPullQPS = in.RegistryPullQPS
	out.RegistryBurst = in.RegistryBurst
	out.TopologyManagerPolicy = in.TopologyManagerPolicy
	out.RotateCertificates = in.RotateCertificates
	out.ProtectKernelDefaults = in.ProtectKernelDefaults
	out.CgroupDriver = in.CgroupDriver
	out.HousekeepingInterval = in.HousekeepingInterval
	out.EventQPS = in.EventQPS
	out.EventBurst = in.EventBurst
	out.ContainerLogMaxSize = in.ContainerLogMaxSize
	out.ContainerLogMaxFiles = in.ContainerLogMaxFiles
	out.EnableCadvisorJsonEndpoints = in.EnableCadvisorJsonEndpoints
	out.PodPidsLimit = in.PodPidsLimit
	out.ExperimentalAllocatableIgnoreEviction = in.ExperimentalAllocatableIgnoreEviction
	out.ShutdownGracePeriod = in.ShutdownGracePeriod
	out.ShutdownGracePeriodCriticalPods = in.ShutdownGracePeriodCriticalPods
	out.MemorySwapBehavior = in.MemorySwapBehavior
	return nil
}

// Convert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec is an autogenerated conversion function.
func Convert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(in *KubeletConfigSpec, out *kops.KubeletConfigSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeletConfigSpec_To_kops_KubeletConfigSpec(in, out, s)
}

func autoConvert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(in *kops.KubeletConfigSpec, out *KubeletConfigSpec, s conversion.Scope) error {
	out.APIServers = in.APIServers
	out.AnonymousAuth = in.AnonymousAuth
	out.AuthorizationMode = in.AuthorizationMode
	out.BootstrapKubeconfig = in.BootstrapKubeconfig
	out.ClientCAFile = in.ClientCAFile
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	out.TLSCipherSuites = in.TLSCipherSuites
	out.TLSMinVersion = in.TLSMinVersion
	out.KubeconfigPath = in.KubeconfigPath
	out.RequireKubeconfig = in.RequireKubeconfig
	out.LogFormat = in.LogFormat
	out.LogLevel = in.LogLevel
	out.PodManifestPath = in.PodManifestPath
	out.HostnameOverride = in.HostnameOverride
	out.PodInfraContainerImage = in.PodInfraContainerImage
	out.SeccompDefault = in.SeccompDefault
	out.SeccompProfileRoot = in.SeccompProfileRoot
	out.AllowPrivileged = in.AllowPrivileged
	out.EnableDebuggingHandlers = in.EnableDebuggingHandlers
	out.RegisterNode = in.RegisterNode
	out.NodeStatusUpdateFrequency = in.NodeStatusUpdateFrequency
	out.ClusterDomain = in.ClusterDomain
	out.ClusterDNS = in.ClusterDNS
	out.NetworkPluginName = in.NetworkPluginName
	out.CloudProvider = in.CloudProvider
	out.KubeletCgroups = in.KubeletCgroups
	out.RuntimeCgroups = in.RuntimeCgroups
	out.ReadOnlyPort = in.ReadOnlyPort
	out.SystemCgroups = in.SystemCgroups
	out.CgroupRoot = in.CgroupRoot
	out.ConfigureCBR0 = in.ConfigureCBR0
	out.HairpinMode = in.HairpinMode
	out.BabysitDaemons = in.BabysitDaemons
	out.MaxPods = in.MaxPods
	out.NvidiaGPUs = in.NvidiaGPUs
	out.PodCIDR = in.PodCIDR
	out.ResolverConfig = in.ResolverConfig
	out.ReconcileCIDR = in.ReconcileCIDR
	out.RegisterSchedulable = in.RegisterSchedulable
	out.SerializeImagePulls = in.SerializeImagePulls
	out.NodeLabels = in.NodeLabels
	out.NonMasqueradeCIDR = in.NonMasqueradeCIDR
	out.EnableCustomMetrics = in.EnableCustomMetrics
	out.NetworkPluginMTU = in.NetworkPluginMTU
	out.ImageMinimumGCAge = in.ImageMinimumGCAge
	out.ImageMaximumGCAge = in.ImageMaximumGCAge
	out.ImageGCHighThresholdPercent = in.ImageGCHighThresholdPercent
	out.ImageGCLowThresholdPercent = in.ImageGCLowThresholdPercent
	out.ImagePullProgressDeadline = in.ImagePullProgressDeadline
	out.EvictionHard = in.EvictionHard
	out.EvictionSoft = in.EvictionSoft
	out.EvictionSoftGracePeriod = in.EvictionSoftGracePeriod
	out.EvictionPressureTransitionPeriod = in.EvictionPressureTransitionPeriod
	out.EvictionMaxPodGracePeriod = in.EvictionMaxPodGracePeriod
	out.EvictionMinimumReclaim = in.EvictionMinimumReclaim
	out.VolumePluginDirectory = in.VolumePluginDirectory
	out.Taints = in.Taints
	out.FeatureGates = in.FeatureGates
	out.KernelMemcgNotification = in.KernelMemcgNotification
	out.KubeReserved = in.KubeReserved
	out.KubeReservedCgroup = in.KubeReservedCgroup
	out.SystemReserved = in.SystemReserved
	out.SystemReservedCgroup = in.SystemReservedCgroup
	out.EnforceNodeAllocatable = in.EnforceNodeAllocatable
	out.RuntimeRequestTimeout = in.RuntimeRequestTimeout
	out.VolumeStatsAggPeriod = in.VolumeStatsAggPeriod
	out.FailSwapOn = in.FailSwapOn
	out.ExperimentalAllowedUnsafeSysctls = in.ExperimentalAllowedUnsafeSysctls
	out.AllowedUnsafeSysctls = in.AllowedUnsafeSysctls
	out.StreamingConnectionIdleTimeout = in.StreamingConnectionIdleTimeout
	out.DockerDisableSharedPID = in.DockerDisableSharedPID
	out.RootDir = in.RootDir
	out.AuthenticationTokenWebhook = in.AuthenticationTokenWebhook
	out.AuthenticationTokenWebhookCacheTTL = in.AuthenticationTokenWebhookCacheTTL
	out.CPUCFSQuota = in.CPUCFSQuota
	out.CPUCFSQuotaPeriod = in.CPUCFSQuotaPeriod
	out.CpuManagerPolicy = in.CpuManagerPolicy
	out.RegistryPullQPS = in.RegistryPullQPS
	out.RegistryBurst = in.RegistryBurst
	out.TopologyManagerPolicy = in.TopologyManagerPolicy
	out.RotateCertificates = in.RotateCertificates
	out.ProtectKernelDefaults = in.ProtectKernelDefaults
	out.CgroupDriver = in.CgroupDriver
	out.HousekeepingInterval = in.HousekeepingInterval
	out.EventQPS = in.EventQPS
	out.EventBurst = in.EventBurst
	out.ContainerLogMaxSize = in.ContainerLogMaxSize
	out.ContainerLogMaxFiles = in.ContainerLogMaxFiles
	out.EnableCadvisorJsonEndpoints = in.EnableCadvisorJsonEndpoints
	out.PodPidsLimit = in.PodPidsLimit
	out.ExperimentalAllocatableIgnoreEviction = in.ExperimentalAllocatableIgnoreEviction
	out.ShutdownGracePeriod = in.ShutdownGracePeriod
	out.ShutdownGracePeriodCriticalPods = in.ShutdownGracePeriodCriticalPods
	out.MemorySwapBehavior = in.MemorySwapBehavior
	return nil
}

// Convert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec is an autogenerated conversion function.
func Convert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(in *kops.KubeletConfigSpec, out *KubeletConfigSpec, s conversion.Scope) error {
	return autoConvert_kops_KubeletConfigSpec_To_v1alpha2_KubeletConfigSpec(in, out, s)
}

func autoConvert_v1alpha2_KubenetNetworkingSpec_To_kops_KubenetNetworkingSpec(in *KubenetNetworkingSpec, out *kops.KubenetNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_KubenetNetworkingSpec_To_kops_KubenetNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_KubenetNetworkingSpec_To_kops_KubenetNetworkingSpec(in *KubenetNetworkingSpec, out *kops.KubenetNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubenetNetworkingSpec_To_kops_KubenetNetworkingSpec(in, out, s)
}

func autoConvert_kops_KubenetNetworkingSpec_To_v1alpha2_KubenetNetworkingSpec(in *kops.KubenetNetworkingSpec, out *KubenetNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_KubenetNetworkingSpec_To_v1alpha2_KubenetNetworkingSpec is an autogenerated conversion function.
func Convert_kops_KubenetNetworkingSpec_To_v1alpha2_KubenetNetworkingSpec(in *kops.KubenetNetworkingSpec, out *KubenetNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_KubenetNetworkingSpec_To_v1alpha2_KubenetNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_KuberouterNetworkingSpec_To_kops_KuberouterNetworkingSpec(in *KuberouterNetworkingSpec, out *kops.KuberouterNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_KuberouterNetworkingSpec_To_kops_KuberouterNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_KuberouterNetworkingSpec_To_kops_KuberouterNetworkingSpec(in *KuberouterNetworkingSpec, out *kops.KuberouterNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KuberouterNetworkingSpec_To_kops_KuberouterNetworkingSpec(in, out, s)
}

func autoConvert_kops_KuberouterNetworkingSpec_To_v1alpha2_KuberouterNetworkingSpec(in *kops.KuberouterNetworkingSpec, out *KuberouterNetworkingSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_KuberouterNetworkingSpec_To_v1alpha2_KuberouterNetworkingSpec is an autogenerated conversion function.
func Convert_kops_KuberouterNetworkingSpec_To_v1alpha2_KuberouterNetworkingSpec(in *kops.KuberouterNetworkingSpec, out *KuberouterNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_KuberouterNetworkingSpec_To_v1alpha2_KuberouterNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(in *LeaderElectionConfiguration, out *kops.LeaderElectionConfiguration, s conversion.Scope) error {
	out.LeaderElect = in.LeaderElect
	out.LeaderElectLeaseDuration = in.LeaderElectLeaseDuration
	out.LeaderElectRenewDeadlineDuration = in.LeaderElectRenewDeadlineDuration
	out.LeaderElectResourceLock = in.LeaderElectResourceLock
	out.LeaderElectResourceName = in.LeaderElectResourceName
	out.LeaderElectResourceNamespace = in.LeaderElectResourceNamespace
	out.LeaderElectRetryPeriod = in.LeaderElectRetryPeriod
	return nil
}

// Convert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration is an autogenerated conversion function.
func Convert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(in *LeaderElectionConfiguration, out *kops.LeaderElectionConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha2_LeaderElectionConfiguration_To_kops_LeaderElectionConfiguration(in, out, s)
}

func autoConvert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(in *kops.LeaderElectionConfiguration, out *LeaderElectionConfiguration, s conversion.Scope) error {
	out.LeaderElect = in.LeaderElect
	out.LeaderElectLeaseDuration = in.LeaderElectLeaseDuration
	out.LeaderElectRenewDeadlineDuration = in.LeaderElectRenewDeadlineDuration
	out.LeaderElectResourceLock = in.LeaderElectResourceLock
	out.LeaderElectResourceName = in.LeaderElectResourceName
	out.LeaderElectResourceNamespace = in.LeaderElectResourceNamespace
	out.LeaderElectRetryPeriod = in.LeaderElectRetryPeriod
	return nil
}

// Convert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration is an autogenerated conversion function.
func Convert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(in *kops.LeaderElectionConfiguration, out *LeaderElectionConfiguration, s conversion.Scope) error {
	return autoConvert_kops_LeaderElectionConfiguration_To_v1alpha2_LeaderElectionConfiguration(in, out, s)
}

func autoConvert_v1alpha2_LoadBalancerAccessSpec_To_kops_LoadBalancerAccessSpec(in *LoadBalancerAccessSpec, out *kops.LoadBalancerAccessSpec, s conversion.Scope) error {
	out.Class = kops.LoadBalancerClass(in.Class)
	out.Type = kops.LoadBalancerType(in.Type)
	out.IdleTimeoutSeconds = in.IdleTimeoutSeconds
	out.SecurityGroupOverride = in.SecurityGroupOverride
	out.AdditionalSecurityGroups = in.AdditionalSecurityGroups
	out.UseForInternalAPI = in.UseForInternalAPI
	out.SSLCertificate = in.SSLCertificate
	out.SSLPolicy = in.SSLPolicy
	out.CrossZoneLoadBalancing = in.CrossZoneLoadBalancing
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]kops.LoadBalancerSubnetSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_LoadBalancerSubnetSpec_To_kops_LoadBalancerSubnetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subnets = nil
	}
	if in.AccessLog != nil {
		in, out := &in.AccessLog, &out.AccessLog
		*out = new(kops.AccessLogSpec)
		if err := Convert_v1alpha2_AccessLogSpec_To_kops_AccessLogSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AccessLog = nil
	}
	return nil
}

// Convert_v1alpha2_LoadBalancerAccessSpec_To_kops_LoadBalancerAccessSpec is an autogenerated conversion function.
func Convert_v1alpha2_LoadBalancerAccessSpec_To_kops_LoadBalancerAccessSpec(in *LoadBalancerAccessSpec, out *kops.LoadBalancerAccessSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_LoadBalancerAccessSpec_To_kops_LoadBalancerAccessSpec(in, out, s)
}

func autoConvert_kops_LoadBalancerAccessSpec_To_v1alpha2_LoadBalancerAccessSpec(in *kops.LoadBalancerAccessSpec, out *LoadBalancerAccessSpec, s conversion.Scope) error {
	out.Class = LoadBalancerClass(in.Class)
	out.Type = LoadBalancerType(in.Type)
	out.IdleTimeoutSeconds = in.IdleTimeoutSeconds
	out.SecurityGroupOverride = in.SecurityGroupOverride
	out.AdditionalSecurityGroups = in.AdditionalSecurityGroups
	out.UseForInternalAPI = in.UseForInternalAPI
	out.SSLCertificate = in.SSLCertificate
	out.SSLPolicy = in.SSLPolicy
	out.CrossZoneLoadBalancing = in.CrossZoneLoadBalancing
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]LoadBalancerSubnetSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_LoadBalancerSubnetSpec_To_v1alpha2_LoadBalancerSubnetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subnets = nil
	}
	if in.AccessLog != nil {
		in, out := &in.AccessLog, &out.AccessLog
		*out = new(AccessLogSpec)
		if err := Convert_kops_AccessLogSpec_To_v1alpha2_AccessLogSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AccessLog = nil
	}
	return nil
}

// Convert_kops_LoadBalancerAccessSpec_To_v1alpha2_LoadBalancerAccessSpec is an autogenerated conversion function.
func Convert_kops_LoadBalancerAccessSpec_To_v1alpha2_LoadBalancerAccessSpec(in *kops.LoadBalancerAccessSpec, out *LoadBalancerAccessSpec, s conversion.Scope) error {
	return autoConvert_kops_LoadBalancerAccessSpec_To_v1alpha2_LoadBalancerAccessSpec(in, out, s)
}

func autoConvert_v1alpha2_LoadBalancerControllerSpec_To_kops_LoadBalancerControllerSpec(in *LoadBalancerControllerSpec, out *kops.LoadBalancerControllerSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Version = in.Version
	out.EnableWAF = in.EnableWAF
	out.EnableWAFv2 = in.EnableWAFv2
	out.EnableShield = in.EnableShield
	return nil
}

// Convert_v1alpha2_LoadBalancerControllerSpec_To_kops_LoadBalancerControllerSpec is an autogenerated conversion function.
func Convert_v1alpha2_LoadBalancerControllerSpec_To_kops_LoadBalancerControllerSpec(in *LoadBalancerControllerSpec, out *kops.LoadBalancerControllerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_LoadBalancerControllerSpec_To_kops_LoadBalancerControllerSpec(in, out, s)
}

func autoConvert_kops_LoadBalancerControllerSpec_To_v1alpha2_LoadBalancerControllerSpec(in *kops.LoadBalancerControllerSpec, out *LoadBalancerControllerSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Version = in.Version
	out.EnableWAF = in.EnableWAF
	out.EnableWAFv2 = in.EnableWAFv2
	out.EnableShield = in.EnableShield
	return nil
}

// Convert_kops_LoadBalancerControllerSpec_To_v1alpha2_LoadBalancerControllerSpec is an autogenerated conversion function.
func Convert_kops_LoadBalancerControllerSpec_To_v1alpha2_LoadBalancerControllerSpec(in *kops.LoadBalancerControllerSpec, out *LoadBalancerControllerSpec, s conversion.Scope) error {
	return autoConvert_kops_LoadBalancerControllerSpec_To_v1alpha2_LoadBalancerControllerSpec(in, out, s)
}

func autoConvert_v1alpha2_LoadBalancerSpec_To_kops_LoadBalancerSpec(in *LoadBalancerSpec, out *kops.LoadBalancerSpec, s conversion.Scope) error {
	out.LoadBalancerName = in.LoadBalancerName
	out.TargetGroupARN = in.TargetGroupARN
	return nil
}

// Convert_v1alpha2_LoadBalancerSpec_To_kops_LoadBalancerSpec is an autogenerated conversion function.
func Convert_v1alpha2_LoadBalancerSpec_To_kops_LoadBalancerSpec(in *LoadBalancerSpec, out *kops.LoadBalancerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_LoadBalancerSpec_To_kops_LoadBalancerSpec(in, out, s)
}

func autoConvert_kops_LoadBalancerSpec_To_v1alpha2_LoadBalancerSpec(in *kops.LoadBalancerSpec, out *LoadBalancerSpec, s conversion.Scope) error {
	out.LoadBalancerName = in.LoadBalancerName
	out.TargetGroupARN = in.TargetGroupARN
	return nil
}

// Convert_kops_LoadBalancerSpec_To_v1alpha2_LoadBalancerSpec is an autogenerated conversion function.
func Convert_kops_LoadBalancerSpec_To_v1alpha2_LoadBalancerSpec(in *kops.LoadBalancerSpec, out *LoadBalancerSpec, s conversion.Scope) error {
	return autoConvert_kops_LoadBalancerSpec_To_v1alpha2_LoadBalancerSpec(in, out, s)
}

func autoConvert_v1alpha2_LoadBalancerSubnetSpec_To_kops_LoadBalancerSubnetSpec(in *LoadBalancerSubnetSpec, out *kops.LoadBalancerSubnetSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.PrivateIPv4Address = in.PrivateIPv4Address
	out.AllocationID = in.AllocationID
	return nil
}

// Convert_v1alpha2_LoadBalancerSubnetSpec_To_kops_LoadBalancerSubnetSpec is an autogenerated conversion function.
func Convert_v1alpha2_LoadBalancerSubnetSpec_To_kops_LoadBalancerSubnetSpec(in *LoadBalancerSubnetSpec, out *kops.LoadBalancerSubnetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_LoadBalancerSubnetSpec_To_kops_LoadBalancerSubnetSpec(in, out, s)
}

func autoConvert_kops_LoadBalancerSubnetSpec_To_v1alpha2_LoadBalancerSubnetSpec(in *kops.LoadBalancerSubnetSpec, out *LoadBalancerSubnetSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.PrivateIPv4Address = in.PrivateIPv4Address
	out.AllocationID = in.AllocationID
	return nil
}

// Convert_kops_LoadBalancerSubnetSpec_To_v1alpha2_LoadBalancerSubnetSpec is an autogenerated conversion function.
func Convert_kops_LoadBalancerSubnetSpec_To_v1alpha2_LoadBalancerSubnetSpec(in *kops.LoadBalancerSubnetSpec, out *LoadBalancerSubnetSpec, s conversion.Scope) error {
	return autoConvert_kops_LoadBalancerSubnetSpec_To_v1alpha2_LoadBalancerSubnetSpec(in, out, s)
}

func autoConvert_v1alpha2_LyftVPCNetworkingSpec_To_kops_LyftVPCNetworkingSpec(in *LyftVPCNetworkingSpec, out *kops.LyftVPCNetworkingSpec, s conversion.Scope) error {
	out.SubnetTags = in.SubnetTags
	return nil
}

// Convert_v1alpha2_LyftVPCNetworkingSpec_To_kops_LyftVPCNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_LyftVPCNetworkingSpec_To_kops_LyftVPCNetworkingSpec(in *LyftVPCNetworkingSpec, out *kops.LyftVPCNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_LyftVPCNetworkingSpec_To_kops_LyftVPCNetworkingSpec(in, out, s)
}

func autoConvert_kops_LyftVPCNetworkingSpec_To_v1alpha2_LyftVPCNetworkingSpec(in *kops.LyftVPCNetworkingSpec, out *LyftVPCNetworkingSpec, s conversion.Scope) error {
	out.SubnetTags = in.SubnetTags
	return nil
}

// Convert_kops_LyftVPCNetworkingSpec_To_v1alpha2_LyftVPCNetworkingSpec is an autogenerated conversion function.
func Convert_kops_LyftVPCNetworkingSpec_To_v1alpha2_LyftVPCNetworkingSpec(in *kops.LyftVPCNetworkingSpec, out *LyftVPCNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_LyftVPCNetworkingSpec_To_v1alpha2_LyftVPCNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_MetricsServerConfig_To_kops_MetricsServerConfig(in *MetricsServerConfig, out *kops.MetricsServerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Image = in.Image
	out.Insecure = in.Insecure
	return nil
}

// Convert_v1alpha2_MetricsServerConfig_To_kops_MetricsServerConfig is an autogenerated conversion function.
func Convert_v1alpha2_MetricsServerConfig_To_kops_MetricsServerConfig(in *MetricsServerConfig, out *kops.MetricsServerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_MetricsServerConfig_To_kops_MetricsServerConfig(in, out, s)
}

func autoConvert_kops_MetricsServerConfig_To_v1alpha2_MetricsServerConfig(in *kops.MetricsServerConfig, out *MetricsServerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Image = in.Image
	out.Insecure = in.Insecure
	return nil
}

// Convert_kops_MetricsServerConfig_To_v1alpha2_MetricsServerConfig is an autogenerated conversion function.
func Convert_kops_MetricsServerConfig_To_v1alpha2_MetricsServerConfig(in *kops.MetricsServerConfig, out *MetricsServerConfig, s conversion.Scope) error {
	return autoConvert_kops_MetricsServerConfig_To_v1alpha2_MetricsServerConfig(in, out, s)
}

func autoConvert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec(in *MinMaxSpec, out *kops.MinMaxSpec, s conversion.Scope) error {
	out.Max = in.Max
	out.Min = in.Min
	return nil
}

// Convert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec is an autogenerated conversion function.
func Convert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec(in *MinMaxSpec, out *kops.MinMaxSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_MinMaxSpec_To_kops_MinMaxSpec(in, out, s)
}

func autoConvert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec(in *kops.MinMaxSpec, out *MinMaxSpec, s conversion.Scope) error {
	out.Max = in.Max
	out.Min = in.Min
	return nil
}

// Convert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec is an autogenerated conversion function.
func Convert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec(in *kops.MinMaxSpec, out *MinMaxSpec, s conversion.Scope) error {
	return autoConvert_kops_MinMaxSpec_To_v1alpha2_MinMaxSpec(in, out, s)
}

func autoConvert_v1alpha2_MixedInstancesPolicySpec_To_kops_MixedInstancesPolicySpec(in *MixedInstancesPolicySpec, out *kops.MixedInstancesPolicySpec, s conversion.Scope) error {
	out.Instances = in.Instances
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(kops.InstanceRequirementsSpec)
		if err := Convert_v1alpha2_InstanceRequirementsSpec_To_kops_InstanceRequirementsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.InstanceRequirements = nil
	}
	out.OnDemandAllocationStrategy = in.OnDemandAllocationStrategy
	out.OnDemandBase = in.OnDemandBase
	out.OnDemandAboveBase = in.OnDemandAboveBase
	out.SpotAllocationStrategy = in.SpotAllocationStrategy
	out.SpotInstancePools = in.SpotInstancePools
	return nil
}

// Convert_v1alpha2_MixedInstancesPolicySpec_To_kops_MixedInstancesPolicySpec is an autogenerated conversion function.
func Convert_v1alpha2_MixedInstancesPolicySpec_To_kops_MixedInstancesPolicySpec(in *MixedInstancesPolicySpec, out *kops.MixedInstancesPolicySpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_MixedInstancesPolicySpec_To_kops_MixedInstancesPolicySpec(in, out, s)
}

func autoConvert_kops_MixedInstancesPolicySpec_To_v1alpha2_MixedInstancesPolicySpec(in *kops.MixedInstancesPolicySpec, out *MixedInstancesPolicySpec, s conversion.Scope) error {
	out.Instances = in.Instances
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(InstanceRequirementsSpec)
		if err := Convert_kops_InstanceRequirementsSpec_To_v1alpha2_InstanceRequirementsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.InstanceRequirements = nil
	}
	out.OnDemandAllocationStrategy = in.OnDemandAllocationStrategy
	out.OnDemandBase = in.OnDemandBase
	out.OnDemandAboveBase = in.OnDemandAboveBase
	out.SpotAllocationStrategy = in.SpotAllocationStrategy
	out.SpotInstancePools = in.SpotInstancePools
	return nil
}

// Convert_kops_MixedInstancesPolicySpec_To_v1alpha2_MixedInstancesPolicySpec is an autogenerated conversion function.
func Convert_kops_MixedInstancesPolicySpec_To_v1alpha2_MixedInstancesPolicySpec(in *kops.MixedInstancesPolicySpec, out *MixedInstancesPolicySpec, s conversion.Scope) error {
	return autoConvert_kops_MixedInstancesPolicySpec_To_v1alpha2_MixedInstancesPolicySpec(in, out, s)
}

func autoConvert_v1alpha2_NRIConfig_To_kops_NRIConfig(in *NRIConfig, out *kops.NRIConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.PluginRegistrationTimeout = in.PluginRegistrationTimeout
	out.PluginRequestTimeout = in.PluginRequestTimeout
	return nil
}

// Convert_v1alpha2_NRIConfig_To_kops_NRIConfig is an autogenerated conversion function.
func Convert_v1alpha2_NRIConfig_To_kops_NRIConfig(in *NRIConfig, out *kops.NRIConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_NRIConfig_To_kops_NRIConfig(in, out, s)
}

func autoConvert_kops_NRIConfig_To_v1alpha2_NRIConfig(in *kops.NRIConfig, out *NRIConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.PluginRegistrationTimeout = in.PluginRegistrationTimeout
	out.PluginRequestTimeout = in.PluginRequestTimeout
	return nil
}

// Convert_kops_NRIConfig_To_v1alpha2_NRIConfig is an autogenerated conversion function.
func Convert_kops_NRIConfig_To_v1alpha2_NRIConfig(in *kops.NRIConfig, out *NRIConfig, s conversion.Scope) error {
	return autoConvert_kops_NRIConfig_To_v1alpha2_NRIConfig(in, out, s)
}

func autoConvert_v1alpha2_NTPConfig_To_kops_NTPConfig(in *NTPConfig, out *kops.NTPConfig, s conversion.Scope) error {
	out.Managed = in.Managed
	return nil
}

// Convert_v1alpha2_NTPConfig_To_kops_NTPConfig is an autogenerated conversion function.
func Convert_v1alpha2_NTPConfig_To_kops_NTPConfig(in *NTPConfig, out *kops.NTPConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_NTPConfig_To_kops_NTPConfig(in, out, s)
}

func autoConvert_kops_NTPConfig_To_v1alpha2_NTPConfig(in *kops.NTPConfig, out *NTPConfig, s conversion.Scope) error {
	out.Managed = in.Managed
	return nil
}

// Convert_kops_NTPConfig_To_v1alpha2_NTPConfig is an autogenerated conversion function.
func Convert_kops_NTPConfig_To_v1alpha2_NTPConfig(in *kops.NTPConfig, out *NTPConfig, s conversion.Scope) error {
	return autoConvert_kops_NTPConfig_To_v1alpha2_NTPConfig(in, out, s)
}

func autoConvert_v1alpha2_NetworkingSpec_To_kops_NetworkingSpec(in *NetworkingSpec, out *kops.NetworkingSpec, s conversion.Scope) error {
	out.NetworkID = in.NetworkID
	out.NetworkCIDR = in.NetworkCIDR
	out.AdditionalNetworkCIDRs = in.AdditionalNetworkCIDRs
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]kops.ClusterSubnetSpec, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_ClusterSubnetSpec_To_kops_ClusterSubnetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subnets = nil
	}
	out.TagSubnets = in.TagSubnets
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = new(kops.TopologySpec)
		if err := Convert_v1alpha2_TopologySpec_To_kops_TopologySpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Topology = nil
	}
	if in.EgressProxy != nil {
		in, out := &in.EgressProxy, &out.EgressProxy
		*out = new(kops.EgressProxySpec)
		if err := Convert_v1alpha2_EgressProxySpec_To_kops_EgressProxySpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.EgressProxy = nil
	}
	out.NonMasqueradeCIDR = in.NonMasqueradeCIDR
	out.PodCIDR = in.PodCIDR
	out.ServiceClusterIPRange = in.ServiceClusterIPRange
	out.IsolateControlPlane = in.IsolateControlPlane
	if in.Classic != nil {
		in, out := &in.Classic, &out.Classic
		*out = new(kops.ClassicNetworkingSpec)
		if err := Convert_v1alpha2_ClassicNetworkingSpec_To_kops_ClassicNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Classic = nil
	}
	if in.Kubenet != nil {
		in, out := &in.Kubenet, &out.Kubenet
		*out = new(kops.KubenetNetworkingSpec)
		if err := Convert_v1alpha2_KubenetNetworkingSpec_To_kops_KubenetNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kubenet = nil
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(kops.ExternalNetworkingSpec)
		if err := Convert_v1alpha2_ExternalNetworkingSpec_To_kops_ExternalNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.External = nil
	}
	if in.CNI != nil {
		in, out := &in.CNI, &out.CNI
		*out = new(kops.CNINetworkingSpec)
		if err := Convert_v1alpha2_CNINetworkingSpec_To_kops_CNINetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CNI = nil
	}
	if in.Kopeio != nil {
		in, out := &in.Kopeio, &out.Kopeio
		*out = new(kops.KopeioNetworkingSpec)
		if err := Convert_v1alpha2_KopeioNetworkingSpec_To_kops_KopeioNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kopeio = nil
	}
	if in.Weave != nil {
		in, out := &in.Weave, &out.Weave
		*out = new(kops.WeaveNetworkingSpec)
		if err := Convert_v1alpha2_WeaveNetworkingSpec_To_kops_WeaveNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Weave = nil
	}
	if in.Flannel != nil {
		in, out := &in.Flannel, &out.Flannel
		*out = new(kops.FlannelNetworkingSpec)
		if err := Convert_v1alpha2_FlannelNetworkingSpec_To_kops_FlannelNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Flannel = nil
	}
	if in.Calico != nil {
		in, out := &in.Calico, &out.Calico
		*out = new(kops.CalicoNetworkingSpec)
		if err := Convert_v1alpha2_CalicoNetworkingSpec_To_kops_CalicoNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Calico = nil
	}
	if in.Canal != nil {
		in, out := &in.Canal, &out.Canal
		*out = new(kops.CanalNetworkingSpec)
		if err := Convert_v1alpha2_CanalNetworkingSpec_To_kops_CanalNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Canal = nil
	}
	if in.KubeRouter != nil {
		in, out := &in.KubeRouter, &out.KubeRouter
		*out = new(kops.KuberouterNetworkingSpec)
		if err := Convert_v1alpha2_KuberouterNetworkingSpec_To_kops_KuberouterNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeRouter = nil
	}
	if in.Romana != nil {
		in, out := &in.Romana, &out.Romana
		*out = new(kops.RomanaNetworkingSpec)
		if err := Convert_v1alpha2_RomanaNetworkingSpec_To_kops_RomanaNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Romana = nil
	}
	if in.AmazonVPC != nil {
		in, out := &in.AmazonVPC, &out.AmazonVPC
		*out = new(kops.AmazonVPCNetworkingSpec)
		if err := Convert_v1alpha2_AmazonVPCNetworkingSpec_To_kops_AmazonVPCNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AmazonVPC = nil
	}
	if in.Cilium != nil {
		in, out := &in.Cilium, &out.Cilium
		*out = new(kops.CiliumNetworkingSpec)
		if err := Convert_v1alpha2_CiliumNetworkingSpec_To_kops_CiliumNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Cilium = nil
	}
	if in.LyftVPC != nil {
		in, out := &in.LyftVPC, &out.LyftVPC
		*out = new(kops.LyftVPCNetworkingSpec)
		if err := Convert_v1alpha2_LyftVPCNetworkingSpec_To_kops_LyftVPCNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LyftVPC = nil
	}
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = new(kops.GCPNetworkingSpec)
		if err := Convert_v1alpha2_GCPNetworkingSpec_To_kops_GCPNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GCP = nil
	}
	return nil
}

// Convert_v1alpha2_NetworkingSpec_To_kops_NetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_NetworkingSpec_To_kops_NetworkingSpec(in *NetworkingSpec, out *kops.NetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_NetworkingSpec_To_kops_NetworkingSpec(in, out, s)
}

func autoConvert_kops_NetworkingSpec_To_v1alpha2_NetworkingSpec(in *kops.NetworkingSpec, out *NetworkingSpec, s conversion.Scope) error {
	out.NetworkID = in.NetworkID
	out.NetworkCIDR = in.NetworkCIDR
	out.AdditionalNetworkCIDRs = in.AdditionalNetworkCIDRs
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]ClusterSubnetSpec, len(*in))
		for i := range *in {
			if err := Convert_kops_ClusterSubnetSpec_To_v1alpha2_ClusterSubnetSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subnets = nil
	}
	out.TagSubnets = in.TagSubnets
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = new(TopologySpec)
		if err := Convert_kops_TopologySpec_To_v1alpha2_TopologySpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Topology = nil
	}
	if in.EgressProxy != nil {
		in, out := &in.EgressProxy, &out.EgressProxy
		*out = new(EgressProxySpec)
		if err := Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.EgressProxy = nil
	}
	out.NonMasqueradeCIDR = in.NonMasqueradeCIDR
	out.PodCIDR = in.PodCIDR
	out.ServiceClusterIPRange = in.ServiceClusterIPRange
	out.IsolateControlPlane = in.IsolateControlPlane
	if in.Classic != nil {
		in, out := &in.Classic, &out.Classic
		*out = new(ClassicNetworkingSpec)
		if err := Convert_kops_ClassicNetworkingSpec_To_v1alpha2_ClassicNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Classic = nil
	}
	if in.Kubenet != nil {
		in, out := &in.Kubenet, &out.Kubenet
		*out = new(KubenetNetworkingSpec)
		if err := Convert_kops_KubenetNetworkingSpec_To_v1alpha2_KubenetNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kubenet = nil
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(ExternalNetworkingSpec)
		if err := Convert_kops_ExternalNetworkingSpec_To_v1alpha2_ExternalNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.External = nil
	}
	if in.CNI != nil {
		in, out := &in.CNI, &out.CNI
		*out = new(CNINetworkingSpec)
		if err := Convert_kops_CNINetworkingSpec_To_v1alpha2_CNINetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CNI = nil
	}
	if in.Kopeio != nil {
		in, out := &in.Kopeio, &out.Kopeio
		*out = new(KopeioNetworkingSpec)
		if err := Convert_kops_KopeioNetworkingSpec_To_v1alpha2_KopeioNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Kopeio = nil
	}
	if in.Weave != nil {
		in, out := &in.Weave, &out.Weave
		*out = new(WeaveNetworkingSpec)
		if err := Convert_kops_WeaveNetworkingSpec_To_v1alpha2_WeaveNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Weave = nil
	}
	if in.Flannel != nil {
		in, out := &in.Flannel, &out.Flannel
		*out = new(FlannelNetworkingSpec)
		if err := Convert_kops_FlannelNetworkingSpec_To_v1alpha2_FlannelNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Flannel = nil
	}
	if in.Calico != nil {
		in, out := &in.Calico, &out.Calico
		*out = new(CalicoNetworkingSpec)
		if err := Convert_kops_CalicoNetworkingSpec_To_v1alpha2_CalicoNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Calico = nil
	}
	if in.Canal != nil {
		in, out := &in.Canal, &out.Canal
		*out = new(CanalNetworkingSpec)
		if err := Convert_kops_CanalNetworkingSpec_To_v1alpha2_CanalNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Canal = nil
	}
	if in.KubeRouter != nil {
		in, out := &in.KubeRouter, &out.KubeRouter
		*out = new(KuberouterNetworkingSpec)
		if err := Convert_kops_KuberouterNetworkingSpec_To_v1alpha2_KuberouterNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KubeRouter = nil
	}
	if in.Romana != nil {
		in, out := &in.Romana, &out.Romana
		*out = new(RomanaNetworkingSpec)
		if err := Convert_kops_RomanaNetworkingSpec_To_v1alpha2_RomanaNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Romana = nil
	}
	if in.AmazonVPC != nil {
		in, out := &in.AmazonVPC, &out.AmazonVPC
		*out = new(AmazonVPCNetworkingSpec)
		if err := Convert_kops_AmazonVPCNetworkingSpec_To_v1alpha2_AmazonVPCNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AmazonVPC = nil
	}
	if in.Cilium != nil {
		in, out := &in.Cilium, &out.Cilium
		*out = new(CiliumNetworkingSpec)
		if err := Convert_kops_CiliumNetworkingSpec_To_v1alpha2_CiliumNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Cilium = nil
	}
	if in.LyftVPC != nil {
		in, out := &in.LyftVPC, &out.LyftVPC
		*out = new(LyftVPCNetworkingSpec)
		if err := Convert_kops_LyftVPCNetworkingSpec_To_v1alpha2_LyftVPCNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.LyftVPC = nil
	}
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = new(GCPNetworkingSpec)
		if err := Convert_kops_GCPNetworkingSpec_To_v1alpha2_GCPNetworkingSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GCP = nil
	}
	return nil
}

// Convert_kops_NetworkingSpec_To_v1alpha2_NetworkingSpec is an autogenerated conversion function.
func Convert_kops_NetworkingSpec_To_v1alpha2_NetworkingSpec(in *kops.NetworkingSpec, out *NetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_NetworkingSpec_To_v1alpha2_NetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_NodeAuthorizationSpec_To_kops_NodeAuthorizationSpec(in *NodeAuthorizationSpec, out *kops.NodeAuthorizationSpec, s conversion.Scope) error {
	if in.NodeAuthorizer != nil {
		in, out := &in.NodeAuthorizer, &out.NodeAuthorizer
		*out = new(kops.NodeAuthorizerSpec)
		if err := Convert_v1alpha2_NodeAuthorizerSpec_To_kops_NodeAuthorizerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeAuthorizer = nil
	}
	return nil
}

// Convert_v1alpha2_NodeAuthorizationSpec_To_kops_NodeAuthorizationSpec is an autogenerated conversion function.
func Convert_v1alpha2_NodeAuthorizationSpec_To_kops_NodeAuthorizationSpec(in *NodeAuthorizationSpec, out *kops.NodeAuthorizationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_NodeAuthorizationSpec_To_kops_NodeAuthorizationSpec(in, out, s)
}

func autoConvert_kops_NodeAuthorizationSpec_To_v1alpha2_NodeAuthorizationSpec(in *kops.NodeAuthorizationSpec, out *NodeAuthorizationSpec, s conversion.Scope) error {
	if in.NodeAuthorizer != nil {
		in, out := &in.NodeAuthorizer, &out.NodeAuthorizer
		*out = new(NodeAuthorizerSpec)
		if err := Convert_kops_NodeAuthorizerSpec_To_v1alpha2_NodeAuthorizerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NodeAuthorizer = nil
	}
	return nil
}

// Convert_kops_NodeAuthorizationSpec_To_v1alpha2_NodeAuthorizationSpec is an autogenerated conversion function.
func Convert_kops_NodeAuthorizationSpec_To_v1alpha2_NodeAuthorizationSpec(in *kops.NodeAuthorizationSpec, out *NodeAuthorizationSpec, s conversion.Scope) error {
	return autoConvert_kops_NodeAuthorizationSpec_To_v1alpha2_NodeAuthorizationSpec(in, out, s)
}

func autoConvert_v1alpha2_NodeAuthorizerSpec_To_kops_NodeAuthorizerSpec(in *NodeAuthorizerSpec, out *kops.NodeAuthorizerSpec, s conversion.Scope) error {
	out.Authorizer = in.Authorizer
	out.Features = in.Features
	out.Image = in.Image
	out.NodeURL = in.NodeURL
	out.Port = in.Port
	out.Interval = in.Interval
	out.Timeout = in.Timeout
	out.TokenTTL = in.TokenTTL
	return nil
}

// Convert_v1alpha2_NodeAuthorizerSpec_To_kops_NodeAuthorizerSpec is an autogenerated conversion function.
func Convert_v1alpha2_NodeAuthorizerSpec_To_kops_NodeAuthorizerSpec(in *NodeAuthorizerSpec, out *kops.NodeAuthorizerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_NodeAuthorizerSpec_To_kops_NodeAuthorizerSpec(in, out, s)
}

func autoConvert_kops_NodeAuthorizerSpec_To_v1alpha2_NodeAuthorizerSpec(in *kops.NodeAuthorizerSpec, out *NodeAuthorizerSpec, s conversion.Scope) error {
	out.Authorizer = in.Authorizer
	out.Features = in.Features
	out.Image = in.Image
	out.NodeURL = in.NodeURL
	out.Port = in.Port
	out.Interval = in.Interval
	out.Timeout = in.Timeout
	out.TokenTTL = in.TokenTTL
	return nil
}

// Convert_kops_NodeAuthorizerSpec_To_v1alpha2_NodeAuthorizerSpec is an autogenerated conversion function.
func Convert_kops_NodeAuthorizerSpec_To_v1alpha2_NodeAuthorizerSpec(in *kops.NodeAuthorizerSpec, out *NodeAuthorizerSpec, s conversion.Scope) error {
	return autoConvert_kops_NodeAuthorizerSpec_To_v1alpha2_NodeAuthorizerSpec(in, out, s)
}

func autoConvert_v1alpha2_NodeLocalDNSConfig_To_kops_NodeLocalDNSConfig(in *NodeLocalDNSConfig, out *kops.NodeLocalDNSConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.ExternalCoreFile = in.ExternalCoreFile
	out.AdditionalConfig = in.AdditionalConfig
	out.Image = in.Image
	out.LocalIP = in.LocalIP
	out.ForwardToKubeDNS = in.ForwardToKubeDNS
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.PodAnnotations = in.PodAnnotations
	return nil
}

// Convert_v1alpha2_NodeLocalDNSConfig_To_kops_NodeLocalDNSConfig is an autogenerated conversion function.
func Convert_v1alpha2_NodeLocalDNSConfig_To_kops_NodeLocalDNSConfig(in *NodeLocalDNSConfig, out *kops.NodeLocalDNSConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_NodeLocalDNSConfig_To_kops_NodeLocalDNSConfig(in, out, s)
}

func autoConvert_kops_NodeLocalDNSConfig_To_v1alpha2_NodeLocalDNSConfig(in *kops.NodeLocalDNSConfig, out *NodeLocalDNSConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.ExternalCoreFile = in.ExternalCoreFile
	out.AdditionalConfig = in.AdditionalConfig
	out.Image = in.Image
	out.LocalIP = in.LocalIP
	out.ForwardToKubeDNS = in.ForwardToKubeDNS
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.PodAnnotations = in.PodAnnotations
	return nil
}

// Convert_kops_NodeLocalDNSConfig_To_v1alpha2_NodeLocalDNSConfig is an autogenerated conversion function.
func Convert_kops_NodeLocalDNSConfig_To_v1alpha2_NodeLocalDNSConfig(in *kops.NodeLocalDNSConfig, out *NodeLocalDNSConfig, s conversion.Scope) error {
	return autoConvert_kops_NodeLocalDNSConfig_To_v1alpha2_NodeLocalDNSConfig(in, out, s)
}

func autoConvert_v1alpha2_NodeProblemDetectorConfig_To_kops_NodeProblemDetectorConfig(in *NodeProblemDetectorConfig, out *kops.NodeProblemDetectorConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Image = in.Image
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	out.CPULimit = in.CPULimit
	return nil
}

// Convert_v1alpha2_NodeProblemDetectorConfig_To_kops_NodeProblemDetectorConfig is an autogenerated conversion function.
func Convert_v1alpha2_NodeProblemDetectorConfig_To_kops_NodeProblemDetectorConfig(in *NodeProblemDetectorConfig, out *kops.NodeProblemDetectorConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_NodeProblemDetectorConfig_To_kops_NodeProblemDetectorConfig(in, out, s)
}

func autoConvert_kops_NodeProblemDetectorConfig_To_v1alpha2_NodeProblemDetectorConfig(in *kops.NodeProblemDetectorConfig, out *NodeProblemDetectorConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Image = in.Image
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	out.CPULimit = in.CPULimit
	return nil
}

// Convert_kops_NodeProblemDetectorConfig_To_v1alpha2_NodeProblemDetectorConfig is an autogenerated conversion function.
func Convert_kops_NodeProblemDetectorConfig_To_v1alpha2_NodeProblemDetectorConfig(in *kops.NodeProblemDetectorConfig, out *NodeProblemDetectorConfig, s conversion.Scope) error {
	return autoConvert_kops_NodeProblemDetectorConfig_To_v1alpha2_NodeProblemDetectorConfig(in, out, s)
}

func autoConvert_v1alpha2_NodeTerminationHandlerSpec_To_kops_NodeTerminationHandlerSpec(in *NodeTerminationHandlerSpec, out *kops.NodeTerminationHandlerSpec, s conversion.Scope) error {
	out.DeleteSQSMsgIfNodeNotFound = in.DeleteSQSMsgIfNodeNotFound
	out.Enabled = in.Enabled
	out.EnableSpotInterruptionDraining = in.EnableSpotInterruptionDraining
	out.EnableScheduledEventDraining = in.EnableScheduledEventDraining
	out.EnableRebalanceMonitoring = in.EnableRebalanceMonitoring
	out.EnableRebalanceDraining = in.EnableRebalanceDraining
	out.EnablePrometheusMetrics = in.EnablePrometheusMetrics
	out.EnableSQSTerminationDraining = in.EnableSQSTerminationDraining
	out.ExcludeFromLoadBalancers = in.ExcludeFromLoadBalancers
	out.ManagedASGTag = in.ManagedASGTag
	out.PodTerminationGracePeriod = in.PodTerminationGracePeriod
	out.TaintNode = in.TaintNode
	out.MemoryLimit = in.MemoryLimit
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.Version = in.Version
	out.WebhookTemplate = in.WebhookTemplate
	out.WebhookURL = in.WebhookURL
	return nil
}

// Convert_v1alpha2_NodeTerminationHandlerSpec_To_kops_NodeTerminationHandlerSpec is an autogenerated conversion function.
func Convert_v1alpha2_NodeTerminationHandlerSpec_To_kops_NodeTerminationHandlerSpec(in *NodeTerminationHandlerSpec, out *kops.NodeTerminationHandlerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_NodeTerminationHandlerSpec_To_kops_NodeTerminationHandlerSpec(in, out, s)
}

func autoConvert_kops_NodeTerminationHandlerSpec_To_v1alpha2_NodeTerminationHandlerSpec(in *kops.NodeTerminationHandlerSpec, out *NodeTerminationHandlerSpec, s conversion.Scope) error {
	out.DeleteSQSMsgIfNodeNotFound = in.DeleteSQSMsgIfNodeNotFound
	out.Enabled = in.Enabled
	out.EnableSpotInterruptionDraining = in.EnableSpotInterruptionDraining
	out.EnableScheduledEventDraining = in.EnableScheduledEventDraining
	out.EnableRebalanceMonitoring = in.EnableRebalanceMonitoring
	out.EnableRebalanceDraining = in.EnableRebalanceDraining
	out.EnablePrometheusMetrics = in.EnablePrometheusMetrics
	out.EnableSQSTerminationDraining = in.EnableSQSTerminationDraining
	out.ExcludeFromLoadBalancers = in.ExcludeFromLoadBalancers
	out.ManagedASGTag = in.ManagedASGTag
	out.PodTerminationGracePeriod = in.PodTerminationGracePeriod
	out.TaintNode = in.TaintNode
	out.MemoryLimit = in.MemoryLimit
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.Version = in.Version
	out.WebhookTemplate = in.WebhookTemplate
	out.WebhookURL = in.WebhookURL
	return nil
}

// Convert_kops_NodeTerminationHandlerSpec_To_v1alpha2_NodeTerminationHandlerSpec is an autogenerated conversion function.
func Convert_kops_NodeTerminationHandlerSpec_To_v1alpha2_NodeTerminationHandlerSpec(in *kops.NodeTerminationHandlerSpec, out *NodeTerminationHandlerSpec, s conversion.Scope) error {
	return autoConvert_kops_NodeTerminationHandlerSpec_To_v1alpha2_NodeTerminationHandlerSpec(in, out, s)
}

func autoConvert_v1alpha2_NvidiaGPUConfig_To_kops_NvidiaGPUConfig(in *NvidiaGPUConfig, out *kops.NvidiaGPUConfig, s conversion.Scope) error {
	out.DriverPackage = in.DriverPackage
	out.Enabled = in.Enabled
	if in.DCGMExporter != nil {
		in, out := &in.DCGMExporter, &out.DCGMExporter
		*out = new(kops.DCGMExporterConfig)
		if err := Convert_v1alpha2_DCGMExporterConfig_To_kops_DCGMExporterConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DCGMExporter = nil
	}
	return nil
}

// Convert_v1alpha2_NvidiaGPUConfig_To_kops_NvidiaGPUConfig is an autogenerated conversion function.
func Convert_v1alpha2_NvidiaGPUConfig_To_kops_NvidiaGPUConfig(in *NvidiaGPUConfig, out *kops.NvidiaGPUConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_NvidiaGPUConfig_To_kops_NvidiaGPUConfig(in, out, s)
}

func autoConvert_kops_NvidiaGPUConfig_To_v1alpha2_NvidiaGPUConfig(in *kops.NvidiaGPUConfig, out *NvidiaGPUConfig, s conversion.Scope) error {
	out.DriverPackage = in.DriverPackage
	out.Enabled = in.Enabled
	if in.DCGMExporter != nil {
		in, out := &in.DCGMExporter, &out.DCGMExporter
		*out = new(DCGMExporterConfig)
		if err := Convert_kops_DCGMExporterConfig_To_v1alpha2_DCGMExporterConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DCGMExporter = nil
	}
	return nil
}

// Convert_kops_NvidiaGPUConfig_To_v1alpha2_NvidiaGPUConfig is an autogenerated conversion function.
func Convert_kops_NvidiaGPUConfig_To_v1alpha2_NvidiaGPUConfig(in *kops.NvidiaGPUConfig, out *NvidiaGPUConfig, s conversion.Scope) error {
	return autoConvert_kops_NvidiaGPUConfig_To_v1alpha2_NvidiaGPUConfig(in, out, s)
}

func autoConvert_v1alpha2_OpenstackBlockStorageConfig_To_kops_OpenstackBlockStorageConfig(in *OpenstackBlockStorageConfig, out *kops.OpenstackBlockStorageConfig, s conversion.Scope) error {
	out.Version = in.Version
	out.IgnoreAZ = in.IgnoreAZ
	out.OverrideAZ = in.OverrideAZ
	out.IgnoreVolumeMicroVersion = in.IgnoreVolumeMicroVersion
	out.MetricsEnabled = in.MetricsEnabled
	out.CreateStorageClass = in.CreateStorageClass
	out.CSIPluginImage = in.CSIPluginImage
	out.CSITopologySupport = in.CSITopologySupport
	out.ClusterName = in.ClusterName
	return nil
}

// Convert_v1alpha2_OpenstackBlockStorageConfig_To_kops_OpenstackBlockStorageConfig is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackBlockStorageConfig_To_kops_OpenstackBlockStorageConfig(in *OpenstackBlockStorageConfig, out *kops.OpenstackBlockStorageConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackBlockStorageConfig_To_kops_OpenstackBlockStorageConfig(in, out, s)
}

func autoConvert_kops_OpenstackBlockStorageConfig_To_v1alpha2_OpenstackBlockStorageConfig(in *kops.OpenstackBlockStorageConfig, out *OpenstackBlockStorageConfig, s conversion.Scope) error {
	out.Version = in.Version
	out.IgnoreAZ = in.IgnoreAZ
	out.OverrideAZ = in.OverrideAZ
	out.IgnoreVolumeMicroVersion = in.IgnoreVolumeMicroVersion
	out.MetricsEnabled = in.MetricsEnabled
	out.CreateStorageClass = in.CreateStorageClass
	out.CSIPluginImage = in.CSIPluginImage
	out.CSITopologySupport = in.CSITopologySupport
	out.ClusterName = in.ClusterName
	return nil
}

// Convert_kops_OpenstackBlockStorageConfig_To_v1alpha2_OpenstackBlockStorageConfig is an autogenerated conversion function.
func Convert_kops_OpenstackBlockStorageConfig_To_v1alpha2_OpenstackBlockStorageConfig(in *kops.OpenstackBlockStorageConfig, out *OpenstackBlockStorageConfig, s conversion.Scope) error {
	return autoConvert_kops_OpenstackBlockStorageConfig_To_v1alpha2_OpenstackBlockStorageConfig(in, out, s)
}

func autoConvert_v1alpha2_OpenstackLoadbalancerConfig_To_kops_OpenstackLoadbalancerConfig(in *OpenstackLoadbalancerConfig, out *kops.OpenstackLoadbalancerConfig, s conversion.Scope) error {
	out.Method = in.Method
	out.Provider = in.Provider
	out.UseOctavia = in.UseOctavia
	out.FloatingNetwork = in.FloatingNetwork
	out.FloatingNetworkID = in.FloatingNetworkID
	out.FloatingSubnet = in.FloatingSubnet
	out.SubnetID = in.SubnetID
	out.ManageSecGroups = in.ManageSecGroups
	out.EnableIngressHostname = in.EnableIngressHostname
	out.IngressHostnameSuffix = in.IngressHostnameSuffix
	out.FlavorID = in.FlavorID
	return nil
}

// Convert_v1alpha2_OpenstackLoadbalancerConfig_To_kops_OpenstackLoadbalancerConfig is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackLoadbalancerConfig_To_kops_OpenstackLoadbalancerConfig(in *OpenstackLoadbalancerConfig, out *kops.OpenstackLoadbalancerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackLoadbalancerConfig_To_kops_OpenstackLoadbalancerConfig(in, out, s)
}

func autoConvert_kops_OpenstackLoadbalancerConfig_To_v1alpha2_OpenstackLoadbalancerConfig(in *kops.OpenstackLoadbalancerConfig, out *OpenstackLoadbalancerConfig, s conversion.Scope) error {
	out.Method = in.Method
	out.Provider = in.Provider
	out.UseOctavia = in.UseOctavia
	out.FloatingNetwork = in.FloatingNetwork
	out.FloatingNetworkID = in.FloatingNetworkID
	out.FloatingSubnet = in.FloatingSubnet
	out.SubnetID = in.SubnetID
	out.ManageSecGroups = in.ManageSecGroups
	out.EnableIngressHostname = in.EnableIngressHostname
	out.IngressHostnameSuffix = in.IngressHostnameSuffix
	out.FlavorID = in.FlavorID
	return nil
}

// Convert_kops_OpenstackLoadbalancerConfig_To_v1alpha2_OpenstackLoadbalancerConfig is an autogenerated conversion function.
func Convert_kops_OpenstackLoadbalancerConfig_To_v1alpha2_OpenstackLoadbalancerConfig(in *kops.OpenstackLoadbalancerConfig, out *OpenstackLoadbalancerConfig, s conversion.Scope) error {
	return autoConvert_kops_OpenstackLoadbalancerConfig_To_v1alpha2_OpenstackLoadbalancerConfig(in, out, s)
}

func autoConvert_v1alpha2_OpenstackMetadata_To_kops_OpenstackMetadata(in *OpenstackMetadata, out *kops.OpenstackMetadata, s conversion.Scope) error {
	out.ConfigDrive = in.ConfigDrive
	return nil
}

// Convert_v1alpha2_OpenstackMetadata_To_kops_OpenstackMetadata is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackMetadata_To_kops_OpenstackMetadata(in *OpenstackMetadata, out *kops.OpenstackMetadata, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackMetadata_To_kops_OpenstackMetadata(in, out, s)
}

func autoConvert_kops_OpenstackMetadata_To_v1alpha2_OpenstackMetadata(in *kops.OpenstackMetadata, out *OpenstackMetadata, s conversion.Scope) error {
	out.ConfigDrive = in.ConfigDrive
	return nil
}

// Convert_kops_OpenstackMetadata_To_v1alpha2_OpenstackMetadata is an autogenerated conversion function.
func Convert_kops_OpenstackMetadata_To_v1alpha2_OpenstackMetadata(in *kops.OpenstackMetadata, out *OpenstackMetadata, s conversion.Scope) error {
	return autoConvert_kops_OpenstackMetadata_To_v1alpha2_OpenstackMetadata(in, out, s)
}

func autoConvert_v1alpha2_OpenstackMonitor_To_kops_OpenstackMonitor(in *OpenstackMonitor, out *kops.OpenstackMonitor, s conversion.Scope) error {
	out.Delay = in.Delay
	out.Timeout = in.Timeout
	out.MaxRetries = in.MaxRetries
	return nil
}

// Convert_v1alpha2_OpenstackMonitor_To_kops_OpenstackMonitor is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackMonitor_To_kops_OpenstackMonitor(in *OpenstackMonitor, out *kops.OpenstackMonitor, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackMonitor_To_kops_OpenstackMonitor(in, out, s)
}

func autoConvert_kops_OpenstackMonitor_To_v1alpha2_OpenstackMonitor(in *kops.OpenstackMonitor, out *OpenstackMonitor, s conversion.Scope) error {
	out.Delay = in.Delay
	out.Timeout = in.Timeout
	out.MaxRetries = in.MaxRetries
	return nil
}

// Convert_kops_OpenstackMonitor_To_v1alpha2_OpenstackMonitor is an autogenerated conversion function.
func Convert_kops_OpenstackMonitor_To_v1alpha2_OpenstackMonitor(in *kops.OpenstackMonitor, out *OpenstackMonitor, s conversion.Scope) error {
	return autoConvert_kops_OpenstackMonitor_To_v1alpha2_OpenstackMonitor(in, out, s)
}

func autoConvert_v1alpha2_OpenstackNetwork_To_kops_OpenstackNetwork(in *OpenstackNetwork, out *kops.OpenstackNetwork, s conversion.Scope) error {
	out.AvailabilityZoneHints = in.AvailabilityZoneHints
	out.IPv6SupportDisabled = in.IPv6SupportDisabled
	out.PublicNetworkNames = in.PublicNetworkNames
	out.InternalNetworkNames = in.InternalNetworkNames
	out.AddressSortOrder = in.AddressSortOrder
	return nil
}

// Convert_v1alpha2_OpenstackNetwork_To_kops_OpenstackNetwork is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackNetwork_To_kops_OpenstackNetwork(in *OpenstackNetwork, out *kops.OpenstackNetwork, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackNetwork_To_kops_OpenstackNetwork(in, out, s)
}

func autoConvert_kops_OpenstackNetwork_To_v1alpha2_OpenstackNetwork(in *kops.OpenstackNetwork, out *OpenstackNetwork, s conversion.Scope) error {
	out.AvailabilityZoneHints = in.AvailabilityZoneHints
	out.IPv6SupportDisabled = in.IPv6SupportDisabled
	out.PublicNetworkNames = in.PublicNetworkNames
	out.InternalNetworkNames = in.InternalNetworkNames
	out.AddressSortOrder = in.AddressSortOrder
	return nil
}

// Convert_kops_OpenstackNetwork_To_v1alpha2_OpenstackNetwork is an autogenerated conversion function.
func Convert_kops_OpenstackNetwork_To_v1alpha2_OpenstackNetwork(in *kops.OpenstackNetwork, out *OpenstackNetwork, s conversion.Scope) error {
	return autoConvert_kops_OpenstackNetwork_To_v1alpha2_OpenstackNetwork(in, out, s)
}

func autoConvert_v1alpha2_OpenstackRouter_To_kops_OpenstackRouter(in *OpenstackRouter, out *kops.OpenstackRouter, s conversion.Scope) error {
	out.ExternalNetwork = in.ExternalNetwork
	out.DNSServers = in.DNSServers
	out.ExternalSubnet = in.ExternalSubnet
	out.AvailabilityZoneHints = in.AvailabilityZoneHints
	return nil
}

// Convert_v1alpha2_OpenstackRouter_To_kops_OpenstackRouter is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackRouter_To_kops_OpenstackRouter(in *OpenstackRouter, out *kops.OpenstackRouter, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackRouter_To_kops_OpenstackRouter(in, out, s)
}

func autoConvert_kops_OpenstackRouter_To_v1alpha2_OpenstackRouter(in *kops.OpenstackRouter, out *OpenstackRouter, s conversion.Scope) error {
	out.ExternalNetwork = in.ExternalNetwork
	out.DNSServers = in.DNSServers
	out.ExternalSubnet = in.ExternalSubnet
	out.AvailabilityZoneHints = in.AvailabilityZoneHints
	return nil
}

// Convert_kops_OpenstackRouter_To_v1alpha2_OpenstackRouter is an autogenerated conversion function.
func Convert_kops_OpenstackRouter_To_v1alpha2_OpenstackRouter(in *kops.OpenstackRouter, out *OpenstackRouter, s conversion.Scope) error {
	return autoConvert_kops_OpenstackRouter_To_v1alpha2_OpenstackRouter(in, out, s)
}

func autoConvert_v1alpha2_OpenstackSpec_To_kops_OpenstackSpec(in *OpenstackSpec, out *kops.OpenstackSpec, s conversion.Scope) error {
	if in.Loadbalancer != nil {
		in, out := &in.Loadbalancer, &out.Loadbalancer
		*out = new(kops.OpenstackLoadbalancerConfig)
		if err := Convert_v1alpha2_OpenstackLoadbalancerConfig_To_kops_OpenstackLoadbalancerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Loadbalancer = nil
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = new(kops.OpenstackMonitor)
		if err := Convert_v1alpha2_OpenstackMonitor_To_kops_OpenstackMonitor(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Monitor = nil
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(kops.OpenstackRouter)
		if err := Convert_v1alpha2_OpenstackRouter_To_kops_OpenstackRouter(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Router = nil
	}
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = new(kops.OpenstackBlockStorageConfig)
		if err := Convert_v1alpha2_OpenstackBlockStorageConfig_To_kops_OpenstackBlockStorageConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.BlockStorage = nil
	}
	out.InsecureSkipVerify = in.InsecureSkipVerify
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(kops.OpenstackNetwork)
		if err := Convert_v1alpha2_OpenstackNetwork_To_kops_OpenstackNetwork(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Network = nil
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(kops.OpenstackMetadata)
		if err := Convert_v1alpha2_OpenstackMetadata_To_kops_OpenstackMetadata(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Metadata = nil
	}
	return nil
}

// Convert_v1alpha2_OpenstackSpec_To_kops_OpenstackSpec is an autogenerated conversion function.
func Convert_v1alpha2_OpenstackSpec_To_kops_OpenstackSpec(in *OpenstackSpec, out *kops.OpenstackSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_OpenstackSpec_To_kops_OpenstackSpec(in, out, s)
}

func autoConvert_kops_OpenstackSpec_To_v1alpha2_OpenstackSpec(in *kops.OpenstackSpec, out *OpenstackSpec, s conversion.Scope) error {
	if in.Loadbalancer != nil {
		in, out := &in.Loadbalancer, &out.Loadbalancer
		*out = new(OpenstackLoadbalancerConfig)
		if err := Convert_kops_OpenstackLoadbalancerConfig_To_v1alpha2_OpenstackLoadbalancerConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Loadbalancer = nil
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = new(OpenstackMonitor)
		if err := Convert_kops_OpenstackMonitor_To_v1alpha2_OpenstackMonitor(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Monitor = nil
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(OpenstackRouter)
		if err := Convert_kops_OpenstackRouter_To_v1alpha2_OpenstackRouter(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Router = nil
	}
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = new(OpenstackBlockStorageConfig)
		if err := Convert_kops_OpenstackBlockStorageConfig_To_v1alpha2_OpenstackBlockStorageConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.BlockStorage = nil
	}
	out.InsecureSkipVerify = in.InsecureSkipVerify
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(OpenstackNetwork)
		if err := Convert_kops_OpenstackNetwork_To_v1alpha2_OpenstackNetwork(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Network = nil
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(OpenstackMetadata)
		if err := Convert_kops_OpenstackMetadata_To_v1alpha2_OpenstackMetadata(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Metadata = nil
	}
	return nil
}

// Convert_kops_OpenstackSpec_To_v1alpha2_OpenstackSpec is an autogenerated conversion function.
func Convert_kops_OpenstackSpec_To_v1alpha2_OpenstackSpec(in *kops.OpenstackSpec, out *OpenstackSpec, s conversion.Scope) error {
	return autoConvert_kops_OpenstackSpec_To_v1alpha2_OpenstackSpec(in, out, s)
}

func autoConvert_v1alpha2_PDCSIDriver_To_kops_PDCSIDriver(in *PDCSIDriver, out *kops.PDCSIDriver, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_PDCSIDriver_To_kops_PDCSIDriver is an autogenerated conversion function.
func Convert_v1alpha2_PDCSIDriver_To_kops_PDCSIDriver(in *PDCSIDriver, out *kops.PDCSIDriver, s conversion.Scope) error {
	return autoConvert_v1alpha2_PDCSIDriver_To_kops_PDCSIDriver(in, out, s)
}

func autoConvert_kops_PDCSIDriver_To_v1alpha2_PDCSIDriver(in *kops.PDCSIDriver, out *PDCSIDriver, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_kops_PDCSIDriver_To_v1alpha2_PDCSIDriver is an autogenerated conversion function.
func Convert_kops_PDCSIDriver_To_v1alpha2_PDCSIDriver(in *kops.PDCSIDriver, out *PDCSIDriver, s conversion.Scope) error {
	return autoConvert_kops_PDCSIDriver_To_v1alpha2_PDCSIDriver(in, out, s)
}

func autoConvert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(in *PackagesConfig, out *kops.PackagesConfig, s conversion.Scope) error {
	out.HashAmd64 = in.HashAmd64
	out.HashArm64 = in.HashArm64
	out.UrlAmd64 = in.UrlAmd64
	out.UrlArm64 = in.UrlArm64
	return nil
}

// Convert_v1alpha2_PackagesConfig_To_kops_PackagesConfig is an autogenerated conversion function.
func Convert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(in *PackagesConfig, out *kops.PackagesConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(in, out, s)
}

func autoConvert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(in *kops.PackagesConfig, out *PackagesConfig, s conversion.Scope) error {
	out.HashAmd64 = in.HashAmd64
	out.HashArm64 = in.HashArm64
	out.UrlAmd64 = in.UrlAmd64
	out.UrlArm64 = in.UrlArm64
	return nil
}

// Convert_kops_PackagesConfig_To_v1alpha2_PackagesConfig is an autogenerated conversion function.
func Convert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(in *kops.PackagesConfig, out *PackagesConfig, s conversion.Scope) error {
	return autoConvert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(in, out, s)
}

func autoConvert_v1alpha2_PodIdentityWebhookSpec_To_kops_PodIdentityWebhookSpec(in *PodIdentityWebhookSpec, out *kops.PodIdentityWebhookSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Replicas = in.Replicas
	return nil
}

// Convert_v1alpha2_PodIdentityWebhookSpec_To_kops_PodIdentityWebhookSpec is an autogenerated conversion function.
func Convert_v1alpha2_PodIdentityWebhookSpec_To_kops_PodIdentityWebhookSpec(in *PodIdentityWebhookSpec, out *kops.PodIdentityWebhookSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_PodIdentityWebhookSpec_To_kops_PodIdentityWebhookSpec(in, out, s)
}

func autoConvert_kops_PodIdentityWebhookSpec_To_v1alpha2_PodIdentityWebhookSpec(in *kops.PodIdentityWebhookSpec, out *PodIdentityWebhookSpec, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Replicas = in.Replicas
	return nil
}

// Convert_kops_PodIdentityWebhookSpec_To_v1alpha2_PodIdentityWebhookSpec is an autogenerated conversion function.
func Convert_kops_PodIdentityWebhookSpec_To_v1alpha2_PodIdentityWebhookSpec(in *kops.PodIdentityWebhookSpec, out *PodIdentityWebhookSpec, s conversion.Scope) error {
	return autoConvert_kops_PodIdentityWebhookSpec_To_v1alpha2_PodIdentityWebhookSpec(in, out, s)
}

func autoConvert_v1alpha2_RBACAuthorizationSpec_To_kops_RBACAuthorizationSpec(in *RBACAuthorizationSpec, out *kops.RBACAuthorizationSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_RBACAuthorizationSpec_To_kops_RBACAuthorizationSpec is an autogenerated conversion function.
func Convert_v1alpha2_RBACAuthorizationSpec_To_kops_RBACAuthorizationSpec(in *RBACAuthorizationSpec, out *kops.RBACAuthorizationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_RBACAuthorizationSpec_To_kops_RBACAuthorizationSpec(in, out, s)
}

func autoConvert_kops_RBACAuthorizationSpec_To_v1alpha2_RBACAuthorizationSpec(in *kops.RBACAuthorizationSpec, out *RBACAuthorizationSpec, s conversion.Scope) error {
	return nil
}

// Convert_kops_RBACAuthorizationSpec_To_v1alpha2_RBACAuthorizationSpec is an autogenerated conversion function.
func Convert_kops_RBACAuthorizationSpec_To_v1alpha2_RBACAuthorizationSpec(in *kops.RBACAuthorizationSpec, out *RBACAuthorizationSpec, s conversion.Scope) error {
	return autoConvert_kops_RBACAuthorizationSpec_To_v1alpha2_RBACAuthorizationSpec(in, out, s)
}

func autoConvert_v1alpha2_RollingUpdate_To_kops_RollingUpdate(in *RollingUpdate, out *kops.RollingUpdate, s conversion.Scope) error {
	out.DrainAndTerminate = in.DrainAndTerminate
	out.MaxUnavailable = in.MaxUnavailable
	out.MaxSurge = in.MaxSurge
	return nil
}

// Convert_v1alpha2_RollingUpdate_To_kops_RollingUpdate is an autogenerated conversion function.
func Convert_v1alpha2_RollingUpdate_To_kops_RollingUpdate(in *RollingUpdate, out *kops.RollingUpdate, s conversion.Scope) error {
	return autoConvert_v1alpha2_RollingUpdate_To_kops_RollingUpdate(in, out, s)
}

func autoConvert_kops_RollingUpdate_To_v1alpha2_RollingUpdate(in *kops.RollingUpdate, out *RollingUpdate, s conversion.Scope) error {
	out.DrainAndTerminate = in.DrainAndTerminate
	out.MaxUnavailable = in.MaxUnavailable
	out.MaxSurge = in.MaxSurge
	return nil
}

// Convert_kops_RollingUpdate_To_v1alpha2_RollingUpdate is an autogenerated conversion function.
func Convert_kops_RollingUpdate_To_v1alpha2_RollingUpdate(in *kops.RollingUpdate, out *RollingUpdate, s conversion.Scope) error {
	return autoConvert_kops_RollingUpdate_To_v1alpha2_RollingUpdate(in, out, s)
}

func autoConvert_v1alpha2_RomanaNetworkingSpec_To_kops_RomanaNetworkingSpec(in *RomanaNetworkingSpec, out *kops.RomanaNetworkingSpec, s conversion.Scope) error {
	out.DaemonServiceIP = in.DaemonServiceIP
	out.EtcdServiceIP = in.EtcdServiceIP
	return nil
}

// Convert_v1alpha2_RomanaNetworkingSpec_To_kops_RomanaNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_RomanaNetworkingSpec_To_kops_RomanaNetworkingSpec(in *RomanaNetworkingSpec, out *kops.RomanaNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_RomanaNetworkingSpec_To_kops_RomanaNetworkingSpec(in, out, s)
}

func autoConvert_kops_RomanaNetworkingSpec_To_v1alpha2_RomanaNetworkingSpec(in *kops.RomanaNetworkingSpec, out *RomanaNetworkingSpec, s conversion.Scope) error {
	out.DaemonServiceIP = in.DaemonServiceIP
	out.EtcdServiceIP = in.EtcdServiceIP
	return nil
}

// Convert_kops_RomanaNetworkingSpec_To_v1alpha2_RomanaNetworkingSpec is an autogenerated conversion function.
func Convert_kops_RomanaNetworkingSpec_To_v1alpha2_RomanaNetworkingSpec(in *kops.RomanaNetworkingSpec, out *RomanaNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_RomanaNetworkingSpec_To_v1alpha2_RomanaNetworkingSpec(in, out, s)
}

func autoConvert_v1alpha2_RouteSpec_To_kops_RouteSpec(in *RouteSpec, out *kops.RouteSpec, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Target = in.Target
	return nil
}

// Convert_v1alpha2_RouteSpec_To_kops_RouteSpec is an autogenerated conversion function.
func Convert_v1alpha2_RouteSpec_To_kops_RouteSpec(in *RouteSpec, out *kops.RouteSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_RouteSpec_To_kops_RouteSpec(in, out, s)
}

func autoConvert_kops_RouteSpec_To_v1alpha2_RouteSpec(in *kops.RouteSpec, out *RouteSpec, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Target = in.Target
	return nil
}

// Convert_kops_RouteSpec_To_v1alpha2_RouteSpec is an autogenerated conversion function.
func Convert_kops_RouteSpec_To_v1alpha2_RouteSpec(in *kops.RouteSpec, out *RouteSpec, s conversion.Scope) error {
	return autoConvert_kops_RouteSpec_To_v1alpha2_RouteSpec(in, out, s)
}

func autoConvert_v1alpha2_Runc_To_kops_Runc(in *Runc, out *kops.Runc, s conversion.Scope) error {
	out.Version = in.Version
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(kops.PackagesConfig)
		if err := Convert_v1alpha2_PackagesConfig_To_kops_PackagesConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Packages = nil
	}
	return nil
}

// Convert_v1alpha2_Runc_To_kops_Runc is an autogenerated conversion function.
func Convert_v1alpha2_Runc_To_kops_Runc(in *Runc, out *kops.Runc, s conversion.Scope) error {
	return autoConvert_v1alpha2_Runc_To_kops_Runc(in, out, s)
}

func autoConvert_kops_Runc_To_v1alpha2_Runc(in *kops.Runc, out *Runc, s conversion.Scope) error {
	out.Version = in.Version
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(PackagesConfig)
		if err := Convert_kops_PackagesConfig_To_v1alpha2_PackagesConfig(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Packages = nil
	}
	return nil
}

// Convert_kops_Runc_To_v1alpha2_Runc is an autogenerated conversion function.
func Convert_kops_Runc_To_v1alpha2_Runc(in *kops.Runc, out *Runc, s conversion.Scope) error {
	return autoConvert_kops_Runc_To_v1alpha2_Runc(in, out, s)
}

func autoConvert_v1alpha2_SSHCredential_To_kops_SSHCredential(in *SSHCredential, out *kops.SSHCredential, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_SSHCredentialSpec_To_kops_SSHCredentialSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_SSHCredential_To_kops_SSHCredential is an autogenerated conversion function.
func Convert_v1alpha2_SSHCredential_To_kops_SSHCredential(in *SSHCredential, out *kops.SSHCredential, s conversion.Scope) error {
	return autoConvert_v1alpha2_SSHCredential_To_kops_SSHCredential(in, out, s)
}

func autoConvert_kops_SSHCredential_To_v1alpha2_SSHCredential(in *kops.SSHCredential, out *SSHCredential, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_kops_SSHCredentialSpec_To_v1alpha2_SSHCredentialSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_kops_SSHCredential_To_v1alpha2_SSHCredential is an autogenerated conversion function.
func Convert_kops_SSHCredential_To_v1alpha2_SSHCredential(in *kops.SSHCredential, out *SSHCredential, s conversion.Scope) error {
	return autoConvert_kops_SSHCredential_To_v1alpha2_SSHCredential(in, out, s)
}

func autoConvert_v1alpha2_SSHCredentialList_To_kops_SSHCredentialList(in *SSHCredentialList, out *kops.SSHCredentialList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]kops.SSHCredential, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_SSHCredential_To_kops_SSHCredential(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_SSHCredentialList_To_kops_SSHCredentialList is an autogenerated conversion function.
func Convert_v1alpha2_SSHCredentialList_To_kops_SSHCredentialList(in *SSHCredentialList, out *kops.SSHCredentialList, s conversion.Scope) error {
	return autoConvert_v1alpha2_SSHCredentialList_To_kops_SSHCredentialList(in, out, s)
}

func autoConvert_kops_SSHCredentialList_To_v1alpha2_SSHCredentialList(in *kops.SSHCredentialList, out *SSHCredentialList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSHCredential, len(*in))
		for i := range *in {
			if err := Convert_kops_SSHCredential_To_v1alpha2_SSHCredential(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_kops_SSHCredentialList_To_v1alpha2_SSHCredentialList is an autogenerated conversion function.
func Convert_kops_SSHCredentialList_To_v1alpha2_SSHCredentialList(in *kops.SSHCredentialList, out *SSHCredentialList, s conversion.Scope) error {
	return autoConvert_kops_SSHCredentialList_To_v1alpha2_SSHCredentialList(in, out, s)
}

func autoConvert_v1alpha2_SSHCredentialSpec_To_kops_SSHCredentialSpec(in *SSHCredentialSpec, out *kops.SSHCredentialSpec, s conversion.Scope) error {
	out.PublicKey = in.PublicKey
	return nil
}

// Convert_v1alpha2_SSHCredentialSpec_To_kops_SSHCredentialSpec is an autogenerated conversion function.
func Convert_v1alpha2_SSHCredentialSpec_To_kops_SSHCredentialSpec(in *SSHCredentialSpec, out *kops.SSHCredentialSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_SSHCredentialSpec_To_kops_SSHCredentialSpec(in, out, s)
}

func autoConvert_kops_SSHCredentialSpec_To_v1alpha2_SSHCredentialSpec(in *kops.SSHCredentialSpec, out *SSHCredentialSpec, s conversion.Scope) error {
	out.PublicKey = in.PublicKey
	return nil
}

// Convert_kops_SSHCredentialSpec_To_v1alpha2_SSHCredentialSpec is an autogenerated conversion function.
func Convert_kops_SSHCredentialSpec_To_v1alpha2_SSHCredentialSpec(in *kops.SSHCredentialSpec, out *SSHCredentialSpec, s conversion.Scope) error {
	return autoConvert_kops_SSHCredentialSpec_To_v1alpha2_SSHCredentialSpec(in, out, s)
}

func autoConvert_v1alpha2_ServiceAccountExternalPermission_To_kops_ServiceAccountExternalPermission(in *ServiceAccountExternalPermission, out *kops.ServiceAccountExternalPermission, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	if in.AWS != nil {
		in, out := &in.AWS, &out.AWS
		*out = new(kops.AWSPermission)
		if err := Convert_v1alpha2_AWSPermission_To_kops_AWSPermission(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AWS = nil
	}
	return nil
}

// Convert_v1alpha2_ServiceAccountExternalPermission_To_kops_ServiceAccountExternalPermission is an autogenerated conversion function.
func Convert_v1alpha2_ServiceAccountExternalPermission_To_kops_ServiceAccountExternalPermission(in *ServiceAccountExternalPermission, out *kops.ServiceAccountExternalPermission, s conversion.Scope) error {
	return autoConvert_v1alpha2_ServiceAccountExternalPermission_To_kops_ServiceAccountExternalPermission(in, out, s)
}

func autoConvert_kops_ServiceAccountExternalPermission_To_v1alpha2_ServiceAccountExternalPermission(in *kops.ServiceAccountExternalPermission, out *ServiceAccountExternalPermission, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	if in.AWS != nil {
		in, out := &in.AWS, &out.AWS
		*out = new(AWSPermission)
		if err := Convert_kops_AWSPermission_To_v1alpha2_AWSPermission(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AWS = nil
	}
	return nil
}

// Convert_kops_ServiceAccountExternalPermission_To_v1alpha2_ServiceAccountExternalPermission is an autogenerated conversion function.
func Convert_kops_ServiceAccountExternalPermission_To_v1alpha2_ServiceAccountExternalPermission(in *kops.ServiceAccountExternalPermission, out *ServiceAccountExternalPermission, s conversion.Scope) error {
	return autoConvert_kops_ServiceAccountExternalPermission_To_v1alpha2_ServiceAccountExternalPermission(in, out, s)
}

func autoConvert_v1alpha2_ServiceAccountIssuerDiscoveryConfig_To_kops_ServiceAccountIssuerDiscoveryConfig(in *ServiceAccountIssuerDiscoveryConfig, out *kops.ServiceAccountIssuerDiscoveryConfig, s conversion.Scope) error {
	out.DiscoveryStore = in.DiscoveryStore
	out.EnableAWSOIDCProvider = in.EnableAWSOIDCProvider
	out.AdditionalAudiences = in.AdditionalAudiences
	return nil
}

// Convert_v1alpha2_ServiceAccountIssuerDiscoveryConfig_To_kops_ServiceAccountIssuerDiscoveryConfig is an autogenerated conversion function.
func Convert_v1alpha2_ServiceAccountIssuerDiscoveryConfig_To_kops_ServiceAccountIssuerDiscoveryConfig(in *ServiceAccountIssuerDiscoveryConfig, out *kops.ServiceAccountIssuerDiscoveryConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_ServiceAccountIssuerDiscoveryConfig_To_kops_ServiceAccountIssuerDiscoveryConfig(in, out, s)
}

func autoConvert_kops_ServiceAccountIssuerDiscoveryConfig_To_v1alpha2_ServiceAccountIssuerDiscoveryConfig(in *kops.ServiceAccountIssuerDiscoveryConfig, out *ServiceAccountIssuerDiscoveryConfig, s conversion.Scope) error {
	out.DiscoveryStore = in.DiscoveryStore
	out.EnableAWSOIDCProvider = in.EnableAWSOIDCProvider
	out.AdditionalAudiences = in.AdditionalAudiences
	return nil
}

// Convert_kops_ServiceAccountIssuerDiscoveryConfig_To_v1alpha2_ServiceAccountIssuerDiscoveryConfig is an autogenerated conversion function.
func Convert_kops_ServiceAccountIssuerDiscoveryConfig_To_v1alpha2_ServiceAccountIssuerDiscoveryConfig(in *kops.ServiceAccountIssuerDiscoveryConfig, out *ServiceAccountIssuerDiscoveryConfig, s conversion.Scope) error {
	return autoConvert_kops_ServiceAccountIssuerDiscoveryConfig_To_v1alpha2_ServiceAccountIssuerDiscoveryConfig(in, out, s)
}

func autoConvert_v1alpha2_SnapshotControllerConfig_To_kops_SnapshotControllerConfig(in *SnapshotControllerConfig, out *kops.SnapshotControllerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.InstallDefaultClass = in.InstallDefaultClass
	return nil
}

// Convert_v1alpha2_SnapshotControllerConfig_To_kops_SnapshotControllerConfig is an autogenerated conversion function.
func Convert_v1alpha2_SnapshotControllerConfig_To_kops_SnapshotControllerConfig(in *SnapshotControllerConfig, out *kops.SnapshotControllerConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_SnapshotControllerConfig_To_kops_SnapshotControllerConfig(in, out, s)
}

func autoConvert_kops_SnapshotControllerConfig_To_v1alpha2_SnapshotControllerConfig(in *kops.SnapshotControllerConfig, out *SnapshotControllerConfig, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.InstallDefaultClass = in.InstallDefaultClass
	return nil
}

// Convert_kops_SnapshotControllerConfig_To_v1alpha2_SnapshotControllerConfig is an autogenerated conversion function.
func Convert_kops_SnapshotControllerConfig_To_v1alpha2_SnapshotControllerConfig(in *kops.SnapshotControllerConfig, out *SnapshotControllerConfig, s conversion.Scope) error {
	return autoConvert_kops_SnapshotControllerConfig_To_v1alpha2_SnapshotControllerConfig(in, out, s)
}

func autoConvert_v1alpha2_TargetSpec_To_kops_TargetSpec(in *TargetSpec, out *kops.TargetSpec, s conversion.Scope) error {
	if in.Terraform != nil {
		in, out := &in.Terraform, &out.Terraform
		*out = new(kops.TerraformSpec)
		if err := Convert_v1alpha2_TerraformSpec_To_kops_TerraformSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Terraform = nil
	}
	return nil
}

// Convert_v1alpha2_TargetSpec_To_kops_TargetSpec is an autogenerated conversion function.
func Convert_v1alpha2_TargetSpec_To_kops_TargetSpec(in *TargetSpec, out *kops.TargetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_TargetSpec_To_kops_TargetSpec(in, out, s)
}

func autoConvert_kops_TargetSpec_To_v1alpha2_TargetSpec(in *kops.TargetSpec, out *TargetSpec, s conversion.Scope) error {
	if in.Terraform != nil {
		in, out := &in.Terraform, &out.Terraform
		*out = new(TerraformSpec)
		if err := Convert_kops_TerraformSpec_To_v1alpha2_TerraformSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Terraform = nil
	}
	return nil
}

// Convert_kops_TargetSpec_To_v1alpha2_TargetSpec is an autogenerated conversion function.
func Convert_kops_TargetSpec_To_v1alpha2_TargetSpec(in *kops.TargetSpec, out *TargetSpec, s conversion.Scope) error {
	return autoConvert_kops_TargetSpec_To_v1alpha2_TargetSpec(in, out, s)
}

func autoConvert_v1alpha2_TerraformSpec_To_kops_TerraformSpec(in *TerraformSpec, out *kops.TerraformSpec, s conversion.Scope) error {
	out.ProviderExtraConfig = in.ProviderExtraConfig
	out.FilesProviderExtraConfig = in.FilesProviderExtraConfig
	return nil
}

// Convert_v1alpha2_TerraformSpec_To_kops_TerraformSpec is an autogenerated conversion function.
func Convert_v1alpha2_TerraformSpec_To_kops_TerraformSpec(in *TerraformSpec, out *kops.TerraformSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_TerraformSpec_To_kops_TerraformSpec(in, out, s)
}

func autoConvert_kops_TerraformSpec_To_v1alpha2_TerraformSpec(in *kops.TerraformSpec, out *TerraformSpec, s conversion.Scope) error {
	out.ProviderExtraConfig = in.ProviderExtraConfig
	out.FilesProviderExtraConfig = in.FilesProviderExtraConfig
	return nil
}

// Convert_kops_TerraformSpec_To_v1alpha2_TerraformSpec is an autogenerated conversion function.
func Convert_kops_TerraformSpec_To_v1alpha2_TerraformSpec(in *kops.TerraformSpec, out *TerraformSpec, s conversion.Scope) error {
	return autoConvert_kops_TerraformSpec_To_v1alpha2_TerraformSpec(in, out, s)
}

func autoConvert_v1alpha2_TopologySpec_To_kops_TopologySpec(in *TopologySpec, out *kops.TopologySpec, s conversion.Scope) error {
	// INFO: in.Masters opted out of conversion generation
	// INFO: in.Nodes opted out of conversion generation
	if in.Bastion != nil {
		in, out := &in.Bastion, &out.Bastion
		*out = new(kops.BastionSpec)
		if err := Convert_v1alpha2_BastionSpec_To_kops_BastionSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Bastion = nil
	}
	out.DNS = kops.DNSType(in.DNS)
	// INFO: in.LegacyDNS opted out of conversion generation
	return nil
}

func autoConvert_kops_TopologySpec_To_v1alpha2_TopologySpec(in *kops.TopologySpec, out *TopologySpec, s conversion.Scope) error {
	if in.Bastion != nil {
		in, out := &in.Bastion, &out.Bastion
		*out = new(BastionSpec)
		if err := Convert_kops_BastionSpec_To_v1alpha2_BastionSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Bastion = nil
	}
	out.DNS = DNSType(in.DNS)
	return nil
}

func autoConvert_v1alpha2_UserData_To_kops_UserData(in *UserData, out *kops.UserData, s conversion.Scope) error {
	out.Name = in.Name
	out.Type = in.Type
	out.Content = in.Content
	return nil
}

// Convert_v1alpha2_UserData_To_kops_UserData is an autogenerated conversion function.
func Convert_v1alpha2_UserData_To_kops_UserData(in *UserData, out *kops.UserData, s conversion.Scope) error {
	return autoConvert_v1alpha2_UserData_To_kops_UserData(in, out, s)
}

func autoConvert_kops_UserData_To_v1alpha2_UserData(in *kops.UserData, out *UserData, s conversion.Scope) error {
	out.Name = in.Name
	out.Type = in.Type
	out.Content = in.Content
	return nil
}

// Convert_kops_UserData_To_v1alpha2_UserData is an autogenerated conversion function.
func Convert_kops_UserData_To_v1alpha2_UserData(in *kops.UserData, out *UserData, s conversion.Scope) error {
	return autoConvert_kops_UserData_To_v1alpha2_UserData(in, out, s)
}

func autoConvert_v1alpha2_VolumeMountSpec_To_kops_VolumeMountSpec(in *VolumeMountSpec, out *kops.VolumeMountSpec, s conversion.Scope) error {
	out.Device = in.Device
	out.Filesystem = in.Filesystem
	out.FormatOptions = in.FormatOptions
	out.MountOptions = in.MountOptions
	out.Path = in.Path
	return nil
}

// Convert_v1alpha2_VolumeMountSpec_To_kops_VolumeMountSpec is an autogenerated conversion function.
func Convert_v1alpha2_VolumeMountSpec_To_kops_VolumeMountSpec(in *VolumeMountSpec, out *kops.VolumeMountSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_VolumeMountSpec_To_kops_VolumeMountSpec(in, out, s)
}

func autoConvert_kops_VolumeMountSpec_To_v1alpha2_VolumeMountSpec(in *kops.VolumeMountSpec, out *VolumeMountSpec, s conversion.Scope) error {
	out.Device = in.Device
	out.Filesystem = in.Filesystem
	out.FormatOptions = in.FormatOptions
	out.MountOptions = in.MountOptions
	out.Path = in.Path
	return nil
}

// Convert_kops_VolumeMountSpec_To_v1alpha2_VolumeMountSpec is an autogenerated conversion function.
func Convert_kops_VolumeMountSpec_To_v1alpha2_VolumeMountSpec(in *kops.VolumeMountSpec, out *VolumeMountSpec, s conversion.Scope) error {
	return autoConvert_kops_VolumeMountSpec_To_v1alpha2_VolumeMountSpec(in, out, s)
}

func autoConvert_v1alpha2_VolumeSpec_To_kops_VolumeSpec(in *VolumeSpec, out *kops.VolumeSpec, s conversion.Scope) error {
	out.DeleteOnTermination = in.DeleteOnTermination
	out.Device = in.Device
	out.Encrypted = in.Encrypted
	out.IOPS = in.IOPS
	out.Throughput = in.Throughput
	out.Key = in.Key
	out.Size = in.Size
	out.Type = in.Type
	return nil
}

// Convert_v1alpha2_VolumeSpec_To_kops_VolumeSpec is an autogenerated conversion function.
func Convert_v1alpha2_VolumeSpec_To_kops_VolumeSpec(in *VolumeSpec, out *kops.VolumeSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_VolumeSpec_To_kops_VolumeSpec(in, out, s)
}

func autoConvert_kops_VolumeSpec_To_v1alpha2_VolumeSpec(in *kops.VolumeSpec, out *VolumeSpec, s conversion.Scope) error {
	out.DeleteOnTermination = in.DeleteOnTermination
	out.Device = in.Device
	out.Encrypted = in.Encrypted
	out.IOPS = in.IOPS
	out.Throughput = in.Throughput
	out.Key = in.Key
	out.Size = in.Size
	out.Type = in.Type
	return nil
}

// Convert_kops_VolumeSpec_To_v1alpha2_VolumeSpec is an autogenerated conversion function.
func Convert_kops_VolumeSpec_To_v1alpha2_VolumeSpec(in *kops.VolumeSpec, out *VolumeSpec, s conversion.Scope) error {
	return autoConvert_kops_VolumeSpec_To_v1alpha2_VolumeSpec(in, out, s)
}

func autoConvert_v1alpha2_WarmPoolSpec_To_kops_WarmPoolSpec(in *WarmPoolSpec, out *kops.WarmPoolSpec, s conversion.Scope) error {
	out.MinSize = in.MinSize
	out.MaxSize = in.MaxSize
	out.EnableLifecycleHook = in.EnableLifecycleHook
	return nil
}

// Convert_v1alpha2_WarmPoolSpec_To_kops_WarmPoolSpec is an autogenerated conversion function.
func Convert_v1alpha2_WarmPoolSpec_To_kops_WarmPoolSpec(in *WarmPoolSpec, out *kops.WarmPoolSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_WarmPoolSpec_To_kops_WarmPoolSpec(in, out, s)
}

func autoConvert_kops_WarmPoolSpec_To_v1alpha2_WarmPoolSpec(in *kops.WarmPoolSpec, out *WarmPoolSpec, s conversion.Scope) error {
	out.MinSize = in.MinSize
	out.MaxSize = in.MaxSize
	out.EnableLifecycleHook = in.EnableLifecycleHook
	return nil
}

// Convert_kops_WarmPoolSpec_To_v1alpha2_WarmPoolSpec is an autogenerated conversion function.
func Convert_kops_WarmPoolSpec_To_v1alpha2_WarmPoolSpec(in *kops.WarmPoolSpec, out *WarmPoolSpec, s conversion.Scope) error {
	return autoConvert_kops_WarmPoolSpec_To_v1alpha2_WarmPoolSpec(in, out, s)
}

func autoConvert_v1alpha2_WeaveNetworkingSpec_To_kops_WeaveNetworkingSpec(in *WeaveNetworkingSpec, out *kops.WeaveNetworkingSpec, s conversion.Scope) error {
	out.MTU = in.MTU
	out.ConnLimit = in.ConnLimit
	out.NoMasqLocal = in.NoMasqLocal
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	out.CPULimit = in.CPULimit
	out.NetExtraArgs = in.NetExtraArgs
	out.NPCMemoryRequest = in.NPCMemoryRequest
	out.NPCCPURequest = in.NPCCPURequest
	out.NPCMemoryLimit = in.NPCMemoryLimit
	out.NPCCPULimit = in.NPCCPULimit
	out.NPCExtraArgs = in.NPCExtraArgs
	out.Version = in.Version
	return nil
}

// Convert_v1alpha2_WeaveNetworkingSpec_To_kops_WeaveNetworkingSpec is an autogenerated conversion function.
func Convert_v1alpha2_WeaveNetworkingSpec_To_kops_WeaveNetworkingSpec(in *WeaveNetworkingSpec, out *kops.WeaveNetworkingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_WeaveNetworkingSpec_To_kops_WeaveNetworkingSpec(in, out, s)
}

func autoConvert_kops_WeaveNetworkingSpec_To_v1alpha2_WeaveNetworkingSpec(in *kops.WeaveNetworkingSpec, out *WeaveNetworkingSpec, s conversion.Scope) error {
	out.MTU = in.MTU
	out.ConnLimit = in.ConnLimit
	out.NoMasqLocal = in.NoMasqLocal
	out.MemoryRequest = in.MemoryRequest
	out.CPURequest = in.CPURequest
	out.MemoryLimit = in.MemoryLimit
	out.CPULimit = in.CPULimit
	out.NetExtraArgs = in.NetExtraArgs
	out.NPCMemoryRequest = in.NPCMemoryRequest
	out.NPCCPURequest = in.NPCCPURequest
	out.NPCMemoryLimit = in.NPCMemoryLimit
	out.NPCCPULimit = in.NPCCPULimit
	out.NPCExtraArgs = in.NPCExtraArgs
	out.Version = in.Version
	return nil
}

// Convert_kops_WeaveNetworkingSpec_To_v1alpha2_WeaveNetworkingSpec is an autogenerated conversion function.
func Convert_kops_WeaveNetworkingSpec_To_v1alpha2_WeaveNetworkingSpec(in *kops.WeaveNetworkingSpec, out *WeaveNetworkingSpec, s conversion.Scope) error {
	return autoConvert_kops_WeaveNetworkingSpec_To_v1alpha2_WeaveNetworkingSpec(in, out, s)
}
